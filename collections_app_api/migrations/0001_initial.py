# Generated by Django 4.2.7 on 2024-08-06 20:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accession',
            fields=[
                ('accessionid', models.AutoField(db_column='AccessionID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('accessioncondition', models.CharField(blank=True, db_column='AccessionCondition', max_length=255, null=True)),
                ('accessionnumber', models.CharField(db_column='AccessionNumber', max_length=60)),
                ('dateaccessioned', models.DateField(blank=True, db_column='DateAccessioned', null=True)),
                ('dateacknowledged', models.DateField(blank=True, db_column='DateAcknowledged', null=True)),
                ('datereceived', models.DateField(blank=True, db_column='DateReceived', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('totalvalue', models.DecimalField(blank=True, db_column='TotalValue', decimal_places=2, max_digits=12, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('verbatimdate', models.CharField(blank=True, db_column='VerbatimDate', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
            ],
            options={
                'db_table': 'accession',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accessionagent',
            fields=[
                ('accessionagentid', models.AutoField(db_column='AccessionAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
            ],
            options={
                'db_table': 'accessionagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accessionattachment',
            fields=[
                ('accessionattachmentid', models.AutoField(db_column='AccessionAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'accessionattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accessionauthorization',
            fields=[
                ('accessionauthorizationid', models.AutoField(db_column='AccessionAuthorizationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'accessionauthorization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accessioncitation',
            fields=[
                ('accessioncitationid', models.AutoField(db_column='AccessionCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'accessioncitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccessionCopy',
            fields=[
                ('accessionid', models.AutoField(db_column='AccessionID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('accessioncondition', models.CharField(blank=True, db_column='AccessionCondition', max_length=255, null=True)),
                ('accessionnumber', models.CharField(db_column='AccessionNumber', max_length=60)),
                ('dateaccessioned', models.DateField(blank=True, db_column='DateAccessioned', null=True)),
                ('dateacknowledged', models.DateField(blank=True, db_column='DateAcknowledged', null=True)),
                ('datereceived', models.DateField(blank=True, db_column='DateReceived', null=True)),
                ('number1', models.FloatField(blank=True, db_column='Number1', null=True)),
                ('number2', models.FloatField(blank=True, db_column='Number2', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('totalvalue', models.DecimalField(blank=True, db_column='TotalValue', decimal_places=2, max_digits=12, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('verbatimdate', models.CharField(blank=True, db_column='VerbatimDate', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('divisionid', models.IntegerField(db_column='DivisionID')),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
                ('repositoryagreementid', models.IntegerField(blank=True, db_column='RepositoryAgreementID', null=True)),
                ('addressofrecordid', models.IntegerField(blank=True, db_column='AddressOfRecordID', null=True)),
            ],
            options={
                'db_table': 'accession_copy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressid', models.AutoField(db_column='AddressID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=255, null=True)),
                ('address3', models.CharField(blank=True, db_column='Address3', max_length=400, null=True)),
                ('address4', models.CharField(blank=True, db_column='Address4', max_length=400, null=True)),
                ('address5', models.CharField(blank=True, db_column='Address5', max_length=400, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=64, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=64, null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=50, null=True)),
                ('iscurrent', models.TextField(blank=True, db_column='IsCurrent', null=True)),
                ('isprimary', models.TextField(blank=True, db_column='IsPrimary', null=True)),
                ('isshipping', models.TextField(blank=True, db_column='IsShipping', null=True)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('phone1', models.CharField(blank=True, db_column='Phone1', max_length=50, null=True)),
                ('phone2', models.CharField(blank=True, db_column='Phone2', max_length=50, null=True)),
                ('positionheld', models.CharField(blank=True, db_column='PositionHeld', max_length=32, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=32, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('roomorbuilding', models.CharField(blank=True, db_column='RoomOrBuilding', max_length=50, null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=64, null=True)),
                ('typeofaddr', models.CharField(blank=True, db_column='TypeOfAddr', max_length=32, null=True)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Addressofrecord',
            fields=[
                ('addressofrecordid', models.AutoField(db_column='AddressOfRecordID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=64, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=64, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=32, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=64, null=True)),
            ],
            options={
                'db_table': 'addressofrecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('agentid', models.AutoField(db_column='AgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('abbreviation', models.CharField(blank=True, db_column='Abbreviation', max_length=50, null=True)),
                ('agenttype', models.IntegerField(db_column='AgentType')),
                ('dateofbirth', models.DateField(blank=True, db_column='DateOfBirth', null=True)),
                ('dateofbirthprecision', models.IntegerField(blank=True, db_column='DateOfBirthPrecision', null=True)),
                ('dateofdeath', models.DateField(blank=True, db_column='DateOfDeath', null=True)),
                ('dateofdeathprecision', models.IntegerField(blank=True, db_column='DateOfDeathPrecision', null=True)),
                ('datetype', models.IntegerField(blank=True, db_column='DateType', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=50, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('initials', models.CharField(blank=True, db_column='Initials', max_length=8, null=True)),
                ('interests', models.CharField(blank=True, db_column='Interests', max_length=255, null=True)),
                ('jobtitle', models.CharField(blank=True, db_column='JobTitle', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=256, null=True)),
                ('middleinitial', models.CharField(blank=True, db_column='MiddleInitial', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=50, null=True)),
                ('url', models.TextField(blank=True, db_column='URL', null=True)),
                ('suffix', models.CharField(blank=True, db_column='Suffix', max_length=50, null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.IntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('verbatimdate1', models.CharField(blank=True, db_column='VerbatimDate1', max_length=128, null=True)),
                ('verbatimdate2', models.CharField(blank=True, db_column='VerbatimDate2', max_length=128, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
            ],
            options={
                'db_table': 'agent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agentattachment',
            fields=[
                ('agentattachmentid', models.AutoField(db_column='AgentAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'agentattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agentgeography',
            fields=[
                ('agentgeographyid', models.AutoField(db_column='AgentGeographyID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(blank=True, db_column='Role', max_length=64, null=True)),
            ],
            options={
                'db_table': 'agentgeography',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agentidentifier',
            fields=[
                ('agentidentifierid', models.AutoField(db_column='AgentIdentifierID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.IntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('identifier', models.CharField(db_column='Identifier', max_length=2048)),
                ('identifiertype', models.CharField(blank=True, db_column='IdentifierType', max_length=256, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'agentidentifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agentspecialty',
            fields=[
                ('agentspecialtyid', models.AutoField(db_column='AgentSpecialtyID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('specialtyname', models.CharField(db_column='SpecialtyName', max_length=64)),
            ],
            options={
                'db_table': 'agentspecialty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agentvariant',
            fields=[
                ('agentvariantid', models.AutoField(db_column='AgentVariantID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=2, null=True)),
                ('language', models.CharField(blank=True, db_column='Language', max_length=2, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('vartype', models.IntegerField(db_column='VarType')),
                ('variant', models.CharField(blank=True, db_column='Variant', max_length=2, null=True)),
            ],
            options={
                'db_table': 'agentvariant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('appraisalid', models.AutoField(db_column='AppraisalID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('appraisaldate', models.DateField(db_column='AppraisalDate')),
                ('appraisalnumber', models.CharField(db_column='AppraisalNumber', max_length=64, unique=True)),
                ('appraisalvalue', models.DecimalField(blank=True, db_column='AppraisalValue', decimal_places=2, max_digits=12, null=True)),
                ('monetaryunittype', models.CharField(blank=True, db_column='MonetaryUnitType', max_length=8, null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
            ],
            options={
                'db_table': 'appraisal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('attachmentid', models.AutoField(db_column='AttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('attachmentlocation', models.CharField(blank=True, db_column='AttachmentLocation', max_length=128, null=True)),
                ('copyrightdate', models.CharField(blank=True, db_column='CopyrightDate', max_length=64, null=True)),
                ('copyrightholder', models.CharField(blank=True, db_column='CopyrightHolder', max_length=64, null=True)),
                ('credit', models.CharField(blank=True, db_column='Credit', max_length=64, null=True)),
                ('dateimaged', models.CharField(blank=True, db_column='DateImaged', max_length=64, null=True)),
                ('filecreateddate', models.DateField(blank=True, db_column='FileCreatedDate', null=True)),
                ('license', models.CharField(blank=True, db_column='License', max_length=64, null=True)),
                ('mimetype', models.CharField(blank=True, db_column='MimeType', max_length=1024, null=True)),
                ('origfilename', models.TextField(db_column='origFilename')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('tableid', models.SmallIntegerField(blank=True, db_column='TableID', null=True)),
                ('scopeid', models.IntegerField(blank=True, db_column='ScopeID', null=True)),
                ('scopetype', models.IntegerField(blank=True, db_column='ScopeType', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('ispublic', models.TextField(db_column='IsPublic')),
                ('capturedevice', models.CharField(blank=True, db_column='CaptureDevice', max_length=128, null=True)),
                ('licenselogourl', models.CharField(blank=True, db_column='LicenseLogoUrl', max_length=256, null=True)),
                ('metadatatext', models.CharField(blank=True, db_column='MetadataText', max_length=256, null=True)),
                ('subjectorientation', models.CharField(blank=True, db_column='SubjectOrientation', max_length=64, null=True)),
                ('subtype', models.CharField(blank=True, db_column='Subtype', max_length=64, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('attachmentstorageconfig', models.TextField(blank=True, db_column='AttachmentStorageConfig', null=True)),
            ],
            options={
                'db_table': 'attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachmentimageattribute',
            fields=[
                ('attachmentimageattributeid', models.AutoField(db_column='AttachmentImageAttributeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('creativecommons', models.CharField(blank=True, db_column='CreativeCommons', max_length=500, null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('magnification', models.FloatField(blank=True, db_column='Magnification', null=True)),
                ('mbimageid', models.IntegerField(blank=True, db_column='MBImageID', null=True)),
                ('resolution', models.FloatField(blank=True, db_column='Resolution', null=True)),
                ('timestamplastsend', models.DateTimeField(blank=True, db_column='TimestampLastSend', null=True)),
                ('timestamplastupdatecheck', models.DateTimeField(blank=True, db_column='TimestampLastUpdateCheck', null=True)),
                ('width', models.IntegerField(blank=True, db_column='Width', null=True)),
                ('imagetype', models.CharField(blank=True, db_column='ImageType', max_length=80, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=200, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=200, null=True)),
                ('viewdescription', models.CharField(blank=True, db_column='ViewDescription', max_length=80, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'attachmentimageattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachmentmetadata',
            fields=[
                ('attachmentmetadataid', models.AutoField(db_column='AttachmentMetadataID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('value', models.CharField(db_column='Value', max_length=128)),
            ],
            options={
                'db_table': 'attachmentmetadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachmenttag',
            fields=[
                ('attachmenttagid', models.AutoField(db_column='AttachmentTagID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('tag', models.CharField(db_column='Tag', max_length=64)),
            ],
            options={
                'db_table': 'attachmenttag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attributedef',
            fields=[
                ('attributedefid', models.AutoField(db_column='AttributeDefID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('datatype', models.SmallIntegerField(blank=True, db_column='DataType', null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=32, null=True)),
                ('tabletype', models.SmallIntegerField(blank=True, db_column='TableType', null=True)),
            ],
            options={
                'db_table': 'attributedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('authorid', models.AutoField(db_column='AuthorID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordernumber', models.SmallIntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Autonumberingscheme',
            fields=[
                ('autonumberingschemeid', models.AutoField(db_column='AutoNumberingSchemeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('formatname', models.CharField(blank=True, db_column='FormatName', max_length=64, null=True)),
                ('isnumericonly', models.TextField(db_column='IsNumericOnly')),
                ('schemeclassname', models.CharField(blank=True, db_column='SchemeClassName', max_length=64, null=True)),
                ('schemename', models.CharField(blank=True, db_column='SchemeName', max_length=64, null=True)),
                ('tablenumber', models.IntegerField(db_column='TableNumber')),
            ],
            options={
                'db_table': 'autonumberingscheme',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('borrowid', models.AutoField(db_column='BorrowID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('currentduedate', models.DateField(blank=True, db_column='CurrentDueDate', null=True)),
                ('dateclosed', models.DateField(blank=True, db_column='DateClosed', null=True)),
                ('invoicenumber', models.CharField(db_column='InvoiceNumber', max_length=50)),
                ('isclosed', models.TextField(blank=True, db_column='IsClosed', null=True)),
                ('isfinancialresponsibility', models.TextField(blank=True, db_column='IsFinancialResponsibility', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('originalduedate', models.DateField(blank=True, db_column='OriginalDueDate', null=True)),
                ('receiveddate', models.DateField(blank=True, db_column='ReceivedDate', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('borrowdate', models.DateField(blank=True, db_column='BorrowDate', null=True)),
                ('borrowdateprecision', models.IntegerField(blank=True, db_column='BorrowDatePrecision', null=True)),
                ('numberofitemsborrowed', models.IntegerField(blank=True, db_column='NumberOfItemsBorrowed', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
            ],
            options={
                'db_table': 'borrow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Borrowagent',
            fields=[
                ('borrowagentid', models.AutoField(db_column='BorrowAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=32)),
            ],
            options={
                'db_table': 'borrowagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Borrowattachment',
            fields=[
                ('borrowattachmentid', models.AutoField(db_column='BorrowAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'borrowattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Borrowmaterial',
            fields=[
                ('borrowmaterialid', models.AutoField(db_column='BorrowMaterialID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=250, null=True)),
                ('incomments', models.TextField(blank=True, db_column='InComments', null=True)),
                ('materialnumber', models.CharField(db_column='MaterialNumber', max_length=50)),
                ('outcomments', models.TextField(blank=True, db_column='OutComments', null=True)),
                ('quantity', models.SmallIntegerField(blank=True, db_column='Quantity', null=True)),
                ('quantityresolved', models.SmallIntegerField(blank=True, db_column='QuantityResolved', null=True)),
                ('quantityreturned', models.SmallIntegerField(blank=True, db_column='QuantityReturned', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
            ],
            options={
                'db_table': 'borrowmaterial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Borrowreturnmaterial',
            fields=[
                ('borrowreturnmaterialid', models.AutoField(db_column='BorrowReturnMaterialID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('quantity', models.SmallIntegerField(blank=True, db_column='Quantity', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('returneddate', models.DateField(blank=True, db_column='ReturnedDate', null=True)),
            ],
            options={
                'db_table': 'borrowreturnmaterial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Botmap',
            fields=[
                ('botmapid', models.IntegerField(db_column='botmapId', primary_key=True, serialize=False)),
                ('herbarium', models.CharField(blank=True, db_column='Herbarium', max_length=50, null=True)),
                ('accession_number', models.CharField(blank=True, db_column='Accession_number', max_length=64, null=True)),
                ('barcode', models.CharField(blank=True, db_column='Barcode', max_length=32, null=True)),
                ('class_field', models.CharField(blank=True, db_column='Class', max_length=500, null=True)),
                ('order', models.CharField(blank=True, db_column='Order', max_length=500, null=True)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=500, null=True)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=500, null=True)),
                ('species', models.CharField(blank=True, db_column='Species', max_length=500, null=True)),
                ('full_name', models.CharField(blank=True, db_column='Full_Name', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('preparations', models.TextField(blank=True, db_column='Preparations', null=True)),
                ('collection_object_attachments', models.TextField(blank=True, db_column='Collection_Object_Attachments', null=True)),
                ('collectors', models.TextField(blank=True, db_column='Collectors', null=True)),
                ('modified_date', models.DateTimeField(blank=True, db_column='Modified_Date', null=True)),
                ('redact_locality_co', models.TextField(blank=True, db_column='Redact_Locality_CO', null=True)),
                ('redact_locality_taxon', models.TextField(blank=True, db_column='Redact_Locality_Taxon', null=True)),
            ],
            options={
                'db_table': 'botmap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Botportal',
            fields=[
                ('botportalid', models.IntegerField(db_column='botportalId', primary_key=True, serialize=False)),
                ('accession_number', models.CharField(blank=True, db_column='Accession_Number', max_length=64, null=True)),
                ('barcode', models.CharField(blank=True, db_column='Barcode', max_length=32, null=True)),
                ('class_field', models.CharField(blank=True, db_column='Class', max_length=500, null=True)),
                ('order', models.CharField(blank=True, db_column='Order', max_length=500, null=True)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=500, null=True)),
                ('herbarium', models.CharField(blank=True, db_column='Herbarium', max_length=50, null=True)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=500, null=True)),
                ('species', models.CharField(blank=True, db_column='Species', max_length=500, null=True)),
                ('scientific_name', models.TextField(blank=True, db_column='Scientific_name', null=True)),
                ('type_status', models.CharField(blank=True, db_column='Type_status', max_length=50, null=True)),
                ('determiner', models.CharField(blank=True, db_column='Determiner', max_length=500, null=True)),
                ('determined_date', models.DateField(blank=True, db_column='Determined_Date', null=True)),
                ('continent', models.CharField(blank=True, db_column='Continent', max_length=500, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=500, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=500, null=True)),
                ('county', models.CharField(blank=True, db_column='County', max_length=500, null=True)),
                ('town', models.CharField(blank=True, db_column='Town', max_length=500, null=True)),
                ('locality', models.TextField(blank=True, db_column='Locality', null=True)),
                ('locality_continued', models.TextField(blank=True, db_column='Locality_continued', null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=20, null=True)),
                ('min_elevation', models.DecimalField(blank=True, db_column='Min__Elevation', decimal_places=10, max_digits=20, null=True)),
                ('max_elevation', models.DecimalField(blank=True, db_column='Max__Elevation', decimal_places=10, max_digits=20, null=True)),
                ('elevation_unit', models.CharField(blank=True, db_column='Elevation_Unit', max_length=50, null=True)),
                ('verbatim_date', models.CharField(blank=True, db_column='Verbatim_Date', max_length=50, null=True)),
                ('collectors', models.TextField(blank=True, db_column='Collectors', null=True)),
                ('collector_number', models.CharField(blank=True, db_column='Collector_Number', max_length=50, null=True)),
                ('start_date_year_field', models.IntegerField(blank=True, db_column='Start_Date_(Year)', null=True)),
                ('start_date_month_field', models.IntegerField(blank=True, db_column='Start_Date_(Month)', null=True)),
                ('start_date_day_field', models.IntegerField(blank=True, db_column='Start_Date_(Day)', null=True)),
                ('end_date_year_field', models.IntegerField(blank=True, db_column='End_Date_(Year)', null=True)),
                ('end_date_month_field', models.IntegerField(blank=True, db_column='End_Date_(Month)', null=True)),
                ('end_date_day_field', models.IntegerField(blank=True, db_column='End_Date_(Day)', null=True)),
                ('habitat', models.TextField(blank=True, db_column='Habitat', null=True)),
                ('phenology', models.CharField(blank=True, db_column='Phenology', max_length=50, null=True)),
                ('preparations', models.TextField(blank=True, db_column='Preparations', null=True)),
                ('specimen_description', models.TextField(blank=True, db_column='Specimen_description', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('timestamp_modified', models.DateTimeField(blank=True, db_column='Timestamp_Modified', null=True)),
                ('collection_object_attachments', models.TextField(blank=True, db_column='Collection_Object_Attachments', null=True)),
                ('redact_locality_taxon', models.TextField(blank=True, db_column='Redact_Locality_Taxon', null=True)),
                ('redact_locality_co', models.TextField(blank=True, db_column='Redact_Locality_CO', null=True)),
                ('redact_locality_accepted_taxon', models.TextField(blank=True, db_column='Redact_Locality_Accepted_Taxon', null=True)),
            ],
            options={
                'db_table': 'botportal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BotRecordset',
            fields=[
                ('recordsetid', models.AutoField(db_column='RecordSetID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('allpermissionlevel', models.IntegerField(blank=True, db_column='AllPermissionLevel', null=True)),
                ('tableid', models.IntegerField(db_column='TableID')),
                ('grouppermissionlevel', models.IntegerField(blank=True, db_column='GroupPermissionLevel', null=True)),
                ('name', models.CharField(db_column='Name', max_length=280)),
                ('ownerpermissionlevel', models.IntegerField(blank=True, db_column='OwnerPermissionLevel', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('type', models.IntegerField(db_column='Type')),
            ],
            options={
                'db_table': 'recordset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BryoImages',
            fields=[
                ('coreid', models.IntegerField()),
                ('identifier', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('accessuri', models.CharField(blank=True, db_column='accessURI', max_length=255, null=True)),
                ('thumbnailaccessuri', models.CharField(blank=True, db_column='thumbnailAccessURI', max_length=100, null=True)),
                ('goodqualityaccessuri', models.CharField(blank=True, db_column='goodQualityAccessURI', max_length=255, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
                ('creator', models.CharField(blank=True, max_length=100, null=True)),
                ('usageterms', models.CharField(blank=True, db_column='usageTerms', max_length=100, null=True)),
                ('webstatement', models.CharField(blank=True, db_column='webStatement', max_length=255, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('providermanagedid', models.CharField(blank=True, db_column='providerManagedID', max_length=100, null=True)),
                ('metadatadate', models.CharField(blank=True, db_column='metadataDate', max_length=100, null=True)),
                ('format', models.CharField(blank=True, max_length=100, null=True)),
                ('associatedspecimenreference', models.CharField(blank=True, db_column='associatedSpecimenReference', max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('subtype', models.CharField(blank=True, max_length=100, null=True)),
                ('metatdatalanguage', models.CharField(blank=True, db_column='metatdataLanguage', max_length=100, null=True)),
            ],
            options={
                'db_table': 'bryo_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BryoNobarcode',
            fields=[
                ('collectionobjectid', models.IntegerField(primary_key=True, serialize=False)),
                ('stationfieldnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=358, null=True)),
            ],
            options={
                'db_table': 'bryo_nobarcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bryoportal',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('institutioncode', models.CharField(blank=True, db_column='institutionCode', max_length=100, null=True)),
                ('collectioncode', models.CharField(blank=True, db_column='collectionCode', max_length=100, null=True)),
                ('ownerinstitutioncode', models.CharField(blank=True, db_column='ownerInstitutionCode', max_length=100, null=True)),
                ('collectionid', models.CharField(blank=True, db_column='collectionID', max_length=100, null=True)),
                ('basisofrecord', models.CharField(blank=True, db_column='basisOfRecord', max_length=100, null=True)),
                ('occurrenceid', models.CharField(blank=True, db_column='occurrenceID', max_length=100, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='catalogNumber', max_length=32, null=True)),
                ('othercatalognumbers', models.CharField(blank=True, db_column='otherCatalogNumbers', max_length=100, null=True)),
                ('higherclassification', models.CharField(blank=True, db_column='higherClassification', max_length=255, null=True)),
                ('kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=100, null=True)),
                ('order', models.CharField(blank=True, max_length=100, null=True)),
                ('family', models.CharField(blank=True, max_length=100, null=True)),
                ('scientificname', models.CharField(blank=True, db_column='scientificName', max_length=100, null=True)),
                ('taxonid', models.CharField(blank=True, db_column='taxonID', max_length=100, null=True)),
                ('scientificnameauthorship', models.CharField(blank=True, db_column='scientificNameAuthorship', max_length=100, null=True)),
                ('genus', models.CharField(blank=True, max_length=100, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=100, null=True)),
                ('specificepithet', models.CharField(blank=True, db_column='specificEpithet', max_length=100, null=True)),
                ('verbatimtaxonrank', models.CharField(blank=True, db_column='verbatimTaxonRank', max_length=100, null=True)),
                ('infraspecificepithet', models.CharField(blank=True, db_column='infraspecificEpithet', max_length=100, null=True)),
                ('taxonrank', models.CharField(blank=True, db_column='taxonRank', max_length=100, null=True)),
                ('identifiedby', models.CharField(blank=True, db_column='identifiedBy', max_length=100, null=True)),
                ('dateidentified', models.CharField(blank=True, db_column='dateIdentified', max_length=100, null=True)),
                ('identificationreferences', models.CharField(blank=True, db_column='identificationReferences', max_length=100, null=True)),
                ('identificationremarks', models.TextField(blank=True, db_column='identificationRemarks', null=True)),
                ('taxonremarks', models.CharField(blank=True, db_column='taxonRemarks', max_length=100, null=True)),
                ('identificationqualifier', models.CharField(blank=True, db_column='identificationQualifier', max_length=100, null=True)),
                ('typestatus', models.CharField(blank=True, db_column='typeStatus', max_length=100, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=255, null=True)),
                ('associatedcollectors', models.CharField(blank=True, db_column='associatedCollectors', max_length=100, null=True)),
                ('recordnumber', models.CharField(blank=True, db_column='recordNumber', max_length=100, null=True)),
                ('eventdate', models.CharField(blank=True, db_column='eventDate', max_length=100, null=True)),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('month', models.CharField(blank=True, max_length=100, null=True)),
                ('day', models.CharField(blank=True, max_length=100, null=True)),
                ('startdayofyear', models.CharField(blank=True, db_column='startDayOfYear', max_length=100, null=True)),
                ('enddayofyear', models.CharField(blank=True, db_column='endDayOfYear', max_length=100, null=True)),
                ('verbatimeventdate', models.CharField(blank=True, db_column='verbatimEventDate', max_length=100, null=True)),
                ('occurrenceremarks', models.TextField(blank=True, db_column='occurrenceRemarks', null=True)),
                ('habitat', models.TextField(blank=True, null=True)),
                ('substrate', models.CharField(blank=True, max_length=255, null=True)),
                ('verbatimattributes', models.TextField(blank=True, db_column='verbatimAttributes', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='fieldNumber', max_length=100, null=True)),
                ('eventid', models.CharField(blank=True, db_column='eventID', max_length=100, null=True)),
                ('informationwithheld', models.CharField(blank=True, db_column='informationWithheld', max_length=100, null=True)),
                ('datageneralizations', models.CharField(blank=True, db_column='dataGeneralizations', max_length=100, null=True)),
                ('dynamicproperties', models.CharField(blank=True, db_column='dynamicProperties', max_length=255, null=True)),
                ('associatedoccurrences', models.CharField(blank=True, db_column='associatedOccurrences', max_length=100, null=True)),
                ('associatedsequences', models.CharField(blank=True, db_column='associatedSequences', max_length=100, null=True)),
                ('associatedtaxa', models.TextField(blank=True, db_column='associatedTaxa', null=True)),
                ('reproductivecondition', models.CharField(blank=True, db_column='reproductiveCondition', max_length=100, null=True)),
                ('establishmentmeans', models.CharField(blank=True, db_column='establishmentMeans', max_length=100, null=True)),
                ('cultivationstatus', models.CharField(blank=True, db_column='cultivationStatus', max_length=100, null=True)),
                ('lifestage', models.CharField(blank=True, db_column='lifeStage', max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=100, null=True)),
                ('individualcount', models.CharField(blank=True, db_column='individualCount', max_length=100, null=True)),
                ('preparations', models.CharField(blank=True, max_length=100, null=True)),
                ('locationid', models.CharField(blank=True, db_column='locationID', max_length=100, null=True)),
                ('continent', models.CharField(blank=True, max_length=100, null=True)),
                ('waterbody', models.CharField(blank=True, db_column='waterBody', max_length=100, null=True)),
                ('islandgroup', models.CharField(blank=True, db_column='islandGroup', max_length=100, null=True)),
                ('island', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('stateprovince', models.CharField(blank=True, db_column='stateProvince', max_length=100, null=True)),
                ('county', models.CharField(blank=True, max_length=100, null=True)),
                ('municipality', models.CharField(blank=True, max_length=100, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('locationremarks', models.TextField(blank=True, db_column='locationRemarks', null=True)),
                ('localitysecurity', models.CharField(blank=True, db_column='localitySecurity', max_length=100, null=True)),
                ('localitysecurityreason', models.CharField(blank=True, db_column='localitySecurityReason', max_length=100, null=True)),
                ('decimallatitude', models.CharField(blank=True, db_column='decimalLatitude', max_length=100, null=True)),
                ('decimallongitude', models.CharField(blank=True, db_column='decimalLongitude', max_length=100, null=True)),
                ('geodeticdatum', models.CharField(blank=True, db_column='geodeticDatum', max_length=100, null=True)),
                ('coordinateuncertaintyinmeters', models.CharField(blank=True, db_column='coordinateUncertaintyInMeters', max_length=100, null=True)),
                ('verbatimcoordinates', models.CharField(blank=True, db_column='verbatimCoordinates', max_length=100, null=True)),
                ('georeferencedby', models.CharField(blank=True, db_column='georeferencedBy', max_length=100, null=True)),
                ('georeferenceprotocol', models.CharField(blank=True, db_column='georeferenceProtocol', max_length=100, null=True)),
                ('georeferencesources', models.TextField(blank=True, db_column='georeferenceSources', null=True)),
                ('georeferenceverificationstatus', models.CharField(blank=True, db_column='georeferenceVerificationStatus', max_length=100, null=True)),
                ('georeferenceremarks', models.TextField(blank=True, db_column='georeferenceRemarks', null=True)),
                ('minimumelevationinmeters', models.CharField(blank=True, db_column='minimumElevationInMeters', max_length=100, null=True)),
                ('maximumelevationinmeters', models.CharField(blank=True, db_column='maximumElevationInMeters', max_length=100, null=True)),
                ('minimumdepthinmeters', models.CharField(blank=True, db_column='minimumDepthInMeters', max_length=100, null=True)),
                ('maximumdepthinmeters', models.CharField(blank=True, db_column='maximumDepthInMeters', max_length=100, null=True)),
                ('verbatimdepth', models.CharField(blank=True, db_column='verbatimDepth', max_length=100, null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='verbatimElevation', max_length=100, null=True)),
                ('disposition', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('observeruid', models.CharField(blank=True, db_column='observerUid', max_length=100, null=True)),
                ('processingstatus', models.CharField(blank=True, db_column='processingStatus', max_length=100, null=True)),
                ('duplicatequantity', models.CharField(blank=True, db_column='duplicateQuantity', max_length=100, null=True)),
                ('labelproject', models.CharField(blank=True, db_column='labelProject', max_length=100, null=True)),
                ('recordenteredby', models.CharField(blank=True, db_column='recordEnteredBy', max_length=100, null=True)),
                ('dateentered', models.CharField(blank=True, db_column='dateEntered', max_length=100, null=True)),
                ('datelastmodified', models.CharField(blank=True, db_column='dateLastModified', max_length=100, null=True)),
                ('modified', models.CharField(blank=True, max_length=100, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('rightsholder', models.CharField(blank=True, db_column='rightsHolder', max_length=100, null=True)),
                ('accessrights', models.CharField(blank=True, db_column='accessRights', max_length=100, null=True)),
                ('sourceprimarykey_dbpk', models.CharField(blank=True, db_column='sourcePrimaryKey-dbpk', max_length=100, null=True)),
                ('collid', models.CharField(blank=True, db_column='collID', max_length=100, null=True)),
                ('recordid', models.CharField(blank=True, db_column='recordID', max_length=100, null=True)),
                ('references', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bryoportal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cch2Bryophyte',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('institutioncode', models.CharField(blank=True, db_column='institutionCode', max_length=100, null=True)),
                ('collectioncode', models.CharField(blank=True, db_column='collectionCode', max_length=100, null=True)),
                ('ownerinstitutioncode', models.CharField(blank=True, db_column='ownerInstitutionCode', max_length=100, null=True)),
                ('collectionid', models.CharField(blank=True, db_column='collectionID', max_length=100, null=True)),
                ('basisofrecord', models.CharField(blank=True, db_column='basisOfRecord', max_length=100, null=True)),
                ('occurrenceid', models.CharField(blank=True, db_column='occurrenceID', max_length=100, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='catalogNumber', max_length=32, null=True)),
                ('othercatalognumbers', models.CharField(blank=True, db_column='otherCatalogNumbers', max_length=100, null=True)),
                ('higherclassification', models.CharField(blank=True, db_column='higherClassification', max_length=255, null=True)),
                ('kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=100, null=True)),
                ('order', models.CharField(blank=True, max_length=100, null=True)),
                ('family', models.CharField(blank=True, max_length=100, null=True)),
                ('scientificname', models.CharField(blank=True, db_column='scientificName', max_length=100, null=True)),
                ('taxonid', models.CharField(blank=True, db_column='taxonID', max_length=100, null=True)),
                ('scientificnameauthorship', models.CharField(blank=True, db_column='scientificNameAuthorship', max_length=100, null=True)),
                ('genus', models.CharField(blank=True, max_length=100, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=100, null=True)),
                ('specificepithet', models.CharField(blank=True, db_column='specificEpithet', max_length=100, null=True)),
                ('verbatimtaxonrank', models.CharField(blank=True, db_column='verbatimTaxonRank', max_length=100, null=True)),
                ('infraspecificepithet', models.CharField(blank=True, db_column='infraspecificEpithet', max_length=100, null=True)),
                ('taxonrank', models.CharField(blank=True, db_column='taxonRank', max_length=100, null=True)),
                ('identifiedby', models.CharField(blank=True, db_column='identifiedBy', max_length=100, null=True)),
                ('dateidentified', models.CharField(blank=True, db_column='dateIdentified', max_length=100, null=True)),
                ('identificationreferences', models.CharField(blank=True, db_column='identificationReferences', max_length=100, null=True)),
                ('identificationremarks', models.TextField(blank=True, db_column='identificationRemarks', null=True)),
                ('taxonremarks', models.CharField(blank=True, db_column='taxonRemarks', max_length=100, null=True)),
                ('identificationqualifier', models.CharField(blank=True, db_column='identificationQualifier', max_length=100, null=True)),
                ('typestatus', models.CharField(blank=True, db_column='typeStatus', max_length=100, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=255, null=True)),
                ('associatedcollectors', models.CharField(blank=True, db_column='associatedCollectors', max_length=100, null=True)),
                ('recordnumber', models.CharField(blank=True, db_column='recordNumber', max_length=100, null=True)),
                ('eventdate', models.CharField(blank=True, db_column='eventDate', max_length=100, null=True)),
                ('eventdate2', models.CharField(blank=True, db_column='eventDate2', max_length=100, null=True)),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('month', models.CharField(blank=True, max_length=100, null=True)),
                ('day', models.CharField(blank=True, max_length=100, null=True)),
                ('startdayofyear', models.CharField(blank=True, db_column='startDayOfYear', max_length=100, null=True)),
                ('enddayofyear', models.CharField(blank=True, db_column='endDayOfYear', max_length=100, null=True)),
                ('verbatimeventdate', models.CharField(blank=True, db_column='verbatimEventDate', max_length=100, null=True)),
                ('occurrenceremarks', models.TextField(blank=True, db_column='occurrenceRemarks', null=True)),
                ('habitat', models.TextField(blank=True, null=True)),
                ('substrate', models.CharField(blank=True, max_length=255, null=True)),
                ('verbatimattributes', models.TextField(blank=True, db_column='verbatimAttributes', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='fieldNumber', max_length=100, null=True)),
                ('eventid', models.CharField(blank=True, db_column='eventID', max_length=100, null=True)),
                ('informationwithheld', models.CharField(blank=True, db_column='informationWithheld', max_length=100, null=True)),
                ('datageneralizations', models.CharField(blank=True, db_column='dataGeneralizations', max_length=100, null=True)),
                ('dynamicproperties', models.CharField(blank=True, db_column='dynamicProperties', max_length=255, null=True)),
                ('associatedoccurrences', models.CharField(blank=True, db_column='associatedOccurrences', max_length=100, null=True)),
                ('associatedsequences', models.CharField(blank=True, db_column='associatedSequences', max_length=100, null=True)),
                ('associatedtaxa', models.TextField(blank=True, db_column='associatedTaxa', null=True)),
                ('reproductivecondition', models.CharField(blank=True, db_column='reproductiveCondition', max_length=100, null=True)),
                ('establishmentmeans', models.CharField(blank=True, db_column='establishmentMeans', max_length=100, null=True)),
                ('cultivationstatus', models.CharField(blank=True, db_column='cultivationStatus', max_length=100, null=True)),
                ('lifestage', models.CharField(blank=True, db_column='lifeStage', max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=100, null=True)),
                ('individualcount', models.CharField(blank=True, db_column='individualCount', max_length=100, null=True)),
                ('preparations', models.CharField(blank=True, max_length=100, null=True)),
                ('locationid', models.CharField(blank=True, db_column='locationID', max_length=100, null=True)),
                ('continent', models.CharField(blank=True, max_length=100, null=True)),
                ('waterbody', models.CharField(blank=True, db_column='waterBody', max_length=100, null=True)),
                ('islandgroup', models.CharField(blank=True, db_column='islandGroup', max_length=100, null=True)),
                ('island', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('stateprovince', models.CharField(blank=True, db_column='stateProvince', max_length=100, null=True)),
                ('county', models.CharField(blank=True, max_length=100, null=True)),
                ('municipality', models.CharField(blank=True, max_length=100, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('locationremarks', models.TextField(blank=True, db_column='locationRemarks', null=True)),
                ('localitysecurity', models.CharField(blank=True, db_column='localitySecurity', max_length=100, null=True)),
                ('localitysecurityreason', models.CharField(blank=True, db_column='localitySecurityReason', max_length=100, null=True)),
                ('decimallatitude', models.CharField(blank=True, db_column='decimalLatitude', max_length=100, null=True)),
                ('decimallongitude', models.CharField(blank=True, db_column='decimalLongitude', max_length=100, null=True)),
                ('geodeticdatum', models.CharField(blank=True, db_column='geodeticDatum', max_length=100, null=True)),
                ('coordinateuncertaintyinmeters', models.CharField(blank=True, db_column='coordinateUncertaintyInMeters', max_length=100, null=True)),
                ('verbatimcoordinates', models.CharField(blank=True, db_column='verbatimCoordinates', max_length=100, null=True)),
                ('georeferencedby', models.CharField(blank=True, db_column='georeferencedBy', max_length=100, null=True)),
                ('georeferenceprotocol', models.CharField(blank=True, db_column='georeferenceProtocol', max_length=100, null=True)),
                ('georeferencesources', models.TextField(blank=True, db_column='georeferenceSources', null=True)),
                ('georeferenceverificationstatus', models.CharField(blank=True, db_column='georeferenceVerificationStatus', max_length=100, null=True)),
                ('georeferenceremarks', models.TextField(blank=True, db_column='georeferenceRemarks', null=True)),
                ('minimumelevationinmeters', models.CharField(blank=True, db_column='minimumElevationInMeters', max_length=100, null=True)),
                ('maximumelevationinmeters', models.CharField(blank=True, db_column='maximumElevationInMeters', max_length=100, null=True)),
                ('minimumdepthinmeters', models.CharField(blank=True, db_column='minimumDepthInMeters', max_length=100, null=True)),
                ('maximumdepthinmeters', models.CharField(blank=True, db_column='maximumDepthInMeters', max_length=100, null=True)),
                ('verbatimdepth', models.CharField(blank=True, db_column='verbatimDepth', max_length=100, null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='verbatimElevation', max_length=100, null=True)),
                ('disposition', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('observeruid', models.CharField(blank=True, db_column='observerUid', max_length=100, null=True)),
                ('processingstatus', models.CharField(blank=True, db_column='processingStatus', max_length=100, null=True)),
                ('duplicatequantity', models.CharField(blank=True, db_column='duplicateQuantity', max_length=100, null=True)),
                ('labelproject', models.CharField(blank=True, db_column='labelProject', max_length=100, null=True)),
                ('recordenteredby', models.CharField(blank=True, db_column='recordEnteredBy', max_length=100, null=True)),
                ('dateentered', models.CharField(blank=True, db_column='dateEntered', max_length=100, null=True)),
                ('datelastmodified', models.CharField(blank=True, db_column='dateLastModified', max_length=100, null=True)),
                ('modified', models.CharField(blank=True, max_length=100, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('rightsholder', models.CharField(blank=True, db_column='rightsHolder', max_length=100, null=True)),
                ('accessrights', models.CharField(blank=True, db_column='accessRights', max_length=100, null=True)),
                ('sourceprimarykey_dbpk', models.CharField(blank=True, db_column='sourcePrimaryKey-dbpk', max_length=100, null=True)),
                ('collid', models.CharField(blank=True, db_column='collID', max_length=100, null=True)),
                ('recordid', models.CharField(blank=True, db_column='recordID', max_length=100, null=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('catnum', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'cch2_bryophyte',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cch2Extra',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('institutioncode', models.CharField(blank=True, db_column='institutionCode', max_length=64, null=True)),
                ('collectioncode', models.CharField(blank=True, db_column='collectionCode', max_length=64, null=True)),
                ('ownerinstitutioncode', models.CharField(blank=True, db_column='ownerInstitutionCode', max_length=32, null=True)),
                ('collectionid', models.CharField(blank=True, db_column='collectionID', max_length=255, null=True)),
                ('basisofrecord', models.CharField(blank=True, db_column='basisOfRecord', max_length=32, null=True)),
                ('occurrenceid', models.CharField(blank=True, db_column='occurrenceID', max_length=255, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='catalogNumber', max_length=32, null=True)),
                ('othercatalognumbers', models.CharField(blank=True, db_column='otherCatalogNumbers', max_length=255, null=True)),
                ('higherclassification', models.CharField(blank=True, db_column='higherClassification', max_length=255, null=True)),
                ('kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=100, null=True)),
                ('order', models.CharField(blank=True, max_length=255, null=True)),
                ('family', models.CharField(blank=True, max_length=100, null=True)),
                ('scientificname', models.CharField(blank=True, db_column='scientificName', max_length=255, null=True)),
                ('taxonid', models.CharField(blank=True, db_column='taxonID', max_length=100, null=True)),
                ('scientificnameauthorship', models.CharField(blank=True, db_column='scientificNameAuthorship', max_length=255, null=True)),
                ('genus', models.CharField(blank=True, max_length=255, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=100, null=True)),
                ('specificepithet', models.CharField(blank=True, db_column='specificEpithet', max_length=255, null=True)),
                ('verbatimtaxonrank', models.CharField(blank=True, db_column='verbatimTaxonRank', max_length=100, null=True)),
                ('infraspecificepithet', models.CharField(blank=True, db_column='infraspecificEpithet', max_length=255, null=True)),
                ('taxonrank', models.CharField(blank=True, db_column='taxonRank', max_length=32, null=True)),
                ('identifiedby', models.CharField(blank=True, db_column='identifiedBy', max_length=255, null=True)),
                ('dateidentified', models.CharField(blank=True, db_column='dateIdentified', max_length=45, null=True)),
                ('identificationreferences', models.TextField(blank=True, db_column='identificationReferences', null=True)),
                ('identificationremarks', models.CharField(blank=True, db_column='identificationRemarks', max_length=100, null=True)),
                ('taxonremarks', models.CharField(blank=True, db_column='taxonRemarks', max_length=100, null=True)),
                ('identificationqualifier', models.CharField(blank=True, db_column='identificationQualifier', max_length=255, null=True)),
                ('typestatus', models.CharField(blank=True, db_column='typeStatus', max_length=255, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=255, null=True)),
                ('associatedcollectors', models.CharField(blank=True, db_column='associatedCollectors', max_length=255, null=True)),
                ('recordnumber', models.CharField(blank=True, db_column='recordNumber', max_length=45, null=True)),
                ('eventdate', models.DateField(blank=True, db_column='eventDate', null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('startdayofyear', models.IntegerField(blank=True, db_column='startDayOfYear', null=True)),
                ('enddayofyear', models.IntegerField(blank=True, db_column='endDayOfYear', null=True)),
                ('verbatimeventdate', models.CharField(blank=True, db_column='verbatimEventDate', max_length=255, null=True)),
                ('occurrenceremarks', models.TextField(blank=True, db_column='occurrenceRemarks', null=True)),
                ('habitat', models.TextField(blank=True, null=True)),
                ('substrate', models.CharField(blank=True, max_length=500, null=True)),
                ('verbatimattributes', models.TextField(blank=True, db_column='verbatimAttributes', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='fieldNumber', max_length=45, null=True)),
                ('eventid', models.CharField(blank=True, db_column='eventID', max_length=150, null=True)),
                ('informationwithheld', models.CharField(blank=True, db_column='informationWithheld', max_length=250, null=True)),
                ('datageneralizations', models.CharField(blank=True, db_column='dataGeneralizations', max_length=250, null=True)),
                ('dynamicproperties', models.TextField(blank=True, db_column='dynamicProperties', null=True)),
                ('associatedoccurrences', models.TextField(blank=True, db_column='associatedOccurrences', null=True)),
                ('associatedsequences', models.CharField(blank=True, db_column='associatedSequences', max_length=100, null=True)),
                ('associatedtaxa', models.TextField(blank=True, db_column='associatedTaxa', null=True)),
                ('reproductivecondition', models.CharField(blank=True, db_column='reproductiveCondition', max_length=255, null=True)),
                ('establishmentmeans', models.CharField(blank=True, db_column='establishmentMeans', max_length=150, null=True)),
                ('cultivationstatus', models.IntegerField(blank=True, db_column='cultivationStatus', null=True)),
                ('lifestage', models.CharField(blank=True, db_column='lifeStage', max_length=45, null=True)),
                ('sex', models.CharField(blank=True, max_length=45, null=True)),
                ('individualcount', models.CharField(blank=True, db_column='individualCount', max_length=45, null=True)),
                ('preparations', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('stateprovince', models.CharField(blank=True, db_column='stateProvince', max_length=255, null=True)),
                ('county', models.CharField(blank=True, max_length=255, null=True)),
                ('municipality', models.CharField(blank=True, max_length=255, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('locationremarks', models.TextField(blank=True, db_column='locationRemarks', null=True)),
                ('localitysecurity', models.IntegerField(blank=True, db_column='localitySecurity', null=True)),
                ('localitysecurityreason', models.CharField(blank=True, db_column='localitySecurityReason', max_length=100, null=True)),
                ('decimallatitude', models.FloatField(blank=True, db_column='decimalLatitude', null=True)),
                ('decimallongitude', models.FloatField(blank=True, db_column='decimalLongitude', null=True)),
                ('geodeticdatum', models.CharField(blank=True, db_column='geodeticDatum', max_length=255, null=True)),
                ('coordinateuncertaintyinmeters', models.IntegerField(blank=True, db_column='coordinateUncertaintyInMeters', null=True)),
                ('verbatimcoordinates', models.CharField(blank=True, db_column='verbatimCoordinates', max_length=255, null=True)),
                ('georeferencedby', models.CharField(blank=True, db_column='georeferencedBy', max_length=255, null=True)),
                ('georeferenceprotocol', models.CharField(blank=True, db_column='georeferenceProtocol', max_length=255, null=True)),
                ('georeferencesources', models.CharField(blank=True, db_column='georeferenceSources', max_length=255, null=True)),
                ('georeferenceverificationstatus', models.CharField(blank=True, db_column='georeferenceVerificationStatus', max_length=32, null=True)),
                ('georeferenceremarks', models.CharField(blank=True, db_column='georeferenceRemarks', max_length=500, null=True)),
                ('minimumelevationinmeters', models.IntegerField(blank=True, db_column='minimumElevationInMeters', null=True)),
                ('maximumelevationinmeters', models.IntegerField(blank=True, db_column='maximumElevationInMeters', null=True)),
                ('minimumdepthinmeters', models.IntegerField(blank=True, db_column='minimumDepthInMeters', null=True)),
                ('maximumdepthinmeters', models.IntegerField(blank=True, db_column='maximumDepthInMeters', null=True)),
                ('verbatimdepth', models.CharField(blank=True, db_column='verbatimDepth', max_length=50, null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='verbatimElevation', max_length=255, null=True)),
                ('disposition', models.CharField(blank=True, max_length=250, null=True)),
                ('language', models.CharField(blank=True, max_length=20, null=True)),
                ('observeruid', models.CharField(blank=True, db_column='observerUid', max_length=100, null=True)),
                ('processingstatus', models.CharField(blank=True, db_column='processingStatus', max_length=45, null=True)),
                ('duplicatequantity', models.IntegerField(blank=True, db_column='duplicateQuantity', null=True)),
                ('labelproject', models.CharField(blank=True, db_column='labelProject', max_length=100, null=True)),
                ('recordenteredby', models.CharField(blank=True, db_column='recordEnteredBy', max_length=250, null=True)),
                ('dateentered', models.DateTimeField(blank=True, db_column='dateEntered', null=True)),
                ('datelastmodified', models.DateTimeField(db_column='dateLastModified')),
                ('modified', models.CharField(blank=True, max_length=100, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('rightsholder', models.CharField(blank=True, db_column='rightsHolder', max_length=100, null=True)),
                ('accessrights', models.CharField(blank=True, db_column='accessRights', max_length=100, null=True)),
                ('sourceprimarykey_dbpk', models.CharField(blank=True, db_column='sourcePrimaryKey-dbpk', max_length=100, null=True)),
                ('collid', models.CharField(blank=True, db_column='collID', max_length=100, null=True)),
                ('recordid', models.CharField(blank=True, db_column='recordID', max_length=100, null=True)),
                ('references', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'cch2_extra',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cch2Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coreid', models.IntegerField()),
                ('identifier', models.CharField(max_length=255)),
                ('accessuri', models.CharField(blank=True, db_column='accessURI', max_length=255, null=True)),
                ('thumbnailaccessuri', models.CharField(blank=True, db_column='thumbnailAccessURI', max_length=100, null=True)),
                ('goodqualityaccessuri', models.CharField(blank=True, db_column='goodQualityAccessURI', max_length=255, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
                ('creator', models.CharField(blank=True, max_length=100, null=True)),
                ('usageterms', models.CharField(blank=True, db_column='usageTerms', max_length=100, null=True)),
                ('webstatement', models.CharField(blank=True, db_column='webStatement', max_length=255, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('providermanagedid', models.CharField(blank=True, db_column='providerManagedID', max_length=100, null=True)),
                ('metadatadate', models.CharField(blank=True, db_column='metadataDate', max_length=100, null=True)),
                ('format', models.CharField(blank=True, max_length=100, null=True)),
                ('associatedspecimenreference', models.CharField(blank=True, db_column='associatedSpecimenReference', max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('subtype', models.CharField(blank=True, max_length=100, null=True)),
                ('metatdatalanguage', models.CharField(blank=True, db_column='metatdataLanguage', max_length=100, null=True)),
            ],
            options={
                'db_table': 'cch2_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cch2Nobarcode',
            fields=[
                ('collectionobjectid', models.IntegerField(primary_key=True, serialize=False)),
                ('stationfieldnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=358, null=True)),
            ],
            options={
                'db_table': 'cch2_nobarcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cch2NotInSpecify',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institutioncode', models.CharField(blank=True, db_column='institutionCode', max_length=64, null=True)),
                ('collectioncode', models.CharField(blank=True, db_column='collectionCode', max_length=64, null=True)),
                ('ownerinstitutioncode', models.CharField(blank=True, db_column='ownerInstitutionCode', max_length=32, null=True)),
                ('collectionid', models.CharField(blank=True, db_column='collectionID', max_length=255, null=True)),
                ('basisofrecord', models.CharField(blank=True, db_column='basisOfRecord', max_length=32, null=True)),
                ('occurrenceid', models.CharField(blank=True, db_column='occurrenceID', max_length=255, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='catalogNumber', max_length=32, null=True)),
                ('othercatalognumbers', models.CharField(blank=True, db_column='otherCatalogNumbers', max_length=255, null=True)),
                ('higherclassification', models.CharField(blank=True, db_column='higherClassification', max_length=255, null=True)),
                ('kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=100, null=True)),
                ('order', models.CharField(blank=True, max_length=255, null=True)),
                ('family', models.CharField(blank=True, max_length=100, null=True)),
                ('scientificname', models.CharField(blank=True, db_column='scientificName', max_length=255, null=True)),
                ('taxonid', models.CharField(blank=True, db_column='taxonID', max_length=100, null=True)),
                ('scientificnameauthorship', models.CharField(blank=True, db_column='scientificNameAuthorship', max_length=255, null=True)),
                ('genus', models.CharField(blank=True, max_length=255, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=100, null=True)),
                ('specificepithet', models.CharField(blank=True, db_column='specificEpithet', max_length=255, null=True)),
                ('verbatimtaxonrank', models.CharField(blank=True, db_column='verbatimTaxonRank', max_length=100, null=True)),
                ('infraspecificepithet', models.CharField(blank=True, db_column='infraspecificEpithet', max_length=255, null=True)),
                ('taxonrank', models.CharField(blank=True, db_column='taxonRank', max_length=32, null=True)),
                ('identifiedby', models.CharField(blank=True, db_column='identifiedBy', max_length=255, null=True)),
                ('dateidentified', models.CharField(blank=True, db_column='dateIdentified', max_length=45, null=True)),
                ('identificationreferences', models.TextField(blank=True, db_column='identificationReferences', null=True)),
                ('identificationremarks', models.CharField(blank=True, db_column='identificationRemarks', max_length=100, null=True)),
                ('taxonremarks', models.CharField(blank=True, db_column='taxonRemarks', max_length=100, null=True)),
                ('identificationqualifier', models.CharField(blank=True, db_column='identificationQualifier', max_length=255, null=True)),
                ('typestatus', models.CharField(blank=True, db_column='typeStatus', max_length=255, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=255, null=True)),
                ('associatedcollectors', models.CharField(blank=True, db_column='associatedCollectors', max_length=255, null=True)),
                ('recordnumber', models.CharField(blank=True, db_column='recordNumber', max_length=45, null=True)),
                ('eventdate', models.DateField(blank=True, db_column='eventDate', null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('startdayofyear', models.IntegerField(blank=True, db_column='startDayOfYear', null=True)),
                ('enddayofyear', models.IntegerField(blank=True, db_column='endDayOfYear', null=True)),
                ('verbatimeventdate', models.CharField(blank=True, db_column='verbatimEventDate', max_length=255, null=True)),
                ('occurrenceremarks', models.TextField(blank=True, db_column='occurrenceRemarks', null=True)),
                ('habitat', models.TextField(blank=True, null=True)),
                ('substrate', models.CharField(blank=True, max_length=500, null=True)),
                ('verbatimattributes', models.TextField(blank=True, db_column='verbatimAttributes', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='fieldNumber', max_length=45, null=True)),
                ('eventid', models.CharField(blank=True, db_column='eventID', max_length=150, null=True)),
                ('informationwithheld', models.CharField(blank=True, db_column='informationWithheld', max_length=250, null=True)),
                ('datageneralizations', models.CharField(blank=True, db_column='dataGeneralizations', max_length=250, null=True)),
                ('dynamicproperties', models.TextField(blank=True, db_column='dynamicProperties', null=True)),
                ('associatedoccurrences', models.TextField(blank=True, db_column='associatedOccurrences', null=True)),
                ('associatedsequences', models.CharField(blank=True, db_column='associatedSequences', max_length=100, null=True)),
                ('associatedtaxa', models.TextField(blank=True, db_column='associatedTaxa', null=True)),
                ('reproductivecondition', models.CharField(blank=True, db_column='reproductiveCondition', max_length=255, null=True)),
                ('establishmentmeans', models.CharField(blank=True, db_column='establishmentMeans', max_length=150, null=True)),
                ('cultivationstatus', models.IntegerField(blank=True, db_column='cultivationStatus', null=True)),
                ('lifestage', models.CharField(blank=True, db_column='lifeStage', max_length=45, null=True)),
                ('sex', models.CharField(blank=True, max_length=45, null=True)),
                ('individualcount', models.CharField(blank=True, db_column='individualCount', max_length=45, null=True)),
                ('preparations', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('stateprovince', models.CharField(blank=True, db_column='stateProvince', max_length=255, null=True)),
                ('county', models.CharField(blank=True, max_length=255, null=True)),
                ('municipality', models.CharField(blank=True, max_length=255, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('locationremarks', models.TextField(blank=True, db_column='locationRemarks', null=True)),
                ('localitysecurity', models.IntegerField(blank=True, db_column='localitySecurity', null=True)),
                ('localitysecurityreason', models.CharField(blank=True, db_column='localitySecurityReason', max_length=100, null=True)),
                ('decimallatitude', models.FloatField(blank=True, db_column='decimalLatitude', null=True)),
                ('decimallongitude', models.FloatField(blank=True, db_column='decimalLongitude', null=True)),
                ('geodeticdatum', models.CharField(blank=True, db_column='geodeticDatum', max_length=255, null=True)),
                ('coordinateuncertaintyinmeters', models.IntegerField(blank=True, db_column='coordinateUncertaintyInMeters', null=True)),
                ('verbatimcoordinates', models.CharField(blank=True, db_column='verbatimCoordinates', max_length=255, null=True)),
                ('georeferencedby', models.CharField(blank=True, db_column='georeferencedBy', max_length=255, null=True)),
                ('georeferenceprotocol', models.CharField(blank=True, db_column='georeferenceProtocol', max_length=255, null=True)),
                ('georeferencesources', models.CharField(blank=True, db_column='georeferenceSources', max_length=255, null=True)),
                ('georeferenceverificationstatus', models.CharField(blank=True, db_column='georeferenceVerificationStatus', max_length=32, null=True)),
                ('georeferenceremarks', models.CharField(blank=True, db_column='georeferenceRemarks', max_length=500, null=True)),
                ('minimumelevationinmeters', models.IntegerField(blank=True, db_column='minimumElevationInMeters', null=True)),
                ('maximumelevationinmeters', models.IntegerField(blank=True, db_column='maximumElevationInMeters', null=True)),
                ('minimumdepthinmeters', models.IntegerField(blank=True, db_column='minimumDepthInMeters', null=True)),
                ('maximumdepthinmeters', models.IntegerField(blank=True, db_column='maximumDepthInMeters', null=True)),
                ('verbatimdepth', models.CharField(blank=True, db_column='verbatimDepth', max_length=50, null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='verbatimElevation', max_length=255, null=True)),
                ('disposition', models.CharField(blank=True, max_length=250, null=True)),
                ('language', models.CharField(blank=True, max_length=20, null=True)),
                ('observeruid', models.CharField(blank=True, db_column='observerUid', max_length=100, null=True)),
                ('processingstatus', models.CharField(blank=True, db_column='processingStatus', max_length=45, null=True)),
                ('duplicatequantity', models.IntegerField(blank=True, db_column='duplicateQuantity', null=True)),
                ('labelproject', models.CharField(blank=True, db_column='labelProject', max_length=100, null=True)),
                ('recordenteredby', models.CharField(blank=True, db_column='recordEnteredBy', max_length=250, null=True)),
                ('dateentered', models.DateTimeField(blank=True, db_column='dateEntered', null=True)),
                ('datelastmodified', models.DateTimeField(db_column='dateLastModified')),
                ('modified', models.CharField(blank=True, max_length=100, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('rightsholder', models.CharField(blank=True, db_column='rightsHolder', max_length=100, null=True)),
                ('accessrights', models.CharField(blank=True, db_column='accessRights', max_length=100, null=True)),
                ('sourceprimarykey_dbpk', models.CharField(blank=True, db_column='sourcePrimaryKey-dbpk', max_length=100, null=True)),
                ('collid', models.CharField(blank=True, db_column='collID', max_length=100, null=True)),
                ('recordid', models.CharField(blank=True, db_column='recordID', max_length=100, null=True)),
                ('references', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'cch2_not_in_specify',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingevent',
            fields=[
                ('collectingeventid', models.AutoField(db_column='CollectingEventID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('enddateprecision', models.IntegerField(blank=True, db_column='EndDatePrecision', null=True)),
                ('enddateverbatim', models.CharField(blank=True, db_column='EndDateVerbatim', max_length=50, null=True)),
                ('endtime', models.SmallIntegerField(blank=True, db_column='EndTime', null=True)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('startdateprecision', models.IntegerField(blank=True, db_column='StartDatePrecision', null=True)),
                ('startdateverbatim', models.CharField(blank=True, db_column='StartDateVerbatim', max_length=50, null=True)),
                ('starttime', models.SmallIntegerField(blank=True, db_column='StartTime', null=True)),
                ('stationfieldnumber', models.CharField(blank=True, db_column='StationFieldNumber', max_length=50, null=True)),
                ('verbatimdate', models.CharField(blank=True, db_column='VerbatimDate', max_length=50, null=True)),
                ('verbatimlocality', models.TextField(blank=True, db_column='VerbatimLocality', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservedtext1', models.CharField(blank=True, db_column='ReservedText1', max_length=128, null=True)),
                ('reservedtext2', models.CharField(blank=True, db_column='ReservedText2', max_length=128, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('stationfieldnumbermodifier1', models.CharField(blank=True, db_column='StationFieldNumberModifier1', max_length=50, null=True)),
                ('stationfieldnumbermodifier2', models.CharField(blank=True, db_column='StationFieldNumberModifier2', max_length=50, null=True)),
                ('stationfieldnumbermodifier3', models.CharField(blank=True, db_column='StationFieldNumberModifier3', max_length=50, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('uniqueidentifier', models.CharField(blank=True, db_column='UniqueIdentifier', max_length=128, null=True)),
            ],
            options={
                'db_table': 'collectingevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingeventattachment',
            fields=[
                ('collectingeventattachmentid', models.AutoField(db_column='CollectingEventAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'collectingeventattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingeventattr',
            fields=[
                ('attrid', models.AutoField(db_column='AttrID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('doublevalue', models.FloatField(blank=True, db_column='DoubleValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=255, null=True)),
            ],
            options={
                'db_table': 'collectingeventattr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingeventattribute',
            fields=[
                ('collectingeventattributeid', models.AutoField(db_column='CollectingEventAttributeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=20, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=20, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=20, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=20, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=20, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=20, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.TextField(blank=True, db_column='Text10', null=True)),
                ('text11', models.TextField(blank=True, db_column='Text11', null=True)),
                ('text12', models.TextField(blank=True, db_column='Text12', null=True)),
                ('text13', models.TextField(blank=True, db_column='Text13', null=True)),
                ('text14', models.TextField(blank=True, db_column='Text14', null=True)),
                ('text15', models.TextField(blank=True, db_column='Text15', null=True)),
                ('text16', models.TextField(blank=True, db_column='Text16', null=True)),
                ('text17', models.TextField(blank=True, db_column='Text17', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.IntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.IntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.IntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.IntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.IntegerField(blank=True, db_column='Integer9', null=True)),
            ],
            options={
                'db_table': 'collectingeventattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingeventauthorization',
            fields=[
                ('collectingeventauthorizationid', models.AutoField(db_column='CollectingEventAuthorizationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'collectingeventauthorization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectingeventDupes',
            fields=[
                ('collectingeventid', models.AutoField(db_column='CollectingEventID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('enddateprecision', models.IntegerField(blank=True, db_column='EndDatePrecision', null=True)),
                ('enddateverbatim', models.CharField(blank=True, db_column='EndDateVerbatim', max_length=50, null=True)),
                ('endtime', models.SmallIntegerField(blank=True, db_column='EndTime', null=True)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('startdateprecision', models.IntegerField(blank=True, db_column='StartDatePrecision', null=True)),
                ('startdateverbatim', models.CharField(blank=True, db_column='StartDateVerbatim', max_length=50, null=True)),
                ('starttime', models.SmallIntegerField(blank=True, db_column='StartTime', null=True)),
                ('stationfieldnumber', models.CharField(blank=True, db_column='StationFieldNumber', max_length=50, null=True)),
                ('verbatimdate', models.CharField(blank=True, db_column='VerbatimDate', max_length=50, null=True)),
                ('verbatimlocality', models.TextField(blank=True, db_column='VerbatimLocality', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
                ('localityid', models.IntegerField(blank=True, db_column='LocalityID', null=True)),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
                ('disciplineid', models.IntegerField(db_column='DisciplineID')),
                ('visibilitysetbyid', models.IntegerField(blank=True, db_column='VisibilitySetByID', null=True)),
                ('collectingtripid', models.IntegerField(blank=True, db_column='CollectingTripID', null=True)),
                ('collectingeventattributeid', models.IntegerField(blank=True, db_column='CollectingEventAttributeID', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
            ],
            options={
                'db_table': 'collectingevent_dupes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingtrip',
            fields=[
                ('collectingtripid', models.AutoField(db_column='CollectingTripID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectingtripname', models.CharField(blank=True, db_column='Collectingtripname', max_length=400, null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('enddateverbatim', models.CharField(blank=True, db_column='EndDateVerbatim', max_length=50, null=True)),
                ('endtime', models.SmallIntegerField(blank=True, db_column='EndTime', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('sponsor', models.CharField(blank=True, db_column='Sponsor', max_length=64, null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('startdateverbatim', models.CharField(blank=True, db_column='StartDateVerbatim', max_length=50, null=True)),
                ('starttime', models.SmallIntegerField(blank=True, db_column='StartTime', null=True)),
                ('enddateprecision', models.IntegerField(blank=True, db_column='EndDatePrecision', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('startdateprecision', models.IntegerField(blank=True, db_column='StartDatePrecision', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=255, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=128, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=64, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=64, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('cruise', models.CharField(blank=True, db_column='Cruise', max_length=250, null=True)),
                ('expedition', models.CharField(blank=True, db_column='Expedition', max_length=250, null=True)),
                ('vessel', models.CharField(blank=True, db_column='Vessel', max_length=250, null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.IntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
            ],
            options={
                'db_table': 'collectingtrip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingtripattachment',
            fields=[
                ('collectingtripattachmentid', models.AutoField(db_column='CollectingTripAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'collectingtripattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingtripattribute',
            fields=[
                ('collectingtripattributeid', models.AutoField(db_column='CollectingTripAttributeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.IntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.IntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.IntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.IntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.IntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=20, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=20, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=20, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=20, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=20, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=20, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=50, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=50, null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=100, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=100, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'collectingtripattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectingtripauthorization',
            fields=[
                ('collectingtripauthorizationid', models.AutoField(db_column='CollectingTripAuthorizationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'collectingtripauthorization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('usergroupscopeid', models.IntegerField(db_column='UserGroupScopeId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('catalogformatnumname', models.CharField(db_column='CatalogFormatNumName', max_length=64)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=50, null=True)),
                ('collectionid', models.IntegerField(blank=True, db_column='collectionId', null=True)),
                ('collectionname', models.CharField(blank=True, db_column='CollectionName', max_length=50, null=True)),
                ('collectiontype', models.CharField(blank=True, db_column='CollectionType', max_length=32, null=True)),
                ('dbcontentversion', models.CharField(blank=True, db_column='DbContentVersion', max_length=32, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('developmentstatus', models.CharField(blank=True, db_column='DevelopmentStatus', max_length=32, null=True)),
                ('estimatedsize', models.IntegerField(blank=True, db_column='EstimatedSize', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('institutiontype', models.CharField(blank=True, db_column='InstitutionType', max_length=32, null=True)),
                ('isembeddedcollectingevent', models.TextField(db_column='IsEmbeddedCollectingEvent')),
                ('isanumber', models.CharField(blank=True, db_column='IsaNumber', max_length=24, null=True)),
                ('kingdomcoverage', models.CharField(blank=True, db_column='KingdomCoverage', max_length=32, null=True)),
                ('preservationmethodtype', models.CharField(blank=True, db_column='PreservationMethodType', max_length=32, null=True)),
                ('primaryfocus', models.CharField(blank=True, db_column='PrimaryFocus', max_length=32, null=True)),
                ('primarypurpose', models.CharField(blank=True, db_column='PrimaryPurpose', max_length=32, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('scope', models.TextField(blank=True, db_column='Scope', null=True)),
                ('webportaluri', models.CharField(blank=True, db_column='WebPortalURI', max_length=255, null=True)),
                ('websiteuri', models.CharField(blank=True, db_column='WebSiteURI', max_length=255, null=True)),
            ],
            options={
                'db_table': 'collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionobject',
            fields=[
                ('collectionobjectid', models.AutoField(db_column='CollectionObjectID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('altcatalognumber', models.CharField(blank=True, db_column='AltCatalogNumber', max_length=64, null=True)),
                ('availability', models.CharField(blank=True, db_column='Availability', max_length=32, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='CatalogNumber', max_length=32, null=True)),
                ('catalogeddate', models.DateField(blank=True, db_column='CatalogedDate', null=True)),
                ('catalogeddateprecision', models.IntegerField(blank=True, db_column='CatalogedDatePrecision', null=True)),
                ('catalogeddateverbatim', models.CharField(blank=True, db_column='CatalogedDateVerbatim', max_length=32, null=True)),
                ('countamt', models.IntegerField(blank=True, db_column='CountAmt', null=True)),
                ('deaccessioned', models.TextField(blank=True, db_column='Deaccessioned', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='FieldNumber', max_length=50, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('inventorydate', models.DateField(blank=True, db_column='InventoryDate', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=50, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('notifications', models.CharField(blank=True, db_column='Notifications', max_length=32, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('objectcondition', models.CharField(blank=True, db_column='ObjectCondition', max_length=64, null=True)),
                ('projectnumber', models.CharField(blank=True, db_column='ProjectNumber', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('restrictions', models.CharField(blank=True, db_column='Restrictions', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('totalvalue', models.DecimalField(blank=True, db_column='TotalValue', decimal_places=2, max_digits=12, null=True)),
                ('ocr', models.TextField(blank=True, db_column='OCR', null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('reservedtext', models.CharField(blank=True, db_column='ReservedText', max_length=128, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservedtext2', models.CharField(blank=True, db_column='ReservedText2', max_length=128, null=True)),
                ('reservedtext3', models.CharField(blank=True, db_column='ReservedText3', max_length=128, null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('inventorydateprecision', models.IntegerField(blank=True, db_column='InventoryDatePrecision', null=True)),
                ('numberofduplicates', models.IntegerField(blank=True, db_column='NumberOfDuplicates', null=True)),
                ('embargoreason', models.TextField(blank=True, db_column='EmbargoReason', null=True)),
                ('embargoreleasedate', models.DateField(blank=True, db_column='EmbargoReleaseDate', null=True)),
                ('embargoreleasedateprecision', models.IntegerField(blank=True, db_column='EmbargoReleaseDatePrecision', null=True)),
                ('embargostartdate', models.DateField(blank=True, db_column='EmbargoStartDate', null=True)),
                ('embargostartdateprecision', models.IntegerField(blank=True, db_column='EmbargoStartDatePrecision', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('uniqueidentifier', models.CharField(blank=True, db_column='UniqueIdentifier', max_length=128, null=True)),
            ],
            options={
                'db_table': 'collectionobject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectattachment',
            fields=[
                ('collectionobjectattachmentid', models.AutoField(db_column='CollectionObjectAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'collectionobjectattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectattr',
            fields=[
                ('attrid', models.AutoField(db_column='AttrID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('doublevalue', models.FloatField(blank=True, db_column='DoubleValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=255, null=True)),
            ],
            options={
                'db_table': 'collectionobjectattr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectattribute',
            fields=[
                ('collectionobjectattributeid', models.AutoField(db_column='CollectionObjectAttributeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=20, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=20, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=20, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=20, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=20, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=20, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=20, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=20, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=20, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=20, null=True)),
                ('number21', models.DecimalField(blank=True, db_column='Number21', decimal_places=10, max_digits=20, null=True)),
                ('number22', models.DecimalField(blank=True, db_column='Number22', decimal_places=10, max_digits=20, null=True)),
                ('number23', models.DecimalField(blank=True, db_column='Number23', decimal_places=10, max_digits=20, null=True)),
                ('number24', models.DecimalField(blank=True, db_column='Number24', decimal_places=10, max_digits=20, null=True)),
                ('number25', models.DecimalField(blank=True, db_column='Number25', decimal_places=10, max_digits=20, null=True)),
                ('number26', models.DecimalField(blank=True, db_column='Number26', decimal_places=10, max_digits=20, null=True)),
                ('number27', models.DecimalField(blank=True, db_column='Number27', decimal_places=10, max_digits=20, null=True)),
                ('number28', models.DecimalField(blank=True, db_column='Number28', decimal_places=10, max_digits=20, null=True)),
                ('number29', models.DecimalField(blank=True, db_column='Number29', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number30', models.IntegerField(blank=True, null=True)),
                ('number31', models.DecimalField(blank=True, db_column='Number31', decimal_places=10, max_digits=20, null=True)),
                ('number32', models.DecimalField(blank=True, db_column='Number32', decimal_places=10, max_digits=20, null=True)),
                ('number33', models.DecimalField(blank=True, db_column='Number33', decimal_places=10, max_digits=20, null=True)),
                ('number34', models.DecimalField(blank=True, db_column='Number34', decimal_places=10, max_digits=20, null=True)),
                ('number35', models.DecimalField(blank=True, db_column='Number35', decimal_places=10, max_digits=20, null=True)),
                ('number36', models.DecimalField(blank=True, db_column='Number36', decimal_places=10, max_digits=20, null=True)),
                ('number37', models.DecimalField(blank=True, db_column='Number37', decimal_places=10, max_digits=20, null=True)),
                ('number38', models.DecimalField(blank=True, db_column='Number38', decimal_places=10, max_digits=20, null=True)),
                ('number39', models.DecimalField(blank=True, db_column='Number39', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number40', models.DecimalField(blank=True, db_column='Number40', decimal_places=10, max_digits=20, null=True)),
                ('number41', models.DecimalField(blank=True, db_column='Number41', decimal_places=10, max_digits=20, null=True)),
                ('number42', models.DecimalField(blank=True, db_column='Number42', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=20, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=20, null=True)),
                ('number8', models.IntegerField(blank=True, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=64, null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=100, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=100, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.TextField(blank=True, db_column='YesNo7', null=True)),
                ('bottomdistance', models.DecimalField(blank=True, db_column='BottomDistance', decimal_places=10, max_digits=20, null=True)),
                ('direction', models.CharField(blank=True, db_column='Direction', max_length=32, null=True)),
                ('distanceunits', models.CharField(blank=True, db_column='DistanceUnits', max_length=16, null=True)),
                ('positionstate', models.CharField(blank=True, db_column='PositionState', max_length=32, null=True)),
                ('topdistance', models.DecimalField(blank=True, db_column='TopDistance', decimal_places=10, max_digits=20, null=True)),
                ('text16', models.TextField(blank=True, db_column='Text16', null=True)),
                ('text17', models.TextField(blank=True, db_column='Text17', null=True)),
                ('text18', models.TextField(blank=True, db_column='Text18', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.IntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.IntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.IntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.IntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.IntegerField(blank=True, db_column='Integer9', null=True)),
                ('text19', models.TextField(blank=True, db_column='Text19', null=True)),
                ('text20', models.TextField(blank=True, db_column='Text20', null=True)),
                ('text21', models.TextField(blank=True, db_column='Text21', null=True)),
                ('text22', models.TextField(blank=True, db_column='Text22', null=True)),
                ('text23', models.TextField(blank=True, db_column='Text23', null=True)),
                ('text24', models.TextField(blank=True, db_column='Text24', null=True)),
                ('text25', models.TextField(blank=True, db_column='Text25', null=True)),
                ('text26', models.TextField(blank=True, db_column='Text26', null=True)),
                ('text27', models.TextField(blank=True, db_column='Text27', null=True)),
                ('text28', models.TextField(blank=True, db_column='Text28', null=True)),
                ('text29', models.TextField(blank=True, db_column='Text29', null=True)),
                ('text30', models.TextField(blank=True, db_column='Text30', null=True)),
                ('yesno10', models.TextField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.TextField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.TextField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.TextField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.TextField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.TextField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.TextField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.TextField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.TextField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.TextField(blank=True, db_column='YesNo19', null=True)),
                ('yesno20', models.TextField(blank=True, db_column='YesNo20', null=True)),
                ('yesno8', models.TextField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.TextField(blank=True, db_column='YesNo9', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('text31', models.TextField(blank=True, db_column='Text31', null=True)),
                ('text32', models.TextField(blank=True, db_column='Text32', null=True)),
                ('text33', models.TextField(blank=True, db_column='Text33', null=True)),
                ('text34', models.TextField(blank=True, db_column='Text34', null=True)),
                ('text35', models.TextField(blank=True, db_column='Text35', null=True)),
                ('text36', models.TextField(blank=True, db_column='Text36', null=True)),
                ('text37', models.TextField(blank=True, db_column='Text37', null=True)),
                ('text38', models.TextField(blank=True, db_column='Text38', null=True)),
                ('text39', models.TextField(blank=True, db_column='Text39', null=True)),
                ('text40', models.TextField(blank=True, db_column='Text40', null=True)),
            ],
            options={
                'db_table': 'collectionobjectattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectcitation',
            fields=[
                ('collectionobjectcitationid', models.AutoField(db_column='CollectionObjectCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'collectionobjectcitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionobjectDupes',
            fields=[
                ('collectionobjectid', models.AutoField(db_column='CollectionObjectID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('altcatalognumber', models.CharField(blank=True, db_column='AltCatalogNumber', max_length=32, null=True)),
                ('availability', models.CharField(blank=True, db_column='Availability', max_length=32, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='CatalogNumber', max_length=32, null=True)),
                ('catalogeddate', models.DateField(blank=True, db_column='CatalogedDate', null=True)),
                ('catalogeddateprecision', models.IntegerField(blank=True, db_column='CatalogedDatePrecision', null=True)),
                ('catalogeddateverbatim', models.CharField(blank=True, db_column='CatalogedDateVerbatim', max_length=32, null=True)),
                ('countamt', models.IntegerField(blank=True, db_column='CountAmt', null=True)),
                ('deaccessioned', models.TextField(blank=True, db_column='Deaccessioned', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='FieldNumber', max_length=50, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('inventorydate', models.DateField(blank=True, db_column='InventoryDate', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=50, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('notifications', models.CharField(blank=True, db_column='Notifications', max_length=32, null=True)),
                ('number1', models.FloatField(blank=True, db_column='Number1', null=True)),
                ('number2', models.FloatField(blank=True, db_column='Number2', null=True)),
                ('objectcondition', models.CharField(blank=True, db_column='ObjectCondition', max_length=64, null=True)),
                ('projectnumber', models.CharField(blank=True, db_column='ProjectNumber', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('restrictions', models.CharField(blank=True, db_column='Restrictions', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('totalvalue', models.DecimalField(blank=True, db_column='TotalValue', decimal_places=2, max_digits=12, null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('collectionid', models.IntegerField(db_column='CollectionID')),
                ('collectingeventid', models.IntegerField(blank=True, db_column='CollectingEventID', null=True)),
                ('containerid', models.IntegerField(blank=True, db_column='ContainerID', null=True)),
                ('fieldnotebookpageid', models.IntegerField(blank=True, db_column='FieldNotebookPageID', null=True)),
                ('paleocontextid', models.IntegerField(blank=True, db_column='PaleoContextID', null=True)),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
                ('accessionid', models.IntegerField(blank=True, db_column='AccessionID', null=True)),
                ('containerownerid', models.IntegerField(blank=True, db_column='ContainerOwnerID', null=True)),
                ('collectionobjectattributeid', models.IntegerField(blank=True, db_column='CollectionObjectAttributeID', null=True)),
                ('appraisalid', models.IntegerField(blank=True, db_column='AppraisalID', null=True)),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
                ('visibilitysetbyid', models.IntegerField(blank=True, db_column='VisibilitySetByID', null=True)),
                ('catalogerid', models.IntegerField(blank=True, db_column='CatalogerID', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
            ],
            options={
                'db_table': 'collectionobject_dupes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectproperty',
            fields=[
                ('collectionobjectpropertyid', models.AutoField(db_column='CollectionObjectPropertyID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date10', models.DateField(blank=True, db_column='Date10', null=True)),
                ('date11', models.DateField(blank=True, db_column='Date11', null=True)),
                ('date12', models.DateField(blank=True, db_column='Date12', null=True)),
                ('date13', models.DateField(blank=True, db_column='Date13', null=True)),
                ('date14', models.DateField(blank=True, db_column='Date14', null=True)),
                ('date15', models.DateField(blank=True, db_column='Date15', null=True)),
                ('date16', models.DateField(blank=True, db_column='Date16', null=True)),
                ('date17', models.DateField(blank=True, db_column='Date17', null=True)),
                ('date18', models.DateField(blank=True, db_column='Date18', null=True)),
                ('date19', models.DateField(blank=True, db_column='Date19', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date20', models.DateField(blank=True, db_column='Date20', null=True)),
                ('date3', models.DateField(blank=True, db_column='Date3', null=True)),
                ('date4', models.DateField(blank=True, db_column='Date4', null=True)),
                ('date5', models.DateField(blank=True, db_column='Date5', null=True)),
                ('date6', models.DateField(blank=True, db_column='Date6', null=True)),
                ('date7', models.DateField(blank=True, db_column='Date7', null=True)),
                ('date8', models.DateField(blank=True, db_column='Date8', null=True)),
                ('date9', models.DateField(blank=True, db_column='Date9', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.SmallIntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.SmallIntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer11', models.SmallIntegerField(blank=True, db_column='Integer11', null=True)),
                ('integer12', models.SmallIntegerField(blank=True, db_column='Integer12', null=True)),
                ('integer13', models.SmallIntegerField(blank=True, db_column='Integer13', null=True)),
                ('integer14', models.SmallIntegerField(blank=True, db_column='Integer14', null=True)),
                ('integer15', models.SmallIntegerField(blank=True, db_column='Integer15', null=True)),
                ('integer16', models.SmallIntegerField(blank=True, db_column='Integer16', null=True)),
                ('integer17', models.SmallIntegerField(blank=True, db_column='Integer17', null=True)),
                ('integer18', models.SmallIntegerField(blank=True, db_column='Integer18', null=True)),
                ('integer19', models.SmallIntegerField(blank=True, db_column='Integer19', null=True)),
                ('integer2', models.SmallIntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer20', models.SmallIntegerField(blank=True, db_column='Integer20', null=True)),
                ('integer21', models.IntegerField(blank=True, db_column='Integer21', null=True)),
                ('integer22', models.IntegerField(blank=True, db_column='Integer22', null=True)),
                ('integer23', models.IntegerField(blank=True, db_column='Integer23', null=True)),
                ('integer24', models.IntegerField(blank=True, db_column='Integer24', null=True)),
                ('integer25', models.IntegerField(blank=True, db_column='Integer25', null=True)),
                ('integer26', models.IntegerField(blank=True, db_column='Integer26', null=True)),
                ('integer27', models.IntegerField(blank=True, db_column='Integer27', null=True)),
                ('integer28', models.IntegerField(blank=True, db_column='Integer28', null=True)),
                ('integer29', models.IntegerField(blank=True, db_column='Integer29', null=True)),
                ('integer3', models.SmallIntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer30', models.IntegerField(blank=True, db_column='Integer30', null=True)),
                ('integer4', models.SmallIntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.SmallIntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.SmallIntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.SmallIntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.SmallIntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.SmallIntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=20, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=20, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=20, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=20, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=20, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=20, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=20, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=20, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=20, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=20, null=True)),
                ('number21', models.DecimalField(blank=True, db_column='Number21', decimal_places=10, max_digits=20, null=True)),
                ('number22', models.DecimalField(blank=True, db_column='Number22', decimal_places=10, max_digits=20, null=True)),
                ('number23', models.DecimalField(blank=True, db_column='Number23', decimal_places=10, max_digits=20, null=True)),
                ('number24', models.DecimalField(blank=True, db_column='Number24', decimal_places=10, max_digits=20, null=True)),
                ('number25', models.DecimalField(blank=True, db_column='Number25', decimal_places=10, max_digits=20, null=True)),
                ('number26', models.DecimalField(blank=True, db_column='Number26', decimal_places=10, max_digits=20, null=True)),
                ('number27', models.DecimalField(blank=True, db_column='Number27', decimal_places=10, max_digits=20, null=True)),
                ('number28', models.DecimalField(blank=True, db_column='Number28', decimal_places=10, max_digits=20, null=True)),
                ('number29', models.DecimalField(blank=True, db_column='Number29', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number30', models.DecimalField(blank=True, db_column='Number30', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=20, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=20, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=20, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=50, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=100, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=100, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=100, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=100, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=50, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=100, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=100, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=100, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=100, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=100, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=100, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=100, null=True)),
                ('text27', models.CharField(blank=True, db_column='Text27', max_length=100, null=True)),
                ('text28', models.CharField(blank=True, db_column='Text28', max_length=100, null=True)),
                ('text29', models.CharField(blank=True, db_column='Text29', max_length=100, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=50, null=True)),
                ('text30', models.CharField(blank=True, db_column='Text30', max_length=100, null=True)),
                ('text31', models.TextField(blank=True, db_column='Text31', null=True)),
                ('text32', models.TextField(blank=True, db_column='Text32', null=True)),
                ('text33', models.TextField(blank=True, db_column='Text33', null=True)),
                ('text34', models.TextField(blank=True, db_column='Text34', null=True)),
                ('text35', models.TextField(blank=True, db_column='Text35', null=True)),
                ('text36', models.TextField(blank=True, db_column='Text36', null=True)),
                ('text37', models.TextField(blank=True, db_column='Text37', null=True)),
                ('text38', models.TextField(blank=True, db_column='Text38', null=True)),
                ('text39', models.TextField(blank=True, db_column='Text39', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text40', models.TextField(blank=True, db_column='Text40', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.TextField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.TextField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.TextField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.TextField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.TextField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.TextField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.TextField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.TextField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.TextField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.TextField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.TextField(blank=True, db_column='YesNo20', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.TextField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.TextField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.TextField(blank=True, db_column='YesNo9', null=True)),
            ],
            options={
                'db_table': 'collectionobjectproperty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionrelationship',
            fields=[
                ('collectionrelationshipid', models.AutoField(db_column='CollectionRelationshipID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
            ],
            options={
                'db_table': 'collectionrelationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collectionreltype',
            fields=[
                ('collectionreltypeid', models.AutoField(db_column='CollectionRelTypeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'collectionreltype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('collectorid', models.AutoField(db_column='CollectorID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('isprimary', models.TextField(db_column='IsPrimary')),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'collector',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectorDupes',
            fields=[
                ('collectorid', models.AutoField(db_column='CollectorID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('isprimary', models.TextField(db_column='IsPrimary')),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
                ('divisionid', models.IntegerField(blank=True, db_column='DivisionID', null=True)),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
                ('collectingeventid', models.IntegerField(db_column='CollectingEventID')),
                ('agentid', models.IntegerField(db_column='AgentID')),
            ],
            options={
                'db_table': 'collector_dupes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Colombia2012SpecimenDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_description', models.TextField(blank=True, db_column='Specimen description', null=True)),
                ('collector_number', models.IntegerField(blank=True, db_column='Collector number', null=True)),
            ],
            options={
                'db_table': 'colombia_2012_specimen_description',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Colombia2013SpecimenDescriptionCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_description', models.TextField(blank=True, db_column='Specimen description', null=True)),
                ('collector_number', models.CharField(blank=True, db_column='Collector number', max_length=11, null=True)),
            ],
            options={
                'db_table': 'colombia_2013_specimen_description_copy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commonnametx',
            fields=[
                ('commonnametxid', models.AutoField(db_column='CommonNameTxID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('author', models.CharField(blank=True, db_column='Author', max_length=128, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=2, null=True)),
                ('language', models.CharField(blank=True, db_column='Language', max_length=2, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('variant', models.CharField(blank=True, db_column='Variant', max_length=2, null=True)),
            ],
            options={
                'db_table': 'commonnametx',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commonnametxcitation',
            fields=[
                ('commonnametxcitationid', models.AutoField(db_column='CommonNameTxCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'commonnametxcitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Conservdescription',
            fields=[
                ('conservdescriptionid', models.AutoField(db_column='ConservDescriptionID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('backgroundinfo', models.TextField(blank=True, db_column='BackgroundInfo', null=True)),
                ('composition', models.TextField(blank=True, db_column='Composition', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('displayrecommendations', models.TextField(blank=True, db_column='DisplayRecommendations', null=True)),
                ('height', models.DecimalField(blank=True, db_column='Height', decimal_places=10, max_digits=20, null=True)),
                ('lightrecommendations', models.TextField(blank=True, db_column='LightRecommendations', null=True)),
                ('objlength', models.DecimalField(blank=True, db_column='ObjLength', decimal_places=10, max_digits=20, null=True)),
                ('otherrecommendations', models.TextField(blank=True, db_column='OtherRecommendations', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('shortdesc', models.CharField(blank=True, db_column='ShortDesc', max_length=128, null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('units', models.CharField(blank=True, db_column='Units', max_length=16, null=True)),
                ('width', models.DecimalField(blank=True, db_column='Width', decimal_places=10, max_digits=20, null=True)),
                ('catalogeddate', models.DateField(blank=True, db_column='CatalogedDate', null=True)),
                ('determineddateprecision', models.IntegerField(blank=True, db_column='determinedDatePrecision', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.IntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('date3', models.DateField(blank=True, db_column='Date3', null=True)),
                ('date3precision', models.IntegerField(blank=True, db_column='Date3Precision', null=True)),
                ('date4', models.DateField(blank=True, db_column='Date4', null=True)),
                ('date4precision', models.IntegerField(blank=True, db_column='Date4Precision', null=True)),
                ('date5', models.DateField(blank=True, db_column='Date5', null=True)),
                ('date5precision', models.IntegerField(blank=True, db_column='Date5Precision', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'conservdescription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Conservdescriptionattachment',
            fields=[
                ('conservdescriptionattachmentid', models.AutoField(db_column='ConservDescriptionAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'conservdescriptionattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Conservevent',
            fields=[
                ('conserveventid', models.AutoField(db_column='ConservEventID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('advtestingexam', models.TextField(blank=True, db_column='AdvTestingExam', null=True)),
                ('advtestingexamresults', models.TextField(blank=True, db_column='AdvTestingExamResults', null=True)),
                ('completedcomments', models.TextField(blank=True, db_column='CompletedComments', null=True)),
                ('completeddate', models.DateField(blank=True, db_column='CompletedDate', null=True)),
                ('conditionreport', models.TextField(blank=True, db_column='ConditionReport', null=True)),
                ('curatorapprovaldate', models.DateField(blank=True, db_column='CuratorApprovalDate', null=True)),
                ('examdate', models.DateField(blank=True, db_column='ExamDate', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('photodocs', models.TextField(blank=True, db_column='PhotoDocs', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=64, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=64, null=True)),
                ('treatmentcompdate', models.DateField(blank=True, db_column='TreatmentCompDate', null=True)),
                ('treatmentreport', models.TextField(blank=True, db_column='TreatmentReport', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('completeddateprecision', models.IntegerField(blank=True, db_column='CompletedDatePrecision', null=True)),
                ('curatorapprovaldateprecision', models.IntegerField(blank=True, db_column='CuratorApprovalDatePrecision', null=True)),
                ('examdateprecision', models.IntegerField(blank=True, db_column='ExamDatePrecision', null=True)),
                ('treatmentcompdateprecision', models.IntegerField(blank=True, db_column='TreatmentCompDatePrecision', null=True)),
            ],
            options={
                'db_table': 'conservevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Conserveventattachment',
            fields=[
                ('conserveventattachmentid', models.AutoField(db_column='ConservEventAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'conserveventattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('containerid', models.AutoField(db_column='ContainerID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=1024, null=True)),
                ('number', models.IntegerField(blank=True, db_column='Number', null=True)),
                ('type', models.SmallIntegerField(blank=True, db_column='Type', null=True)),
            ],
            options={
                'db_table': 'container',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Continentcodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=2, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('geonameid', models.IntegerField(blank=True, db_column='geonameId', null=True)),
            ],
            options={
                'db_table': 'continentcodes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countryinfo',
            fields=[
                ('iso_alpha2', models.CharField(blank=True, max_length=2, null=True)),
                ('iso_alpha3', models.CharField(blank=True, max_length=3, null=True)),
                ('iso_numeric', models.IntegerField(blank=True, null=True)),
                ('fips_code', models.CharField(blank=True, max_length=3, null=True)),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('capital', models.CharField(blank=True, max_length=255, null=True)),
                ('areainsqkm', models.CharField(blank=True, max_length=16, null=True)),
                ('population', models.CharField(blank=True, max_length=16, null=True)),
                ('continent', models.CharField(blank=True, max_length=2, null=True)),
                ('tld', models.CharField(blank=True, max_length=32, null=True)),
                ('currencycode', models.CharField(blank=True, max_length=3, null=True)),
                ('currencyname', models.CharField(blank=True, max_length=32, null=True)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('postalformat', models.CharField(blank=True, max_length=128, null=True)),
                ('postalregex', models.TextField(blank=True, null=True)),
                ('languages', models.CharField(blank=True, max_length=255, null=True)),
                ('geonameid', models.IntegerField(blank=True, db_column='geonameId', null=True)),
                ('neighbors', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'countryinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Darwincoretdwg14',
            fields=[
                ('darwincoretdwg1_4id', models.IntegerField(db_column='darwincoretdwg1_4Id', primary_key=True, serialize=False)),
                ('catalognumber', models.CharField(blank=True, db_column='CatalogNumber', max_length=32, null=True)),
                ('class_field', models.CharField(blank=True, db_column='Class', max_length=500, null=True)),
                ('collector', models.TextField(blank=True, db_column='Collector', null=True)),
                ('continent', models.CharField(blank=True, db_column='Continent', max_length=500, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=500, null=True)),
                ('county', models.CharField(blank=True, db_column='County', max_length=500, null=True)),
                ('datelastmodified', models.DateTimeField(blank=True, db_column='DateLastModified', null=True)),
                ('earliestdatecollected', models.DateField(blank=True, db_column='EarliestDateCollected', null=True)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=500, null=True)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=500, null=True)),
                ('globaluniqueidentifier', models.CharField(blank=True, db_column='GlobalUniqueIdentifier', max_length=128, null=True)),
                ('highergeography', models.CharField(blank=True, db_column='HigherGeography', max_length=500, null=True)),
                ('identificationqualifier', models.CharField(blank=True, db_column='IdentificationQualifier', max_length=16, null=True)),
                ('kingdom', models.CharField(blank=True, db_column='Kingdom', max_length=500, null=True)),
                ('locality', models.CharField(blank=True, db_column='Locality', max_length=255, null=True)),
                ('maximumelevationinmeters', models.FloatField(blank=True, db_column='MaximumElevationInMeters', null=True)),
                ('minimumelevationinmeters', models.FloatField(blank=True, db_column='MinimumElevationInMeters', null=True)),
                ('order', models.CharField(blank=True, db_column='Order', max_length=500, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('scientificname', models.CharField(blank=True, db_column='ScientificName', max_length=255, null=True)),
                ('specificepithet', models.CharField(blank=True, db_column='SpecificEpithet', max_length=500, null=True)),
                ('stateprovince', models.CharField(blank=True, db_column='StateProvince', max_length=500, null=True)),
                ('relatedinformation', models.CharField(blank=True, db_column='RelatedInformation', max_length=32, null=True)),
            ],
            options={
                'db_table': 'darwincoretdwg1_4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datatype',
            fields=[
                ('datatypeid', models.AutoField(db_column='DataTypeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
            ],
            options={
                'db_table': 'datatype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deaccession',
            fields=[
                ('deaccessionid', models.AutoField(db_column='DeaccessionID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('deaccessiondate', models.DateField(blank=True, db_column='DeaccessionDate', null=True)),
                ('deaccessionnumber', models.CharField(db_column='DeaccessionNumber', max_length=50)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'deaccession',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deaccessionagent',
            fields=[
                ('deaccessionagentid', models.AutoField(db_column='DeaccessionAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
            ],
            options={
                'db_table': 'deaccessionagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deaccessionattachment',
            fields=[
                ('deaccessionattachmentid', models.AutoField(db_column='DeaccessionAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'deaccessionattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Determination',
            fields=[
                ('determinationid', models.AutoField(db_column='DeterminationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('addendum', models.CharField(blank=True, db_column='Addendum', max_length=16, null=True)),
                ('alternatename', models.CharField(blank=True, db_column='AlternateName', max_length=128, null=True)),
                ('confidence', models.CharField(blank=True, db_column='Confidence', max_length=50, null=True)),
                ('determineddate', models.DateField(blank=True, db_column='DeterminedDate', null=True)),
                ('determineddateprecision', models.IntegerField(blank=True, db_column='DeterminedDatePrecision', null=True)),
                ('featureorbasis', models.CharField(blank=True, db_column='FeatureOrBasis', max_length=250, null=True)),
                ('iscurrent', models.TextField(db_column='IsCurrent')),
                ('method', models.CharField(blank=True, db_column='Method', max_length=50, null=True)),
                ('nameusage', models.CharField(blank=True, db_column='NameUsage', max_length=64, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('qualifier', models.CharField(blank=True, db_column='Qualifier', max_length=16, null=True)),
                ('varqualifer', models.CharField(blank=True, db_column='VarQualifer', max_length=16, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('subspqualifier', models.CharField(blank=True, db_column='SubSpQualifier', max_length=16, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('typestatusname', models.CharField(blank=True, db_column='TypeStatusName', max_length=50, null=True)),
                ('varqualifier', models.CharField(blank=True, db_column='VarQualifier', max_length=16, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=128, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=128, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=128, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=128, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=128, null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'determination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Determinationcitation',
            fields=[
                ('determinationcitationid', models.AutoField(db_column='DeterminationCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'determinationcitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeterminationDupes',
            fields=[
                ('determinationid', models.AutoField(db_column='DeterminationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('addendum', models.CharField(blank=True, db_column='Addendum', max_length=16, null=True)),
                ('alternatename', models.CharField(blank=True, db_column='AlternateName', max_length=128, null=True)),
                ('confidence', models.CharField(blank=True, db_column='Confidence', max_length=50, null=True)),
                ('determineddate', models.DateField(blank=True, db_column='DeterminedDate', null=True)),
                ('determineddateprecision', models.IntegerField(blank=True, db_column='DeterminedDatePrecision', null=True)),
                ('featureorbasis', models.CharField(blank=True, db_column='FeatureOrBasis', max_length=50, null=True)),
                ('iscurrent', models.TextField(db_column='IsCurrent')),
                ('method', models.CharField(blank=True, db_column='Method', max_length=50, null=True)),
                ('nameusage', models.CharField(blank=True, db_column='NameUsage', max_length=64, null=True)),
                ('number1', models.FloatField(blank=True, db_column='Number1', null=True)),
                ('number2', models.FloatField(blank=True, db_column='Number2', null=True)),
                ('qualifier', models.CharField(blank=True, db_column='Qualifier', max_length=16, null=True)),
                ('varqualifer', models.CharField(blank=True, db_column='VarQualifer', max_length=16, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('subspqualifier', models.CharField(blank=True, db_column='SubSpQualifier', max_length=16, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('typestatusname', models.CharField(blank=True, db_column='TypeStatusName', max_length=50, null=True)),
                ('varqualifier', models.CharField(blank=True, db_column='VarQualifier', max_length=16, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('taxonid', models.IntegerField(blank=True, db_column='TaxonID', null=True)),
                ('collectionobjectid', models.IntegerField(db_column='CollectionObjectID')),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
                ('determinerid', models.IntegerField(blank=True, db_column='DeterminerID', null=True)),
                ('preferredtaxonid', models.IntegerField(blank=True, db_column='PreferredTaxonID', null=True)),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
            ],
            options={
                'db_table': 'determination_dupes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Determiner',
            fields=[
                ('determinerid', models.AutoField(db_column='DeterminerID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('isprimary', models.TextField(db_column='IsPrimary')),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'determiner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('usergroupscopeid', models.IntegerField(db_column='UserGroupScopeId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('disciplineid', models.IntegerField(blank=True, db_column='disciplineId', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('ispaleocontextembedded', models.TextField(blank=True, db_column='IsPaleoContextEmbedded', null=True)),
                ('paleocontextchildtable', models.CharField(blank=True, db_column='PaleoContextChildTable', max_length=50, null=True)),
            ],
            options={
                'db_table': 'discipline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disposal',
            fields=[
                ('disposalid', models.AutoField(db_column='DisposalID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('disposaldate', models.DateField(blank=True, db_column='DisposalDate', null=True)),
                ('disposalnumber', models.CharField(db_column='DisposalNumber', max_length=50)),
                ('donotexport', models.TextField(blank=True, db_column='doNotExport', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'disposal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disposalagent',
            fields=[
                ('disposalagentid', models.AutoField(db_column='DisposalAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
            ],
            options={
                'db_table': 'disposalagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disposalattachment',
            fields=[
                ('disposalattachmentid', models.AutoField(db_column='DisposalAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'disposalattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disposalpreparation',
            fields=[
                ('disposalpreparationid', models.AutoField(db_column='DisposalPreparationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'disposalpreparation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('usergroupscopeid', models.IntegerField(db_column='UserGroupScopeId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('abbrev', models.CharField(blank=True, db_column='Abbrev', max_length=64, null=True)),
                ('altname', models.CharField(blank=True, db_column='AltName', max_length=128, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('disciplinetype', models.CharField(blank=True, db_column='DisciplineType', max_length=64, null=True)),
                ('divisionid', models.IntegerField(blank=True, db_column='divisionId', null=True)),
                ('iconuri', models.CharField(blank=True, db_column='IconURI', max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('uri', models.CharField(blank=True, db_column='Uri', max_length=255, null=True)),
            ],
            options={
                'db_table': 'division',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dnaprimer',
            fields=[
                ('dnaprimerid', models.AutoField(db_column='DNAPrimerID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('primerdesignator', models.CharField(blank=True, db_column='PrimerDesignator', max_length=64, null=True)),
                ('primernameforward', models.CharField(blank=True, db_column='PrimerNameForward', max_length=64, null=True)),
                ('primernamereverse', models.CharField(blank=True, db_column='PrimerNameReverse', max_length=64, null=True)),
                ('primerreferencecitationforward', models.CharField(blank=True, db_column='PrimerReferenceCitationForward', max_length=300, null=True)),
                ('primerreferencecitationreverse', models.CharField(blank=True, db_column='PrimerReferenceCitationReverse', max_length=300, null=True)),
                ('primerreferencelinkforward', models.CharField(blank=True, db_column='PrimerReferenceLinkForward', max_length=300, null=True)),
                ('primerreferencelinkreverse', models.CharField(blank=True, db_column='PrimerReferenceLinkReverse', max_length=300, null=True)),
                ('primersequenceforward', models.CharField(blank=True, db_column='PrimerSequenceForward', max_length=128, null=True)),
                ('primersequencereverse', models.CharField(blank=True, db_column='PrimerSequenceReverse', max_length=128, null=True)),
                ('purificationmethod', models.CharField(blank=True, db_column='purificationMethod', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservednumber3', models.DecimalField(blank=True, db_column='ReservedNumber3', decimal_places=10, max_digits=20, null=True)),
                ('reservednumber4', models.DecimalField(blank=True, db_column='ReservedNumber4', decimal_places=10, max_digits=20, null=True)),
                ('reservedtext3', models.TextField(blank=True, db_column='ReservedText3', null=True)),
                ('reservedtext4', models.TextField(blank=True, db_column='ReservedText4', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'dnaprimer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dnasequence',
            fields=[
                ('dnasequenceid', models.AutoField(db_column='DnaSequenceID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ambiguousresidues', models.IntegerField(blank=True, db_column='AmbiguousResidues', null=True)),
                ('boldbarcodeid', models.CharField(blank=True, db_column='BOLDBarcodeID', max_length=32, null=True)),
                ('boldlastupdatedate', models.DateField(blank=True, db_column='BOLDLastUpdateDate', null=True)),
                ('boldsampleid', models.CharField(blank=True, db_column='BOLDSampleID', max_length=32, null=True)),
                ('boldtranslationmatrix', models.CharField(blank=True, db_column='BOLDTranslationMatrix', max_length=64, null=True)),
                ('compa', models.IntegerField(blank=True, db_column='CompA', null=True)),
                ('compc', models.IntegerField(blank=True, db_column='CompC', null=True)),
                ('compg', models.IntegerField(blank=True, db_column='CompG', null=True)),
                ('compt', models.IntegerField(blank=True, db_column='compT', null=True)),
                ('genbankaccessionnumber', models.CharField(blank=True, db_column='GenBankAccessionNumber', max_length=32, null=True)),
                ('genesequence', models.TextField(blank=True, db_column='GeneSequence', null=True)),
                ('moleculetype', models.CharField(blank=True, db_column='MoleculeType', max_length=32, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('targetmarker', models.CharField(blank=True, db_column='TargetMarker', max_length=32, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=64, null=True)),
                ('totalresidues', models.IntegerField(blank=True, db_column='TotalResidues', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('extractiondate', models.DateField(blank=True, db_column='ExtractionDate', null=True)),
                ('extractiondateprecision', models.IntegerField(blank=True, db_column='ExtractionDatePrecision', null=True)),
                ('sequencedate', models.DateField(blank=True, db_column='SequenceDate', null=True)),
                ('sequencedateprecision', models.IntegerField(blank=True, db_column='SequenceDatePrecision', null=True)),
            ],
            options={
                'db_table': 'dnasequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dnasequenceattachment',
            fields=[
                ('dnasequenceattachmentid', models.AutoField(db_column='DnaSequenceAttachmentId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'dnasequenceattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dnasequencerunattachment',
            fields=[
                ('dnasequencingrunattachmentid', models.AutoField(db_column='DnaSequencingRunAttachmentId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'dnasequencerunattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dnasequencingrun',
            fields=[
                ('dnasequencingrunid', models.AutoField(db_column='DNASequencingRunID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('pcrcocktailprimer', models.TextField(blank=True, db_column='PCRCocktailPrimer', null=True)),
                ('pcrforwardprimercode', models.CharField(blank=True, db_column='PCRForwardPrimerCode', max_length=32, null=True)),
                ('pcrprimername', models.CharField(blank=True, db_column='PCRPrimerName', max_length=32, null=True)),
                ('pcrprimersequence5_3', models.CharField(blank=True, db_column='PCRPrimerSequence5_3', max_length=64, null=True)),
                ('pcrreverseprimercode', models.CharField(blank=True, db_column='PCRReversePrimerCode', max_length=32, null=True)),
                ('readdirection', models.CharField(blank=True, db_column='ReadDirection', max_length=16, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('rundate', models.DateField(blank=True, db_column='RunDate', null=True)),
                ('scorefilename', models.CharField(blank=True, db_column='ScoreFileName', max_length=32, null=True)),
                ('sequencecocktailprimer', models.TextField(blank=True, db_column='SequenceCocktailPrimer', null=True)),
                ('sequenceprimercode', models.CharField(blank=True, db_column='SequencePrimerCode', max_length=32, null=True)),
                ('sequenceprimername', models.CharField(blank=True, db_column='SequencePrimerName', max_length=32, null=True)),
                ('sequenceprimersequence5_3', models.CharField(blank=True, db_column='SequencePrimerSequence5_3', max_length=64, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=64, null=True)),
                ('tracefilename', models.CharField(blank=True, db_column='TraceFileName', max_length=32, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('genesequence', models.TextField(blank=True, db_column='GeneSequence', null=True)),
                ('dryaddoi', models.CharField(blank=True, db_column='DryadDOI', max_length=256, null=True)),
                ('sraexperimentid', models.CharField(blank=True, db_column='SRAExperimentID', max_length=64, null=True)),
                ('srarunid', models.CharField(blank=True, db_column='SRARunID', max_length=64, null=True)),
                ('srasubmissionid', models.CharField(blank=True, db_column='SRASubmissionID', max_length=64, null=True)),
            ],
            options={
                'db_table': 'dnasequencingrun',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dnasequencingruncitation',
            fields=[
                ('dnasequencingruncitationid', models.AutoField(db_column='DNASequencingRunCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'dnasequencingruncitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangein',
            fields=[
                ('exchangeinid', models.AutoField(db_column='ExchangeInID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=120, null=True)),
                ('exchangedate', models.DateField(blank=True, db_column='ExchangeDate', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('quantityexchanged', models.SmallIntegerField(blank=True, db_column='QuantityExchanged', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=32, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('exchangeinnumber', models.CharField(blank=True, db_column='ExchangeInNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'exchangein',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangeinattachment',
            fields=[
                ('exchangeinattachmentid', models.AutoField(db_column='ExchangeInAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'exchangeinattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangeinprep',
            fields=[
                ('exchangeinprepid', models.AutoField(db_column='ExchangeInPrepID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
            ],
            options={
                'db_table': 'exchangeinprep',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangeout',
            fields=[
                ('exchangeoutid', models.AutoField(db_column='ExchangeOutID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=120, null=True)),
                ('exchangedate', models.DateField(blank=True, db_column='ExchangeDate', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('quantityexchanged', models.SmallIntegerField(blank=True, db_column='QuantityExchanged', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=32, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('exchangeoutnumber', models.CharField(db_column='ExchangeOutNumber', max_length=50)),
            ],
            options={
                'db_table': 'exchangeout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangeoutattachment',
            fields=[
                ('exchangeoutattachmentid', models.AutoField(db_column='ExchangeOutAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'exchangeoutattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangeoutprep',
            fields=[
                ('exchangeoutprepid', models.AutoField(db_column='ExchangeOutPrepID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
            ],
            options={
                'db_table': 'exchangeoutprep',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exsiccata',
            fields=[
                ('exsiccataid', models.AutoField(db_column='ExsiccataID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('schedae', models.CharField(blank=True, db_column='Schedae', max_length=255, null=True)),
            ],
            options={
                'db_table': 'exsiccata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exsiccataitem',
            fields=[
                ('exsiccataitemid', models.AutoField(db_column='ExsiccataItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fascicle', models.CharField(blank=True, db_column='Fascicle', max_length=16, null=True)),
                ('number', models.CharField(blank=True, db_column='Number', max_length=16, null=True)),
            ],
            options={
                'db_table': 'exsiccataitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extractor',
            fields=[
                ('extractorid', models.AutoField(db_column='ExtractorID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'extractor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebook',
            fields=[
                ('fieldnotebookid', models.AutoField(db_column='FieldNotebookID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('storage', models.CharField(blank=True, db_column='Storage', max_length=64, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32, null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
            ],
            options={
                'db_table': 'fieldnotebook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookattachment',
            fields=[
                ('fieldnotebookattachmentid', models.AutoField(db_column='FieldNotebookAttachmentId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'fieldnotebookattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpage',
            fields=[
                ('fieldnotebookpageid', models.AutoField(db_column='FieldNotebookPageID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=128, null=True)),
                ('pagenumber', models.CharField(db_column='PageNumber', max_length=32)),
                ('scandate', models.DateField(blank=True, db_column='ScanDate', null=True)),
            ],
            options={
                'db_table': 'fieldnotebookpage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpageattachment',
            fields=[
                ('fieldnotebookpageattachmentid', models.AutoField(db_column='FieldNotebookPageAttachmentId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'fieldnotebookpageattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpageset',
            fields=[
                ('fieldnotebookpagesetid', models.AutoField(db_column='FieldNotebookPageSetID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=128, null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=64, null=True)),
                ('ordernumber', models.SmallIntegerField(blank=True, db_column='OrderNumber', null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
            ],
            options={
                'db_table': 'fieldnotebookpageset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpagesetattachment',
            fields=[
                ('fieldnotebookpagesetattachmentid', models.AutoField(db_column='FieldNotebookPageSetAttachmentId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'fieldnotebookpagesetattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fundingagent',
            fields=[
                ('fundingagentid', models.AutoField(db_column='FundingAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('isprimary', models.TextField(db_column='IsPrimary')),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
            ],
            options={
                'db_table': 'fundingagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geocoorddetail',
            fields=[
                ('geocoorddetailid', models.AutoField(db_column='GeoCoordDetailID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('georefaccuracyunits', models.CharField(blank=True, db_column='GeoRefAccuracyUnits', max_length=20, null=True)),
                ('georefdetdate', models.DateTimeField(blank=True, db_column='GeoRefDetDate', null=True)),
                ('georefdetref', models.CharField(blank=True, db_column='GeoRefDetRef', max_length=100, null=True)),
                ('georefremarks', models.TextField(blank=True, db_column='GeoRefRemarks', null=True)),
                ('georefverificationstatus', models.CharField(blank=True, db_column='GeoRefVerificationStatus', max_length=50, null=True)),
                ('maxuncertaintyest', models.DecimalField(blank=True, db_column='MaxUncertaintyEst', decimal_places=10, max_digits=20, null=True)),
                ('maxuncertaintyestunit', models.CharField(blank=True, db_column='MaxUncertaintyEstUnit', max_length=8, null=True)),
                ('uncertaintypolygon', models.TextField(blank=True, db_column='UncertaintyPolygon', null=True)),
                ('errorpolygon', models.TextField(blank=True, db_column='ErrorPolygon', null=True)),
                ('namedplaceextent', models.DecimalField(blank=True, db_column='NamedPlaceExtent', decimal_places=10, max_digits=20, null=True)),
                ('nogeorefbecause', models.CharField(blank=True, db_column='NoGeoRefBecause', max_length=100, null=True)),
                ('originalcoordsystem', models.CharField(blank=True, db_column='OriginalCoordSystem', max_length=32, null=True)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=64, null=True)),
                ('validation', models.CharField(blank=True, db_column='Validation', max_length=64, null=True)),
                ('georefaccuracy', models.DecimalField(blank=True, db_column='GeoRefAccuracy', decimal_places=10, max_digits=20, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('georefcompileddate', models.DateTimeField(blank=True, db_column='GeoRefCompiledDate', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'geocoorddetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('geographyid', models.AutoField(db_column='GeographyID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('abbrev', models.CharField(blank=True, db_column='Abbrev', max_length=16, null=True)),
                ('centroidlat', models.DecimalField(blank=True, db_column='CentroidLat', decimal_places=2, max_digits=19, null=True)),
                ('centroidlon', models.DecimalField(blank=True, db_column='CentroidLon', decimal_places=2, max_digits=19, null=True)),
                ('commonname', models.CharField(blank=True, db_column='CommonName', max_length=128, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=500, null=True)),
                ('geographycode', models.CharField(blank=True, db_column='GeographyCode', max_length=24, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.TextField(blank=True, db_column='IsAccepted', null=True)),
                ('iscurrent', models.TextField(blank=True, db_column='IsCurrent', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=128, null=True)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('timestampversion', models.DateTimeField(blank=True, db_column='TimestampVersion', null=True)),
            ],
            options={
                'db_table': 'geography',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geographytreedef',
            fields=[
                ('geographytreedefid', models.AutoField(db_column='GeographyTreeDefID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'geographytreedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geographytreedefitem',
            fields=[
                ('geographytreedefitemid', models.AutoField(db_column='GeographyTreeDefItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.TextField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.TextField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
            ],
            options={
                'db_table': 'geographytreedefitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geologictimeperiod',
            fields=[
                ('geologictimeperiodid', models.AutoField(db_column='GeologicTimePeriodID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('endperiod', models.DecimalField(blank=True, db_column='EndPeriod', decimal_places=10, max_digits=20, null=True)),
                ('enduncertainty', models.DecimalField(blank=True, db_column='EndUncertainty', decimal_places=10, max_digits=20, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.TextField(blank=True, db_column='IsAccepted', null=True)),
                ('isbiostrat', models.TextField(blank=True, db_column='IsBioStrat', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('standard', models.CharField(blank=True, db_column='Standard', max_length=64, null=True)),
                ('startperiod', models.DecimalField(blank=True, db_column='StartPeriod', decimal_places=10, max_digits=20, null=True)),
                ('startuncertainty', models.DecimalField(blank=True, db_column='StartUncertainty', decimal_places=10, max_digits=20, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=128, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=128, null=True)),
            ],
            options={
                'db_table': 'geologictimeperiod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geologictimeperiodtreedef',
            fields=[
                ('geologictimeperiodtreedefid', models.AutoField(db_column='GeologicTimePeriodTreeDefID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'geologictimeperiodtreedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geologictimeperiodtreedefitem',
            fields=[
                ('geologictimeperiodtreedefitemid', models.AutoField(db_column='GeologicTimePeriodTreeDefItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.TextField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.TextField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
            ],
            options={
                'db_table': 'geologictimeperiodtreedefitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geoname',
            fields=[
                ('geonameid', models.IntegerField(db_column='geonameId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('asciiname', models.CharField(blank=True, max_length=255, null=True)),
                ('alternatenames', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('fclass', models.CharField(blank=True, max_length=1, null=True)),
                ('fcode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('cc2', models.CharField(blank=True, max_length=60, null=True)),
                ('admin1', models.CharField(blank=True, max_length=20, null=True)),
                ('admin2', models.CharField(blank=True, max_length=80, null=True)),
                ('admin3', models.CharField(blank=True, max_length=20, null=True)),
                ('admin4', models.CharField(blank=True, max_length=20, null=True)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('elevation', models.IntegerField(blank=True, null=True)),
                ('gtopo30', models.IntegerField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=40, null=True)),
                ('moddate', models.DateField(blank=True, null=True)),
                ('isocode', models.CharField(blank=True, db_column='ISOCode', max_length=24, null=True)),
            ],
            options={
                'db_table': 'geoname',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeorefCch',
            fields=[
                ('herbariumaccnum', models.CharField(db_column='HerbariumAccNum', max_length=50, primary_key=True, serialize=False)),
                ('latitudedegreesdecimal', models.DecimalField(blank=True, db_column='LatitudeDegreesDecimal', decimal_places=10, max_digits=18, null=True)),
                ('longitudedegreesdecimal', models.DecimalField(blank=True, db_column='LongitudeDegreesDecimal', decimal_places=10, max_digits=18, null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=64, null=True)),
                ('datum', models.CharField(blank=True, db_column='Datum', max_length=50, null=True)),
                ('errorradius', models.CharField(blank=True, db_column='ErrorRadius', max_length=50, null=True)),
                ('errorunits', models.CharField(blank=True, db_column='ErrorUnits', max_length=50, null=True)),
                ('georeferencer', models.CharField(blank=True, db_column='Georeferencer', max_length=128, null=True)),
                ('herbarium', models.CharField(blank=True, db_column='Herbarium', max_length=3, null=True)),
                ('accessionnumber', models.CharField(blank=True, db_column='AccessionNumber', max_length=32, null=True)),
                ('barcode', models.CharField(blank=True, db_column='Barcode', max_length=32, null=True)),
                ('collectionobjectid', models.IntegerField(blank=True, null=True)),
                ('localityid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'georef_cch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('giftid', models.AutoField(db_column='GiftID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('datereceived', models.DateField(blank=True, db_column='DateReceived', null=True)),
                ('giftdate', models.DateField(blank=True, db_column='GiftDate', null=True)),
                ('giftnumber', models.CharField(db_column='GiftNumber', max_length=50)),
                ('isfinancialresponsibility', models.TextField(blank=True, db_column='IsFinancialResponsibility', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('purposeofgift', models.CharField(blank=True, db_column='PurposeOfGift', max_length=64, null=True)),
                ('receivedcomments', models.CharField(blank=True, db_column='ReceivedComments', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('specialconditions', models.TextField(blank=True, db_column='SpecialConditions', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=500, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=500, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=128, null=True)),
            ],
            options={
                'db_table': 'gift',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Giftagent',
            fields=[
                ('giftagentid', models.AutoField(db_column='GiftAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
            ],
            options={
                'db_table': 'giftagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Giftattachment',
            fields=[
                ('giftattachmentid', models.AutoField(db_column='GiftAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'giftattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Giftpreparation',
            fields=[
                ('giftpreparationid', models.AutoField(db_column='GiftPreparationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('incomments', models.TextField(blank=True, db_column='InComments', null=True)),
                ('outcomments', models.TextField(blank=True, db_column='OutComments', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('receivedcomments', models.TextField(blank=True, db_column='ReceivedComments', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
            ],
            options={
                'db_table': 'giftpreparation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groupperson',
            fields=[
                ('grouppersonid', models.AutoField(db_column='GroupPersonID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordernumber', models.SmallIntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'groupperson',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HibernateUniqueKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_hi', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hibernate_unique_key',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(blank=True, max_length=2000, null=True)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
                ('universal_url', models.CharField(blank=True, max_length=500, null=True)),
                ('original_path', models.CharField(blank=True, max_length=2000, null=True)),
                ('redacted', models.IntegerField(blank=True, null=True)),
                ('internal_filename', models.CharField(blank=True, max_length=500, null=True)),
                ('notes', models.CharField(blank=True, max_length=8192, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('collection', models.CharField(blank=True, max_length=50, null=True)),
                ('orig_md5', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inforequest',
            fields=[
                ('inforequestid', models.AutoField(db_column='InfoRequestID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, db_column='Firstname', max_length=50, null=True)),
                ('inforeqnumber', models.CharField(blank=True, db_column='InfoReqNumber', max_length=32, null=True)),
                ('institution', models.CharField(blank=True, db_column='Institution', max_length=127, null=True)),
                ('lastname', models.CharField(blank=True, db_column='Lastname', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('replydate', models.DateField(blank=True, db_column='ReplyDate', null=True)),
                ('requestdate', models.DateField(blank=True, db_column='RequestDate', null=True)),
            ],
            options={
                'db_table': 'inforequest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('usergroupscopeid', models.IntegerField(db_column='UserGroupScopeId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('altname', models.CharField(blank=True, db_column='AltName', max_length=128, null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=64, null=True)),
                ('copyright', models.TextField(blank=True, db_column='Copyright', null=True)),
                ('currentmanagedrelversion', models.CharField(blank=True, db_column='CurrentManagedRelVersion', max_length=8, null=True)),
                ('currentmanagedschemaversion', models.CharField(blank=True, db_column='CurrentManagedSchemaVersion', max_length=8, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('disclaimer', models.TextField(blank=True, db_column='Disclaimer', null=True)),
                ('hasbeenasked', models.TextField(blank=True, db_column='HasBeenAsked', null=True)),
                ('iconuri', models.CharField(blank=True, db_column='IconURI', max_length=255, null=True)),
                ('institutionid', models.IntegerField(blank=True, db_column='institutionId', null=True)),
                ('ipr', models.TextField(blank=True, db_column='Ipr', null=True)),
                ('isaccessionsglobal', models.TextField(db_column='IsAccessionsGlobal')),
                ('isanonymous', models.TextField(blank=True, db_column='IsAnonymous', null=True)),
                ('isreleasemanagedglobally', models.TextField(blank=True, db_column='IsReleaseManagedGlobally', null=True)),
                ('issecurityon', models.TextField(db_column='IsSecurityOn')),
                ('isserverbased', models.TextField(db_column='IsServerBased')),
                ('issharinglocalities', models.TextField(db_column='IsSharingLocalities')),
                ('issinglegeographytree', models.TextField(db_column='IsSingleGeographyTree')),
                ('license', models.TextField(blank=True, db_column='License', null=True)),
                ('lsidauthority', models.CharField(blank=True, db_column='LsidAuthority', max_length=64, null=True)),
                ('minimumpwdlength', models.IntegerField(blank=True, db_column='MinimumPwdLength', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('termsofuse', models.TextField(blank=True, db_column='TermsOfUse', null=True)),
                ('uri', models.CharField(blank=True, db_column='Uri', max_length=255, null=True)),
            ],
            options={
                'db_table': 'institution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Institutionnetwork',
            fields=[
                ('institutionnetworkid', models.AutoField(db_column='InstitutionNetworkID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('altname', models.CharField(blank=True, db_column='AltName', max_length=128, null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=64, null=True)),
                ('copyright', models.TextField(blank=True, db_column='Copyright', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('disclaimer', models.TextField(blank=True, db_column='Disclaimer', null=True)),
                ('iconuri', models.CharField(blank=True, db_column='IconURI', max_length=255, null=True)),
                ('ipr', models.TextField(blank=True, db_column='Ipr', null=True)),
                ('license', models.TextField(blank=True, db_column='License', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('termsofuse', models.TextField(blank=True, db_column='TermsOfUse', null=True)),
                ('uri', models.CharField(blank=True, db_column='Uri', max_length=255, null=True)),
            ],
            options={
                'db_table': 'institutionnetwork',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosColobjagents',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_colobjagents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosColobjbio',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_colobjbio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosColobjchron',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_colobjchron',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosColobjcnts',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_colobjcnts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosColobjgeo',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_colobjgeo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosColobjlitho',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_colobjlitho',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosGeogeoCnt',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_geogeo_cnt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosGeogeoCty',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_geogeo_cty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosGeoloc',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_geoloc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosGeolocCnt',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_geoloc_cnt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosGeolocCty',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_geoloc_cty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IosTaxonPid',
            fields=[
                ('oldid', models.IntegerField(db_column='OldID', primary_key=True, serialize=False)),
                ('newid', models.IntegerField(db_column='NewID')),
            ],
            options={
                'db_table': 'ios_taxon_pid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('journalid', models.AutoField(db_column='JournalID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('issn', models.CharField(blank=True, db_column='ISSN', max_length=16, null=True)),
                ('journalabbreviation', models.CharField(blank=True, db_column='JournalAbbreviation', max_length=50, null=True)),
                ('journalname', models.CharField(blank=True, db_column='JournalName', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
            ],
            options={
                'db_table': 'journal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Latlonpolygon',
            fields=[
                ('latlonpolygonid', models.AutoField(db_column='LatLonPolygonID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('ispolyline', models.TextField(db_column='IsPolyline')),
                ('name', models.CharField(db_column='Name', max_length=64)),
            ],
            options={
                'db_table': 'latlonpolygon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Latlonpolygonpnt',
            fields=[
                ('latlonpolygonpntid', models.AutoField(db_column='LatLonPolygonPntID', primary_key=True, serialize=False)),
                ('elevation', models.IntegerField(blank=True, db_column='Elevation', null=True)),
                ('latitude', models.DecimalField(db_column='Latitude', decimal_places=10, max_digits=12)),
                ('longitude', models.DecimalField(db_column='Longitude', decimal_places=10, max_digits=12)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
            ],
            options={
                'db_table': 'latlonpolygonpnt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LichenFamilyGenus',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=50, null=True)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=50, null=True)),
            ],
            options={
                'db_table': 'lichen_family_genus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lichenportal',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('institutioncode', models.CharField(blank=True, db_column='institutionCode', max_length=100, null=True)),
                ('collectioncode', models.CharField(blank=True, db_column='collectionCode', max_length=100, null=True)),
                ('ownerinstitutioncode', models.CharField(blank=True, db_column='ownerInstitutionCode', max_length=100, null=True)),
                ('collectionid', models.CharField(blank=True, db_column='collectionID', max_length=100, null=True)),
                ('basisofrecord', models.CharField(blank=True, db_column='basisOfRecord', max_length=100, null=True)),
                ('occurrenceid', models.CharField(blank=True, db_column='occurrenceID', max_length=100, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='catalogNumber', max_length=32, null=True)),
                ('othercatalognumbers', models.CharField(blank=True, db_column='otherCatalogNumbers', max_length=100, null=True)),
                ('higherclassification', models.CharField(blank=True, db_column='higherClassification', max_length=255, null=True)),
                ('kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=100, null=True)),
                ('order', models.CharField(blank=True, max_length=100, null=True)),
                ('family', models.CharField(blank=True, max_length=100, null=True)),
                ('scientificname', models.CharField(blank=True, db_column='scientificName', max_length=100, null=True)),
                ('taxonid', models.CharField(blank=True, db_column='taxonID', max_length=100, null=True)),
                ('scientificnameauthorship', models.CharField(blank=True, db_column='scientificNameAuthorship', max_length=100, null=True)),
                ('genus', models.CharField(blank=True, max_length=100, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=100, null=True)),
                ('specificepithet', models.CharField(blank=True, db_column='specificEpithet', max_length=100, null=True)),
                ('verbatimtaxonrank', models.CharField(blank=True, db_column='verbatimTaxonRank', max_length=100, null=True)),
                ('infraspecificepithet', models.CharField(blank=True, db_column='infraspecificEpithet', max_length=100, null=True)),
                ('taxonrank', models.CharField(blank=True, db_column='taxonRank', max_length=100, null=True)),
                ('identifiedby', models.CharField(blank=True, db_column='identifiedBy', max_length=100, null=True)),
                ('dateidentified', models.CharField(blank=True, db_column='dateIdentified', max_length=100, null=True)),
                ('identificationreferences', models.CharField(blank=True, db_column='identificationReferences', max_length=100, null=True)),
                ('identificationremarks', models.TextField(blank=True, db_column='identificationRemarks', null=True)),
                ('taxonremarks', models.CharField(blank=True, db_column='taxonRemarks', max_length=100, null=True)),
                ('identificationqualifier', models.CharField(blank=True, db_column='identificationQualifier', max_length=100, null=True)),
                ('typestatus', models.CharField(blank=True, db_column='typeStatus', max_length=100, null=True)),
                ('recordedby', models.CharField(blank=True, db_column='recordedBy', max_length=255, null=True)),
                ('associatedcollectors', models.CharField(blank=True, db_column='associatedCollectors', max_length=100, null=True)),
                ('recordnumber', models.CharField(blank=True, db_column='recordNumber', max_length=100, null=True)),
                ('eventdate', models.CharField(blank=True, db_column='eventDate', max_length=100, null=True)),
                ('eventdate2', models.CharField(blank=True, db_column='eventDate2', max_length=100, null=True)),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('month', models.CharField(blank=True, max_length=100, null=True)),
                ('day', models.CharField(blank=True, max_length=100, null=True)),
                ('startdayofyear', models.CharField(blank=True, db_column='startDayOfYear', max_length=100, null=True)),
                ('enddayofyear', models.CharField(blank=True, db_column='endDayOfYear', max_length=100, null=True)),
                ('verbatimeventdate', models.CharField(blank=True, db_column='verbatimEventDate', max_length=255, null=True)),
                ('occurrenceremarks', models.TextField(blank=True, db_column='occurrenceRemarks', null=True)),
                ('habitat', models.TextField(blank=True, null=True)),
                ('substrate', models.CharField(blank=True, max_length=255, null=True)),
                ('verbatimattributes', models.TextField(blank=True, db_column='verbatimAttributes', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='fieldNumber', max_length=100, null=True)),
                ('eventid', models.CharField(blank=True, db_column='eventID', max_length=100, null=True)),
                ('informationwithheld', models.CharField(blank=True, db_column='informationWithheld', max_length=100, null=True)),
                ('datageneralizations', models.CharField(blank=True, db_column='dataGeneralizations', max_length=100, null=True)),
                ('dynamicproperties', models.TextField(blank=True, db_column='dynamicProperties', null=True)),
                ('associatedoccurrences', models.TextField(blank=True, db_column='associatedOccurrences', null=True)),
                ('associatedsequences', models.CharField(blank=True, db_column='associatedSequences', max_length=100, null=True)),
                ('associatedtaxa', models.TextField(blank=True, db_column='associatedTaxa', null=True)),
                ('reproductivecondition', models.CharField(blank=True, db_column='reproductiveCondition', max_length=100, null=True)),
                ('establishmentmeans', models.CharField(blank=True, db_column='establishmentMeans', max_length=100, null=True)),
                ('cultivationstatus', models.CharField(blank=True, db_column='cultivationStatus', max_length=100, null=True)),
                ('lifestage', models.CharField(blank=True, db_column='lifeStage', max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=100, null=True)),
                ('individualcount', models.CharField(blank=True, db_column='individualCount', max_length=100, null=True)),
                ('preparations', models.CharField(blank=True, max_length=100, null=True)),
                ('locationid', models.CharField(blank=True, db_column='locationID', max_length=100, null=True)),
                ('continent', models.CharField(blank=True, max_length=100, null=True)),
                ('waterbody', models.CharField(blank=True, db_column='waterBody', max_length=100, null=True)),
                ('islandgroup', models.CharField(blank=True, db_column='islandGroup', max_length=100, null=True)),
                ('island', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('stateprovince', models.CharField(blank=True, db_column='stateProvince', max_length=100, null=True)),
                ('county', models.CharField(blank=True, max_length=100, null=True)),
                ('municipality', models.CharField(blank=True, max_length=100, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('locationremarks', models.TextField(blank=True, db_column='locationRemarks', null=True)),
                ('localitysecurity', models.CharField(blank=True, db_column='localitySecurity', max_length=100, null=True)),
                ('localitysecurityreason', models.CharField(blank=True, db_column='localitySecurityReason', max_length=100, null=True)),
                ('decimallatitude', models.CharField(blank=True, db_column='decimalLatitude', max_length=100, null=True)),
                ('decimallongitude', models.CharField(blank=True, db_column='decimalLongitude', max_length=100, null=True)),
                ('geodeticdatum', models.CharField(blank=True, db_column='geodeticDatum', max_length=100, null=True)),
                ('coordinateuncertaintyinmeters', models.CharField(blank=True, db_column='coordinateUncertaintyInMeters', max_length=100, null=True)),
                ('verbatimcoordinates', models.CharField(blank=True, db_column='verbatimCoordinates', max_length=100, null=True)),
                ('georeferencedby', models.CharField(blank=True, db_column='georeferencedBy', max_length=100, null=True)),
                ('georeferenceprotocol', models.CharField(blank=True, db_column='georeferenceProtocol', max_length=100, null=True)),
                ('georeferencesources', models.TextField(blank=True, db_column='georeferenceSources', null=True)),
                ('georeferenceverificationstatus', models.CharField(blank=True, db_column='georeferenceVerificationStatus', max_length=100, null=True)),
                ('georeferenceremarks', models.TextField(blank=True, db_column='georeferenceRemarks', null=True)),
                ('minimumelevationinmeters', models.CharField(blank=True, db_column='minimumElevationInMeters', max_length=100, null=True)),
                ('maximumelevationinmeters', models.CharField(blank=True, db_column='maximumElevationInMeters', max_length=100, null=True)),
                ('minimumdepthinmeters', models.CharField(blank=True, db_column='minimumDepthInMeters', max_length=100, null=True)),
                ('maximumdepthinmeters', models.CharField(blank=True, db_column='maximumDepthInMeters', max_length=100, null=True)),
                ('verbatimdepth', models.CharField(blank=True, db_column='verbatimDepth', max_length=100, null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='verbatimElevation', max_length=100, null=True)),
                ('disposition', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('observeruid', models.CharField(blank=True, db_column='observerUid', max_length=100, null=True)),
                ('processingstatus', models.CharField(blank=True, db_column='processingStatus', max_length=100, null=True)),
                ('duplicatequantity', models.CharField(blank=True, db_column='duplicateQuantity', max_length=100, null=True)),
                ('labelproject', models.CharField(blank=True, db_column='labelProject', max_length=100, null=True)),
                ('recordenteredby', models.CharField(blank=True, db_column='recordEnteredBy', max_length=100, null=True)),
                ('dateentered', models.CharField(blank=True, db_column='dateEntered', max_length=100, null=True)),
                ('datelastmodified', models.CharField(blank=True, db_column='dateLastModified', max_length=100, null=True)),
                ('modified', models.CharField(blank=True, max_length=100, null=True)),
                ('rights', models.CharField(blank=True, max_length=100, null=True)),
                ('rightsholder', models.CharField(blank=True, db_column='rightsHolder', max_length=100, null=True)),
                ('accessrights', models.CharField(blank=True, db_column='accessRights', max_length=100, null=True)),
                ('sourceprimarykey_dbpk', models.CharField(blank=True, db_column='sourcePrimaryKey-dbpk', max_length=100, null=True)),
                ('collid', models.CharField(blank=True, db_column='collID', max_length=100, null=True)),
                ('recordid', models.CharField(blank=True, db_column='recordID', max_length=100, null=True)),
                ('references', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lichenportal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lithostrat',
            fields=[
                ('lithostratid', models.AutoField(db_column='LithoStratID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.TextField(blank=True, db_column='IsAccepted', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'lithostrat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lithostrattreedef',
            fields=[
                ('lithostrattreedefid', models.AutoField(db_column='LithoStratTreeDefID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'lithostrattreedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lithostrattreedefitem',
            fields=[
                ('lithostrattreedefitemid', models.AutoField(db_column='LithoStratTreeDefItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.TextField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.TextField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
            ],
            options={
                'db_table': 'lithostrattreedefitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('loanid', models.AutoField(db_column='LoanID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('currentduedate', models.DateField(blank=True, db_column='CurrentDueDate', null=True)),
                ('dateclosed', models.DateField(blank=True, db_column='DateClosed', null=True)),
                ('datereceived', models.DateField(blank=True, db_column='DateReceived', null=True)),
                ('isclosed', models.TextField(blank=True, db_column='IsClosed', null=True)),
                ('isfinancialresponsibility', models.TextField(blank=True, db_column='IsFinancialResponsibility', null=True)),
                ('loandate', models.DateField(blank=True, db_column='LoanDate', null=True)),
                ('loannumber', models.CharField(db_column='LoanNumber', max_length=50)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('originalduedate', models.DateField(blank=True, db_column='OriginalDueDate', null=True)),
                ('overduenotisetdate', models.DateField(blank=True, db_column='OverdueNotiSetDate', null=True)),
                ('purposeofloan', models.CharField(blank=True, db_column='PurposeOfLoan', max_length=64, null=True)),
                ('receivedcomments', models.CharField(blank=True, db_column='ReceivedComments', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('specialconditions', models.TextField(blank=True, db_column='SpecialConditions', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=500, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=500, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
            ],
            options={
                'db_table': 'loan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loanagent',
            fields=[
                ('loanagentid', models.AutoField(db_column='LoanAgentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
            ],
            options={
                'db_table': 'loanagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loanattachment',
            fields=[
                ('loanattachmentid', models.AutoField(db_column='LoanAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'loanattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loanpreparation',
            fields=[
                ('loanpreparationid', models.AutoField(db_column='LoanPreparationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('descriptionofmaterial', models.TextField(blank=True, db_column='DescriptionOfMaterial', null=True)),
                ('incomments', models.TextField(blank=True, db_column='InComments', null=True)),
                ('isresolved', models.TextField(db_column='IsResolved')),
                ('outcomments', models.TextField(blank=True, db_column='OutComments', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('quantityresolved', models.IntegerField(blank=True, db_column='QuantityResolved', null=True)),
                ('quantityreturned', models.IntegerField(blank=True, db_column='QuantityReturned', null=True)),
                ('receivedcomments', models.TextField(blank=True, db_column='ReceivedComments', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
            ],
            options={
                'db_table': 'loanpreparation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loanreturnpreparation',
            fields=[
                ('loanreturnpreparationid', models.AutoField(db_column='LoanReturnPreparationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('quantityresolved', models.IntegerField(blank=True, db_column='QuantityResolved', null=True)),
                ('quantityreturned', models.IntegerField(blank=True, db_column='QuantityReturned', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('returneddate', models.DateField(blank=True, db_column='ReturnedDate', null=True)),
                ('deaccessionpreparationid', models.IntegerField(blank=True, db_column='DeaccessionPreparationID', null=True)),
            ],
            options={
                'db_table': 'loanreturnpreparation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('localityid', models.AutoField(db_column='LocalityID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('datum', models.CharField(blank=True, db_column='Datum', max_length=50, null=True)),
                ('elevationaccuracy', models.DecimalField(blank=True, db_column='ElevationAccuracy', decimal_places=10, max_digits=20, null=True)),
                ('elevationmethod', models.CharField(blank=True, db_column='ElevationMethod', max_length=50, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('lat1text', models.CharField(blank=True, db_column='Lat1Text', max_length=50, null=True)),
                ('lat2text', models.CharField(blank=True, db_column='Lat2Text', max_length=50, null=True)),
                ('latlongaccuracy', models.DecimalField(blank=True, db_column='LatLongAccuracy', decimal_places=10, max_digits=20, null=True)),
                ('latlongmethod', models.CharField(blank=True, db_column='LatLongMethod', max_length=50, null=True)),
                ('latlongtype', models.CharField(blank=True, db_column='LatLongType', max_length=50, null=True)),
                ('latitude1', models.DecimalField(blank=True, db_column='Latitude1', decimal_places=10, max_digits=12, null=True)),
                ('latitude2', models.DecimalField(blank=True, db_column='Latitude2', decimal_places=10, max_digits=12, null=True)),
                ('localityname', models.CharField(db_column='LocalityName', max_length=1024)),
                ('long1text', models.CharField(blank=True, db_column='Long1Text', max_length=50, null=True)),
                ('long2text', models.CharField(blank=True, db_column='Long2Text', max_length=50, null=True)),
                ('longitude1', models.DecimalField(blank=True, db_column='Longitude1', decimal_places=10, max_digits=13, null=True)),
                ('longitude2', models.DecimalField(blank=True, db_column='Longitude2', decimal_places=10, max_digits=13, null=True)),
                ('maxelevation', models.DecimalField(blank=True, db_column='MaxElevation', decimal_places=10, max_digits=20, null=True)),
                ('minelevation', models.DecimalField(blank=True, db_column='MinElevation', decimal_places=10, max_digits=20, null=True)),
                ('namedplace', models.CharField(blank=True, db_column='NamedPlace', max_length=255, null=True)),
                ('originalelevationunit', models.CharField(blank=True, db_column='OriginalElevationUnit', max_length=50, null=True)),
                ('originallatlongunit', models.IntegerField(blank=True, db_column='OriginalLatLongUnit', null=True)),
                ('relationtonamedplace', models.CharField(blank=True, db_column='RelationToNamedPlace', max_length=120, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('shortname', models.CharField(blank=True, db_column='ShortName', max_length=32, null=True)),
                ('srclatlongunit', models.IntegerField(db_column='SrcLatLongUnit')),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='VerbatimElevation', max_length=50, null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('verbatimlatitude', models.CharField(blank=True, db_column='VerbatimLatitude', max_length=50, null=True)),
                ('verbatimlongitude', models.CharField(blank=True, db_column='VerbatimLongitude', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('uniqueidentifier', models.CharField(blank=True, db_column='UniqueIdentifier', max_length=128, null=True)),
            ],
            options={
                'db_table': 'locality',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localityattachment',
            fields=[
                ('localityattachmentid', models.AutoField(db_column='LocalityAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'localityattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localitycitation',
            fields=[
                ('localitycitationid', models.AutoField(db_column='LocalityCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'localitycitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localitydetail',
            fields=[
                ('localitydetailid', models.AutoField(db_column='LocalityDetailID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('basemeridian', models.CharField(blank=True, db_column='BaseMeridian', max_length=50, null=True)),
                ('drainage', models.CharField(blank=True, db_column='Drainage', max_length=64, null=True)),
                ('enddepth', models.DecimalField(blank=True, db_column='EndDepth', decimal_places=10, max_digits=20, null=True)),
                ('enddepthunit', models.CharField(blank=True, max_length=23, null=True)),
                ('enddepthverbatim', models.CharField(blank=True, db_column='EndDepthVerbatim', max_length=32, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('huccode', models.CharField(blank=True, db_column='HucCode', max_length=16, null=True)),
                ('island', models.CharField(blank=True, db_column='Island', max_length=64, null=True)),
                ('islandgroup', models.CharField(blank=True, db_column='IslandGroup', max_length=64, null=True)),
                ('mgrszone', models.CharField(blank=True, db_column='MgrsZone', max_length=4, null=True)),
                ('nationalparkname', models.CharField(blank=True, db_column='NationalParkName', max_length=64, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('rangedesc', models.CharField(blank=True, db_column='RangeDesc', max_length=50, null=True)),
                ('rangedirection', models.CharField(blank=True, db_column='RangeDirection', max_length=50, null=True)),
                ('section', models.CharField(blank=True, db_column='Section', max_length=50, null=True)),
                ('sectionpart', models.CharField(blank=True, db_column='SectionPart', max_length=50, null=True)),
                ('startdepth', models.DecimalField(blank=True, db_column='StartDepth', decimal_places=10, max_digits=20, null=True)),
                ('startdepthunit', models.CharField(blank=True, max_length=23, null=True)),
                ('startdepthverbatim', models.CharField(blank=True, db_column='StartDepthVerbatim', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('township', models.CharField(blank=True, db_column='Township', max_length=50, null=True)),
                ('townshipdirection', models.CharField(blank=True, db_column='TownshipDirection', max_length=50, null=True)),
                ('utmdatum', models.CharField(blank=True, db_column='UtmDatum', max_length=255, null=True)),
                ('utmeasting', models.DecimalField(blank=True, db_column='UtmEasting', decimal_places=2, max_digits=19, null=True)),
                ('utmfalseeasting', models.IntegerField(blank=True, db_column='UtmFalseEasting', null=True)),
                ('utmfalsenorthing', models.IntegerField(blank=True, db_column='UtmFalseNorthing', null=True)),
                ('utmnorthing', models.DecimalField(blank=True, db_column='UtmNorthing', decimal_places=2, max_digits=19, null=True)),
                ('utmoriglatitude', models.DecimalField(blank=True, db_column='UtmOrigLatitude', decimal_places=2, max_digits=19, null=True)),
                ('utmoriglongitude', models.DecimalField(blank=True, db_column='UtmOrigLongitude', decimal_places=2, max_digits=19, null=True)),
                ('utmscale', models.DecimalField(blank=True, db_column='UtmScale', decimal_places=10, max_digits=20, null=True)),
                ('utmzone', models.SmallIntegerField(blank=True, db_column='UtmZone', null=True)),
                ('waterbody', models.CharField(blank=True, db_column='WaterBody', max_length=64, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('paleolat', models.CharField(blank=True, db_column='PaleoLat', max_length=32, null=True)),
                ('paleolng', models.CharField(blank=True, db_column='PaleoLng', max_length=32, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'localitydetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocalityDupes',
            fields=[
                ('localityid', models.AutoField(db_column='LocalityID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('datum', models.CharField(blank=True, db_column='Datum', max_length=50, null=True)),
                ('elevationaccuracy', models.FloatField(blank=True, db_column='ElevationAccuracy', null=True)),
                ('elevationmethod', models.CharField(blank=True, db_column='ElevationMethod', max_length=50, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('lat1text', models.CharField(blank=True, db_column='Lat1Text', max_length=50, null=True)),
                ('lat2text', models.CharField(blank=True, db_column='Lat2Text', max_length=50, null=True)),
                ('latlongaccuracy', models.FloatField(blank=True, db_column='LatLongAccuracy', null=True)),
                ('latlongmethod', models.CharField(blank=True, db_column='LatLongMethod', max_length=50, null=True)),
                ('latlongtype', models.CharField(blank=True, db_column='LatLongType', max_length=50, null=True)),
                ('latitude1', models.DecimalField(blank=True, db_column='Latitude1', decimal_places=10, max_digits=12, null=True)),
                ('latitude2', models.DecimalField(blank=True, db_column='Latitude2', decimal_places=10, max_digits=12, null=True)),
                ('localityname', models.CharField(db_column='LocalityName', max_length=255)),
                ('long1text', models.CharField(blank=True, db_column='Long1Text', max_length=50, null=True)),
                ('long2text', models.CharField(blank=True, db_column='Long2Text', max_length=50, null=True)),
                ('longitude1', models.DecimalField(blank=True, db_column='Longitude1', decimal_places=10, max_digits=13, null=True)),
                ('longitude2', models.DecimalField(blank=True, db_column='Longitude2', decimal_places=10, max_digits=13, null=True)),
                ('maxelevation', models.FloatField(blank=True, db_column='MaxElevation', null=True)),
                ('minelevation', models.FloatField(blank=True, db_column='MinElevation', null=True)),
                ('namedplace', models.CharField(blank=True, db_column='NamedPlace', max_length=255, null=True)),
                ('originalelevationunit', models.CharField(blank=True, db_column='OriginalElevationUnit', max_length=50, null=True)),
                ('originallatlongunit', models.IntegerField(blank=True, db_column='OriginalLatLongUnit', null=True)),
                ('relationtonamedplace', models.CharField(blank=True, db_column='RelationToNamedPlace', max_length=120, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('shortname', models.CharField(blank=True, db_column='ShortName', max_length=32, null=True)),
                ('srclatlongunit', models.IntegerField(db_column='SrcLatLongUnit')),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='VerbatimElevation', max_length=50, null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('disciplineid', models.IntegerField(db_column='DisciplineID')),
                ('geographyid', models.IntegerField(blank=True, db_column='GeographyID', null=True)),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
                ('visibilitysetbyid', models.IntegerField(blank=True, db_column='VisibilitySetByID', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
            ],
            options={
                'db_table': 'locality_dupes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localitynamealias',
            fields=[
                ('localitynamealiasid', models.AutoField(db_column='LocalityNameAliasID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('source', models.CharField(db_column='Source', max_length=64)),
            ],
            options={
                'db_table': 'localitynamealias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Materialsample',
            fields=[
                ('materialsampleid', models.AutoField(db_column='MaterialSampleID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ggbnabsorbanceratio260_230', models.DecimalField(blank=True, db_column='GGBNAbsorbanceRatio260_230', decimal_places=10, max_digits=20, null=True)),
                ('ggbnabsorbanceratio260_280', models.DecimalField(blank=True, db_column='GGBNAbsorbanceRatio260_280', decimal_places=10, max_digits=20, null=True)),
                ('ggbnrabsorbanceratiomethod', models.CharField(blank=True, db_column='GGBNRAbsorbanceRatioMethod', max_length=64, null=True)),
                ('ggbnconcentration', models.DecimalField(blank=True, db_column='GGBNConcentration', decimal_places=10, max_digits=20, null=True)),
                ('ggbnconcentrationunit', models.CharField(blank=True, db_column='GGBNConcentrationUnit', max_length=64, null=True)),
                ('ggbnmaterialsampletype', models.CharField(blank=True, db_column='GGBNMaterialSampleType', max_length=64, null=True)),
                ('ggbnmedium', models.CharField(blank=True, db_column='GGBNMedium', max_length=64, null=True)),
                ('ggbnpurificationmethod', models.CharField(blank=True, db_column='GGBNPurificationMethod', max_length=64, null=True)),
                ('ggbnquality', models.CharField(blank=True, db_column='GGBNQuality', max_length=64, null=True)),
                ('ggbnqualitycheckdate', models.DateField(blank=True, db_column='GGBNQualityCheckDate', null=True)),
                ('ggbnqualityremarks', models.TextField(blank=True, db_column='GGBNQualityRemarks', null=True)),
                ('ggbnsampledesignation', models.CharField(blank=True, db_column='GGBNSampleDesignation', max_length=128, null=True)),
                ('ggbnsamplesize', models.DecimalField(blank=True, db_column='GGBNSampleSize', decimal_places=10, max_digits=20, null=True)),
                ('ggbnvolume', models.DecimalField(blank=True, db_column='GGBNVolume', decimal_places=10, max_digits=20, null=True)),
                ('ggbnvolumeunit', models.CharField(blank=True, db_column='GGBNVolumeUnit', max_length=64, null=True)),
                ('ggbnweight', models.DecimalField(blank=True, db_column='GGBNWeight', decimal_places=10, max_digits=20, null=True)),
                ('ggbnweightmethod', models.CharField(blank=True, db_column='GGBNWeightMethod', max_length=64, null=True)),
                ('ggbnweightunit', models.CharField(blank=True, db_column='GGBNWeightUnit', max_length=64, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservednumber3', models.DecimalField(blank=True, db_column='ReservedNumber3', decimal_places=10, max_digits=20, null=True)),
                ('reservednumber4', models.DecimalField(blank=True, db_column='ReservedNumber4', decimal_places=10, max_digits=20, null=True)),
                ('reservedtext3', models.TextField(blank=True, db_column='ReservedText3', null=True)),
                ('reservedtext4', models.TextField(blank=True, db_column='ReservedText4', null=True)),
                ('srabioprojectid', models.CharField(blank=True, db_column='SRABioProjectID', max_length=64, null=True)),
                ('srabiosampleid', models.CharField(blank=True, db_column='SRABioSampleID', max_length=64, null=True)),
                ('sraprojectid', models.CharField(blank=True, db_column='SRAProjectID', max_length=64, null=True)),
                ('srasampleid', models.CharField(blank=True, db_column='SRASampleID', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('extractiondate', models.DateField(blank=True, db_column='ExtractionDate', null=True)),
            ],
            options={
                'db_table': 'materialsample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Morphbankview',
            fields=[
                ('morphbankviewid', models.AutoField(db_column='MorphBankViewID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('developmentstate', models.CharField(blank=True, db_column='DevelopmentState', max_length=128, null=True)),
                ('form', models.CharField(blank=True, db_column='Form', max_length=128, null=True)),
                ('imagingpreparationtechnique', models.CharField(blank=True, db_column='ImagingPreparationTechnique', max_length=128, null=True)),
                ('imagingtechnique', models.CharField(blank=True, db_column='ImagingTechnique', max_length=128, null=True)),
                ('morphbankexternalviewid', models.IntegerField(blank=True, db_column='MorphBankExternalViewID', null=True)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=32, null=True)),
                ('specimenpart', models.CharField(blank=True, db_column='SpecimenPart', max_length=128, null=True)),
                ('viewangle', models.CharField(blank=True, db_column='ViewAngle', max_length=128, null=True)),
                ('viewname', models.CharField(blank=True, db_column='ViewName', max_length=128, null=True)),
            ],
            options={
                'db_table': 'morphbankview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationsMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestampcreated', models.DateTimeField()),
                ('content', models.TextField()),
                ('read', models.IntegerField()),
            ],
            options={
                'db_table': 'notifications_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Otheridentifier',
            fields=[
                ('otheridentifierid', models.AutoField(db_column='OtherIdentifierID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('identifier', models.CharField(db_column='Identifier', max_length=64)),
                ('institution', models.CharField(blank=True, db_column='Institution', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.IntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'otheridentifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paleocontext',
            fields=[
                ('paleocontextid', models.AutoField(db_column='PaleoContextID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=64, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=64, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('paleocontextname', models.CharField(blank=True, db_column='PaleoContextName', max_length=80, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=500, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=500, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=500, null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
            ],
            options={
                'db_table': 'paleocontext',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pcrperson',
            fields=[
                ('pcrpersonid', models.AutoField(db_column='PcrPersonID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'pcrperson',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('permitid', models.AutoField(db_column='PermitID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('issueddate', models.DateField(blank=True, db_column='IssuedDate', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('permitnumber', models.CharField(db_column='PermitNumber', max_length=50)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('renewaldate', models.DateField(blank=True, db_column='RenewalDate', null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('copyright', models.CharField(blank=True, db_column='Copyright', max_length=256, null=True)),
                ('isavailable', models.TextField(blank=True, db_column='IsAvailable', null=True)),
                ('isrequired', models.TextField(blank=True, db_column='IsRequired', null=True)),
                ('permittext', models.TextField(blank=True, db_column='PermitText', null=True)),
                ('reservedinteger1', models.IntegerField(blank=True, db_column='ReservedInteger1', null=True)),
                ('reservedinteger2', models.IntegerField(blank=True, db_column='ReservedInteger2', null=True)),
                ('reservedtext3', models.CharField(blank=True, db_column='ReservedText3', max_length=128, null=True)),
                ('reservedtext4', models.CharField(blank=True, db_column='ReservedText4', max_length=128, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('statusqualifier', models.CharField(blank=True, db_column='StatusQualifier', max_length=128, null=True)),
            ],
            options={
                'db_table': 'permit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permitattachment',
            fields=[
                ('permitattachmentid', models.AutoField(db_column='PermitAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'permitattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Picklist',
            fields=[
                ('picklistid', models.AutoField(db_column='PickListID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=64, null=True)),
                ('filterfieldname', models.CharField(blank=True, db_column='FilterFieldName', max_length=32, null=True)),
                ('filtervalue', models.CharField(blank=True, db_column='FilterValue', max_length=32, null=True)),
                ('formatter', models.CharField(blank=True, db_column='Formatter', max_length=64, null=True)),
                ('issystem', models.TextField(db_column='IsSystem')),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('readonly', models.TextField(db_column='ReadOnly')),
                ('sizelimit', models.IntegerField(blank=True, db_column='SizeLimit', null=True)),
                ('sorttype', models.IntegerField(blank=True, db_column='SortType', null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=64, null=True)),
                ('type', models.IntegerField(db_column='Type')),
            ],
            options={
                'db_table': 'picklist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Picklistitem',
            fields=[
                ('picklistitemid', models.AutoField(db_column='PickListItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('title', models.CharField(db_column='Title', max_length=1024)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=1024, null=True)),
            ],
            options={
                'db_table': 'picklistitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preparation',
            fields=[
                ('preparationid', models.AutoField(db_column='PreparationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('countamt', models.IntegerField(blank=True, db_column='CountAmt', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('prepareddate', models.DateField(blank=True, db_column='PreparedDate', null=True)),
                ('prepareddateprecision', models.IntegerField(blank=True, db_column='PreparedDatePrecision', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('samplenumber', models.CharField(blank=True, db_column='SampleNumber', max_length=32, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('storagelocation', models.CharField(blank=True, db_column='StorageLocation', max_length=50, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True, unique=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.IntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('date3', models.DateField(blank=True, db_column='Date3', null=True)),
                ('date3precision', models.IntegerField(blank=True, db_column='Date3Precision', null=True)),
                ('date4', models.DateField(blank=True, db_column='Date4', null=True)),
                ('date4precision', models.IntegerField(blank=True, db_column='Date4Precision', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('barcode', models.CharField(blank=True, db_column='BarCode', max_length=256, null=True)),
                ('text10', models.TextField(blank=True, db_column='Text10', null=True)),
                ('text11', models.TextField(blank=True, db_column='Text11', null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=128, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=128, null=True)),
            ],
            options={
                'db_table': 'preparation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preparationattachment',
            fields=[
                ('preparationattachmentid', models.AutoField(db_column='PreparationAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'preparationattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preparationattr',
            fields=[
                ('attrid', models.AutoField(db_column='AttrID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('doublevalue', models.FloatField(blank=True, db_column='DoubleValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=255, null=True)),
            ],
            options={
                'db_table': 'preparationattr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preparationattribute',
            fields=[
                ('preparationattributeid', models.AutoField(db_column='PreparationAttributeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('attrdate', models.DateField(blank=True, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.IntegerField(blank=True, db_column='Number4', null=True)),
                ('number5', models.IntegerField(blank=True, db_column='Number5', null=True)),
                ('number6', models.IntegerField(blank=True, db_column='Number6', null=True)),
                ('number7', models.IntegerField(blank=True, db_column='Number7', null=True)),
                ('number8', models.IntegerField(blank=True, db_column='Number8', null=True)),
                ('number9', models.SmallIntegerField(blank=True, db_column='Number9', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.TextField(blank=True, db_column='Text10', null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=50, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=50, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=50, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=50, null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=50, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=50, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=50, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=50, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=50, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=50, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=50, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=50, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
            ],
            options={
                'db_table': 'preparationattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PreparationDupes',
            fields=[
                ('preparationid', models.AutoField(db_column='PreparationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('countamt', models.IntegerField(blank=True, db_column='CountAmt', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('number1', models.FloatField(blank=True, db_column='Number1', null=True)),
                ('number2', models.FloatField(blank=True, db_column='Number2', null=True)),
                ('prepareddate', models.DateField(blank=True, db_column='PreparedDate', null=True)),
                ('prepareddateprecision', models.IntegerField(blank=True, db_column='PreparedDatePrecision', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('samplenumber', models.CharField(blank=True, db_column='SampleNumber', max_length=32, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('storagelocation', models.CharField(blank=True, db_column='StorageLocation', max_length=50, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('preparedbyid', models.IntegerField(blank=True, db_column='PreparedByID', null=True)),
                ('storageid', models.IntegerField(blank=True, db_column='StorageID', null=True)),
                ('collectionobjectid', models.IntegerField(db_column='CollectionObjectID')),
                ('createdbyagentid', models.IntegerField(blank=True, db_column='CreatedByAgentID', null=True)),
                ('preparationattributeid', models.IntegerField(blank=True, db_column='PreparationAttributeID', null=True)),
                ('preptypeid', models.IntegerField(db_column='PrepTypeID')),
                ('modifiedbyagentid', models.IntegerField(blank=True, db_column='ModifiedByAgentID', null=True)),
            ],
            options={
                'db_table': 'preparation_dupes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preparationproperty',
            fields=[
                ('preparationpropertyid', models.AutoField(db_column='PreparationPropertyID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date10', models.DateField(blank=True, db_column='Date10', null=True)),
                ('date11', models.DateField(blank=True, db_column='Date11', null=True)),
                ('date12', models.DateField(blank=True, db_column='Date12', null=True)),
                ('date13', models.DateField(blank=True, db_column='Date13', null=True)),
                ('date14', models.DateField(blank=True, db_column='Date14', null=True)),
                ('date15', models.DateField(blank=True, db_column='Date15', null=True)),
                ('date16', models.DateField(blank=True, db_column='Date16', null=True)),
                ('date17', models.DateField(blank=True, db_column='Date17', null=True)),
                ('date18', models.DateField(blank=True, db_column='Date18', null=True)),
                ('date19', models.DateField(blank=True, db_column='Date19', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('date20', models.DateField(blank=True, db_column='Date20', null=True)),
                ('date3', models.DateField(blank=True, db_column='Date3', null=True)),
                ('date4', models.DateField(blank=True, db_column='Date4', null=True)),
                ('date5', models.DateField(blank=True, db_column='Date5', null=True)),
                ('date6', models.DateField(blank=True, db_column='Date6', null=True)),
                ('date7', models.DateField(blank=True, db_column='Date7', null=True)),
                ('date8', models.DateField(blank=True, db_column='Date8', null=True)),
                ('date9', models.DateField(blank=True, db_column='Date9', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.SmallIntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.SmallIntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer11', models.SmallIntegerField(blank=True, db_column='Integer11', null=True)),
                ('integer12', models.SmallIntegerField(blank=True, db_column='Integer12', null=True)),
                ('integer13', models.SmallIntegerField(blank=True, db_column='Integer13', null=True)),
                ('integer14', models.SmallIntegerField(blank=True, db_column='Integer14', null=True)),
                ('integer15', models.SmallIntegerField(blank=True, db_column='Integer15', null=True)),
                ('integer16', models.SmallIntegerField(blank=True, db_column='Integer16', null=True)),
                ('integer17', models.SmallIntegerField(blank=True, db_column='Integer17', null=True)),
                ('integer18', models.SmallIntegerField(blank=True, db_column='Integer18', null=True)),
                ('integer19', models.SmallIntegerField(blank=True, db_column='Integer19', null=True)),
                ('integer2', models.SmallIntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer20', models.SmallIntegerField(blank=True, db_column='Integer20', null=True)),
                ('integer21', models.IntegerField(blank=True, db_column='Integer21', null=True)),
                ('integer22', models.IntegerField(blank=True, db_column='Integer22', null=True)),
                ('integer23', models.IntegerField(blank=True, db_column='Integer23', null=True)),
                ('integer24', models.IntegerField(blank=True, db_column='Integer24', null=True)),
                ('integer25', models.IntegerField(blank=True, db_column='Integer25', null=True)),
                ('integer26', models.IntegerField(blank=True, db_column='Integer26', null=True)),
                ('integer27', models.IntegerField(blank=True, db_column='Integer27', null=True)),
                ('integer28', models.IntegerField(blank=True, db_column='Integer28', null=True)),
                ('integer29', models.IntegerField(blank=True, db_column='Integer29', null=True)),
                ('integer3', models.SmallIntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer30', models.IntegerField(blank=True, db_column='Integer30', null=True)),
                ('integer4', models.SmallIntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.SmallIntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.SmallIntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.SmallIntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.SmallIntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.SmallIntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=20, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=20, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=20, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=20, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=20, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=20, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=20, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=20, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=20, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=20, null=True)),
                ('number21', models.DecimalField(blank=True, db_column='Number21', decimal_places=10, max_digits=20, null=True)),
                ('number22', models.DecimalField(blank=True, db_column='Number22', decimal_places=10, max_digits=20, null=True)),
                ('number23', models.DecimalField(blank=True, db_column='Number23', decimal_places=10, max_digits=20, null=True)),
                ('number24', models.DecimalField(blank=True, db_column='Number24', decimal_places=10, max_digits=20, null=True)),
                ('number25', models.DecimalField(blank=True, db_column='Number25', decimal_places=10, max_digits=20, null=True)),
                ('number26', models.DecimalField(blank=True, db_column='Number26', decimal_places=10, max_digits=20, null=True)),
                ('number27', models.DecimalField(blank=True, db_column='Number27', decimal_places=10, max_digits=20, null=True)),
                ('number28', models.DecimalField(blank=True, db_column='Number28', decimal_places=10, max_digits=20, null=True)),
                ('number29', models.DecimalField(blank=True, db_column='Number29', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number30', models.DecimalField(blank=True, db_column='Number30', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=20, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=20, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=20, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=50, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=100, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=100, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=100, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=100, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=50, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=100, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=100, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=100, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=100, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=100, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=100, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=100, null=True)),
                ('text27', models.CharField(blank=True, db_column='Text27', max_length=100, null=True)),
                ('text28', models.CharField(blank=True, db_column='Text28', max_length=100, null=True)),
                ('text29', models.CharField(blank=True, db_column='Text29', max_length=100, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=50, null=True)),
                ('text30', models.CharField(blank=True, db_column='Text30', max_length=100, null=True)),
                ('text31', models.TextField(blank=True, db_column='Text31', null=True)),
                ('text32', models.TextField(blank=True, db_column='Text32', null=True)),
                ('text33', models.TextField(blank=True, db_column='Text33', null=True)),
                ('text34', models.TextField(blank=True, db_column='Text34', null=True)),
                ('text35', models.TextField(blank=True, db_column='Text35', null=True)),
                ('text36', models.TextField(blank=True, db_column='Text36', null=True)),
                ('text37', models.TextField(blank=True, db_column='Text37', null=True)),
                ('text38', models.TextField(blank=True, db_column='Text38', null=True)),
                ('text39', models.TextField(blank=True, db_column='Text39', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text40', models.TextField(blank=True, db_column='Text40', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.TextField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.TextField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.TextField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.TextField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.TextField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.TextField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.TextField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.TextField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.TextField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.TextField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.TextField(blank=True, db_column='YesNo20', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.TextField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.TextField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.TextField(blank=True, db_column='YesNo9', null=True)),
            ],
            options={
                'db_table': 'preparationproperty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preptype',
            fields=[
                ('preptypeid', models.AutoField(db_column='PrepTypeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('isloanable', models.TextField(db_column='IsLoanable')),
                ('name', models.CharField(db_column='Name', max_length=64)),
            ],
            options={
                'db_table': 'preptype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('projectid', models.AutoField(db_column='ProjectID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('grantagency', models.CharField(blank=True, db_column='GrantAgency', max_length=64, null=True)),
                ('grantnumber', models.CharField(blank=True, db_column='GrantNumber', max_length=64, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('projectdescription', models.CharField(blank=True, db_column='ProjectDescription', max_length=255, null=True)),
                ('projectname', models.CharField(db_column='ProjectName', max_length=128)),
                ('projectnumber', models.CharField(blank=True, db_column='ProjectNumber', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('url', models.TextField(blank=True, db_column='URL', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recordsetitem',
            fields=[
                ('recordsetitemid', models.AutoField(db_column='RecordSetItemID', primary_key=True, serialize=False)),
                ('recordid', models.IntegerField(db_column='RecordId')),
                ('ordernumber', models.IntegerField(blank=True, db_column='OrderNumber', null=True)),
            ],
            options={
                'db_table': 'recordsetitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Referencework',
            fields=[
                ('referenceworkid', models.AutoField(db_column='ReferenceWorkID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('ispublished', models.TextField(blank=True, db_column='IsPublished', null=True)),
                ('isbn', models.CharField(blank=True, db_column='ISBN', max_length=16, null=True)),
                ('librarynumber', models.CharField(blank=True, db_column='LibraryNumber', max_length=50, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('pages', models.CharField(blank=True, db_column='Pages', max_length=50, null=True)),
                ('placeofpublication', models.CharField(blank=True, db_column='PlaceOfPublication', max_length=50, null=True)),
                ('publisher', models.CharField(blank=True, db_column='Publisher', max_length=250, null=True)),
                ('referenceworktype', models.IntegerField(db_column='ReferenceWorkType')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=400, null=True)),
                ('url', models.TextField(blank=True, db_column='URL', null=True)),
                ('volume', models.CharField(blank=True, db_column='Volume', max_length=25, null=True)),
                ('workdate', models.CharField(blank=True, db_column='WorkDate', max_length=25, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('doi', models.TextField(blank=True, db_column='Doi', null=True)),
                ('uri', models.TextField(blank=True, db_column='Uri', null=True)),
            ],
            options={
                'db_table': 'referencework',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Referenceworkattachment',
            fields=[
                ('referenceworkattachmentid', models.AutoField(db_column='ReferenceWorkAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'referenceworkattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Repositoryagreement',
            fields=[
                ('repositoryagreementid', models.AutoField(db_column='RepositoryAgreementID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('datereceived', models.DateField(blank=True, db_column='DateReceived', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('repositoryagreementnumber', models.CharField(db_column='RepositoryAgreementNumber', max_length=60)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=255, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=255, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=255, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'repositoryagreement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Repositoryagreementattachment',
            fields=[
                ('repositoryagreementattachmentid', models.AutoField(db_column='RepositoryAgreementAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'repositoryagreementattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sgrbatchmatchresultitem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('matchedid', models.CharField(db_column='matchedId', max_length=128)),
                ('maxscore', models.FloatField(db_column='maxScore')),
                ('qtime', models.IntegerField(db_column='qTime')),
            ],
            options={
                'db_table': 'sgrbatchmatchresultitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sgrbatchmatchresultset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('inserttime', models.DateTimeField(db_column='insertTime')),
                ('name', models.CharField(max_length=128)),
                ('recordsetid', models.BigIntegerField(blank=True, db_column='recordSetID', null=True)),
                ('query', models.TextField()),
                ('remarks', models.TextField()),
                ('dbtableid', models.IntegerField(blank=True, db_column='dbTableId', null=True)),
            ],
            options={
                'db_table': 'sgrbatchmatchresultset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sgrmatchconfiguration',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('similarityfields', models.TextField(db_column='similarityFields')),
                ('serverurl', models.TextField(db_column='serverUrl')),
                ('filterquery', models.CharField(db_column='filterQuery', max_length=128)),
                ('queryfields', models.TextField(db_column='queryFields')),
                ('remarks', models.TextField()),
                ('boostinterestingterms', models.IntegerField(db_column='boostInterestingTerms')),
                ('nrows', models.IntegerField(db_column='nRows')),
            ],
            options={
                'db_table': 'sgrmatchconfiguration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('shipmentid', models.AutoField(db_column='ShipmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('insuredforamount', models.CharField(blank=True, db_column='InsuredForAmount', max_length=50, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('numberofpackages', models.SmallIntegerField(blank=True, db_column='NumberOfPackages', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('shipmentdate', models.DateField(blank=True, db_column='ShipmentDate', null=True)),
                ('shipmentmethod', models.CharField(blank=True, db_column='ShipmentMethod', max_length=50, null=True)),
                ('shipmentnumber', models.CharField(db_column='ShipmentNumber', max_length=50)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('weight', models.CharField(blank=True, db_column='Weight', max_length=50, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'shipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spappresource',
            fields=[
                ('spappresourceid', models.AutoField(db_column='SpAppResourceID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('allpermissionlevel', models.IntegerField(blank=True, db_column='AllPermissionLevel', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('grouppermissionlevel', models.IntegerField(blank=True, db_column='GroupPermissionLevel', null=True)),
                ('level', models.SmallIntegerField(db_column='Level')),
                ('metadata', models.CharField(blank=True, db_column='MetaData', max_length=255, null=True)),
                ('mimetype', models.CharField(blank=True, db_column='MimeType', max_length=255, null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('ownerpermissionlevel', models.IntegerField(blank=True, db_column='OwnerPermissionLevel', null=True)),
            ],
            options={
                'db_table': 'spappresource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spappresourcedata',
            fields=[
                ('spappresourcedataid', models.AutoField(db_column='SpAppResourceDataID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'spappresourcedata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spappresourcedir',
            fields=[
                ('spappresourcedirid', models.AutoField(db_column='SpAppResourceDirID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('disciplinetype', models.CharField(blank=True, db_column='DisciplineType', max_length=64, null=True)),
                ('ispersonal', models.TextField(db_column='IsPersonal')),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=64, null=True)),
            ],
            options={
                'db_table': 'spappresourcedir',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spauditlog',
            fields=[
                ('spauditlogid', models.AutoField(db_column='SpAuditLogID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('action', models.IntegerField(db_column='Action')),
                ('parentrecordid', models.IntegerField(blank=True, db_column='ParentRecordId', null=True)),
                ('parenttablenum', models.SmallIntegerField(blank=True, db_column='ParentTableNum', null=True)),
                ('recordid', models.IntegerField(blank=True, db_column='RecordId', null=True)),
                ('recordversion', models.IntegerField(db_column='RecordVersion')),
                ('tablenum', models.SmallIntegerField(db_column='TableNum')),
            ],
            options={
                'db_table': 'spauditlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spauditlogfield',
            fields=[
                ('spauditlogfieldid', models.AutoField(db_column='SpAuditLogFieldID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=128, null=True)),
                ('newvalue', models.TextField(blank=True, db_column='NewValue', null=True)),
                ('oldvalue', models.TextField(blank=True, db_column='OldValue', null=True)),
            ],
            options={
                'db_table': 'spauditlogfield',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spdataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('columns', models.TextField(db_collation='utf8mb4_bin')),
                ('data', models.TextField(db_collation='utf8mb4_bin')),
                ('uploadplan', models.TextField(blank=True, null=True)),
                ('uploaderstatus', models.TextField(blank=True, db_collation='utf8mb4_bin', null=True)),
                ('uploadresult', models.TextField(blank=True, db_collation='utf8mb4_bin', null=True)),
                ('rowresults', models.TextField(blank=True, null=True)),
                ('visualorder', models.TextField(blank=True, db_collation='utf8mb4_bin', null=True)),
                ('importedfilename', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('timestampcreated', models.DateTimeField()),
                ('timestampmodified', models.DateTimeField()),
            ],
            options={
                'db_table': 'spdataset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Specifyuser',
            fields=[
                ('specifyuserid', models.AutoField(db_column='SpecifyUserID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('accumminloggedin', models.BigIntegerField(blank=True, db_column='AccumMinLoggedIn', null=True)),
                ('email', models.CharField(blank=True, db_column='EMail', max_length=64, null=True)),
                ('isloggedin', models.TextField(db_column='IsLoggedIn')),
                ('isloggedinreport', models.TextField(db_column='IsLoggedInReport')),
                ('logincollectionname', models.CharField(blank=True, db_column='LoginCollectionName', max_length=64, null=True)),
                ('logindisciplinename', models.CharField(blank=True, db_column='LoginDisciplineName', max_length=64, null=True)),
                ('loginouttime', models.DateTimeField(blank=True, db_column='LoginOutTime', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=255)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=32, null=True)),
            ],
            options={
                'db_table': 'specifyuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spexportschema',
            fields=[
                ('spexportschemaid', models.AutoField(db_column='SpExportSchemaID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('schemaname', models.CharField(blank=True, db_column='SchemaName', max_length=80, null=True)),
                ('schemaversion', models.CharField(blank=True, db_column='SchemaVersion', max_length=80, null=True)),
            ],
            options={
                'db_table': 'spexportschema',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spexportschemaitem',
            fields=[
                ('spexportschemaitemid', models.AutoField(db_column='SpExportSchemaItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('datatype', models.CharField(blank=True, db_column='DataType', max_length=32, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=64, null=True)),
                ('formatter', models.CharField(blank=True, db_column='Formatter', max_length=32, null=True)),
            ],
            options={
                'db_table': 'spexportschemaitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spexportschemaitemmapping',
            fields=[
                ('spexportschemaitemmappingid', models.AutoField(db_column='SpExportSchemaItemMappingID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=255, null=True)),
                ('exportedfieldname', models.CharField(blank=True, db_column='ExportedFieldName', max_length=64, null=True)),
                ('extensionitem', models.TextField(blank=True, db_column='ExtensionItem', null=True)),
                ('rowtype', models.CharField(blank=True, db_column='RowType', max_length=500, null=True)),
            ],
            options={
                'db_table': 'spexportschemaitemmapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spexportschemamapping',
            fields=[
                ('spexportschemamappingid', models.AutoField(db_column='SpExportSchemaMappingID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('mappingname', models.CharField(blank=True, db_column='MappingName', max_length=50, null=True)),
                ('timestampexported', models.DateTimeField(blank=True, db_column='TimeStampExported', null=True)),
            ],
            options={
                'db_table': 'spexportschemamapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spfieldvaluedefault',
            fields=[
                ('spfieldvaluedefaultid', models.AutoField(db_column='SpFieldValueDefaultID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=32, null=True)),
                ('idvalue', models.IntegerField(blank=True, db_column='IdValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=64, null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=32, null=True)),
            ],
            options={
                'db_table': 'spfieldvaluedefault',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Splibraryrole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'splibraryrole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Splibraryrolepolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.CharField(max_length=1024)),
                ('action', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'splibraryrolepolicy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Splocalecontainer',
            fields=[
                ('splocalecontainerid', models.AutoField(db_column='SpLocaleContainerID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('format', models.CharField(blank=True, db_column='Format', max_length=64, null=True)),
                ('ishidden', models.TextField(db_column='IsHidden')),
                ('issystem', models.TextField(db_column='IsSystem')),
                ('isuiformatter', models.TextField(blank=True, db_column='IsUIFormatter', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('picklistname', models.CharField(blank=True, db_column='PickListName', max_length=64, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('aggregator', models.CharField(blank=True, db_column='Aggregator', max_length=64, null=True)),
                ('defaultui', models.CharField(blank=True, db_column='DefaultUI', max_length=64, null=True)),
                ('schematype', models.IntegerField(db_column='SchemaType')),
            ],
            options={
                'db_table': 'splocalecontainer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Splocalecontaineritem',
            fields=[
                ('splocalecontaineritemid', models.AutoField(db_column='SpLocaleContainerItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('format', models.CharField(blank=True, db_column='Format', max_length=64, null=True)),
                ('ishidden', models.TextField(db_column='IsHidden')),
                ('issystem', models.TextField(db_column='IsSystem')),
                ('isuiformatter', models.TextField(blank=True, db_column='IsUIFormatter', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('picklistname', models.CharField(blank=True, db_column='PickListName', max_length=64, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('isrequired', models.TextField(blank=True, db_column='IsRequired', null=True)),
                ('weblinkname', models.CharField(blank=True, db_column='WebLinkName', max_length=32, null=True)),
            ],
            options={
                'db_table': 'splocalecontaineritem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Splocaleitemstr',
            fields=[
                ('splocaleitemstrid', models.AutoField(db_column='SpLocaleItemStrID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=2, null=True)),
                ('language', models.CharField(db_column='Language', max_length=2)),
                ('text', models.CharField(db_column='Text', max_length=2048)),
                ('variant', models.CharField(blank=True, db_column='Variant', max_length=2, null=True)),
            ],
            options={
                'db_table': 'splocaleitemstr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spmerging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('taskid', models.CharField(max_length=256)),
                ('mergingstatus', models.CharField(max_length=256)),
                ('response', models.TextField()),
                ('table', models.CharField(max_length=256)),
                ('newrecordid', models.IntegerField(blank=True, null=True)),
                ('newrecordata', models.TextField(blank=True, db_collation='utf8mb4_bin', null=True)),
                ('oldrecordids', models.TextField(blank=True, db_collation='utf8mb4_bin', null=True)),
                ('timestampcreated', models.DateTimeField()),
                ('timestampmodified', models.DateTimeField()),
            ],
            options={
                'db_table': 'spmerging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sppermission',
            fields=[
                ('sppermissionid', models.AutoField(db_column='SpPermissionID', primary_key=True, serialize=False)),
                ('actions', models.TextField(blank=True, db_column='Actions', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('permissionclass', models.TextField(db_column='PermissionClass')),
                ('targetid', models.IntegerField(blank=True, db_column='TargetId', null=True)),
            ],
            options={
                'db_table': 'sppermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spprincipal',
            fields=[
                ('spprincipalid', models.AutoField(db_column='SpPrincipalID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('groupsubclass', models.CharField(db_column='GroupSubClass', max_length=255)),
                ('grouptype', models.CharField(blank=True, db_column='groupType', max_length=32, null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('priority', models.IntegerField(db_column='Priority')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('usergroupscopeid', models.IntegerField(blank=True, db_column='userGroupScopeID', null=True)),
            ],
            options={
                'db_table': 'spprincipal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spquery',
            fields=[
                ('spqueryid', models.AutoField(db_column='SpQueryID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('contextname', models.CharField(db_column='ContextName', max_length=64)),
                ('contexttableid', models.SmallIntegerField(db_column='ContextTableId')),
                ('countonly', models.TextField(blank=True, db_column='CountOnly', null=True)),
                ('isfavorite', models.TextField(blank=True, db_column='IsFavorite', null=True)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('ordinal', models.SmallIntegerField(blank=True, db_column='Ordinal', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('searchsynonymy', models.TextField(blank=True, db_column='SearchSynonymy', null=True)),
                ('selectdistinct', models.TextField(blank=True, db_column='SelectDistinct', null=True)),
                ('sqlstr', models.TextField(blank=True, db_column='SqlStr', null=True)),
                ('smushed', models.TextField(blank=True, db_column='Smushed', null=True)),
                ('formatauditrecids', models.TextField(blank=True, db_column='FormatAuditRecIds', null=True)),
            ],
            options={
                'db_table': 'spquery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spqueryfield',
            fields=[
                ('spqueryfieldid', models.AutoField(db_column='SpQueryFieldID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('allownulls', models.TextField(blank=True, db_column='AllowNulls', null=True)),
                ('alwaysfilter', models.TextField(blank=True, db_column='AlwaysFilter', null=True)),
                ('columnalias', models.CharField(blank=True, db_column='ColumnAlias', max_length=64, null=True)),
                ('contexttableident', models.IntegerField(blank=True, db_column='ContextTableIdent', null=True)),
                ('endvalue', models.TextField(blank=True, db_column='EndValue', null=True)),
                ('fieldname', models.CharField(db_column='FieldName', max_length=32)),
                ('formatname', models.CharField(blank=True, db_column='FormatName', max_length=64, null=True)),
                ('isdisplay', models.TextField(db_column='IsDisplay')),
                ('isnot', models.TextField(db_column='IsNot')),
                ('isprompt', models.TextField(blank=True, db_column='IsPrompt', null=True)),
                ('isrelfld', models.TextField(blank=True, db_column='IsRelFld', null=True)),
                ('operend', models.IntegerField(blank=True, db_column='OperEnd', null=True)),
                ('operstart', models.IntegerField(db_column='OperStart')),
                ('position', models.SmallIntegerField(db_column='Position')),
                ('sorttype', models.IntegerField(db_column='SortType')),
                ('startvalue', models.TextField(blank=True, db_column='StartValue', null=True)),
                ('stringid', models.TextField(db_column='StringId')),
                ('tablelist', models.TextField(db_column='TableList')),
            ],
            options={
                'db_table': 'spqueryfield',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spreport',
            fields=[
                ('spreportid', models.AutoField(db_column='SpReportId', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('repeatcount', models.IntegerField(blank=True, db_column='RepeatCount', null=True)),
                ('repeatfield', models.CharField(blank=True, db_column='RepeatField', max_length=255, null=True)),
            ],
            options={
                'db_table': 'spreport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sprole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'sprole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sprolepolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.CharField(max_length=1024)),
                ('action', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'sprolepolicy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spstynthy',
            fields=[
                ('spstynthyid', models.AutoField(db_column='SpStynthyID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('metaxml', models.TextField(blank=True, db_column='MetaXML', null=True)),
                ('updateperioddays', models.IntegerField(db_column='UpdatePeriodDays')),
                ('lastexported', models.DateTimeField(blank=True, db_column='LastExported', null=True)),
                ('collectionid', models.IntegerField(db_column='CollectionID')),
                ('mappingxml', models.TextField(blank=True, db_column='MappingXML', null=True)),
                ('key1', models.CharField(blank=True, db_column='Key1', max_length=256, null=True)),
                ('key2', models.CharField(blank=True, db_column='Key2', max_length=256, null=True)),
            ],
            options={
                'db_table': 'spstynthy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spsymbiotainstance',
            fields=[
                ('spsymbiotainstanceid', models.AutoField(db_column='SpSymbiotaInstanceID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=256, null=True)),
                ('instancename', models.CharField(blank=True, db_column='InstanceName', max_length=256, null=True)),
                ('lastcachebuild', models.DateTimeField(blank=True, db_column='LastCacheBuild', null=True)),
                ('lastpull', models.DateTimeField(blank=True, db_column='LastPull', null=True)),
                ('lastpush', models.DateTimeField(blank=True, db_column='LastPush', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('symbiotakey', models.CharField(blank=True, db_column='SymbiotaKey', max_length=128, null=True)),
            ],
            options={
                'db_table': 'spsymbiotainstance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sptasksemaphore',
            fields=[
                ('tasksemaphoreid', models.AutoField(db_column='TaskSemaphoreID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('context', models.CharField(blank=True, db_column='Context', max_length=32, null=True)),
                ('islocked', models.TextField(blank=True, db_column='IsLocked', null=True)),
                ('lockedtime', models.DateTimeField(blank=True, db_column='LockedTime', null=True)),
                ('machinename', models.CharField(blank=True, db_column='MachineName', max_length=64, null=True)),
                ('scope', models.IntegerField(blank=True, db_column='Scope', null=True)),
                ('taskname', models.CharField(blank=True, db_column='TaskName', max_length=32, null=True)),
                ('usagecount', models.IntegerField(blank=True, db_column='UsageCount', null=True)),
            ],
            options={
                'db_table': 'sptasksemaphore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spuserexternalid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=256)),
                ('providerid', models.CharField(max_length=4095)),
                ('enabled', models.IntegerField()),
                ('idtoken', models.TextField(blank=True, db_collation='utf8mb4_bin', null=True)),
            ],
            options={
                'db_table': 'spuserexternalid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spuserpolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.CharField(max_length=1024)),
                ('action', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'spuserpolicy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spuserrole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'spuserrole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spversion',
            fields=[
                ('spversionid', models.AutoField(db_column='SpVersionID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('appname', models.CharField(blank=True, db_column='AppName', max_length=32, null=True)),
                ('appversion', models.CharField(blank=True, db_column='AppVersion', max_length=16, null=True)),
                ('schemaversion', models.CharField(blank=True, db_column='SchemaVersion', max_length=16, null=True)),
                ('isdbclosed', models.TextField(blank=True, db_column='IsDBClosed', null=True)),
                ('dbclosedby', models.CharField(blank=True, db_column='DbClosedBy', max_length=32, null=True)),
                ('workbenchschemaversion', models.CharField(blank=True, db_column='WorkbenchSchemaVersion', max_length=16, null=True)),
            ],
            options={
                'db_table': 'spversion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spviewsetobj',
            fields=[
                ('spviewsetobjid', models.AutoField(db_column='SpViewSetObjID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('filename', models.CharField(blank=True, db_column='FileName', max_length=255, null=True)),
                ('level', models.SmallIntegerField(db_column='Level')),
                ('metadata', models.CharField(blank=True, db_column='MetaData', max_length=255, null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
            ],
            options={
                'db_table': 'spviewsetobj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spvisualquery',
            fields=[
                ('spvisualqueryid', models.AutoField(db_column='SpVisualQueryID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
            ],
            options={
                'db_table': 'spvisualquery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('storageid', models.AutoField(db_column='StorageID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('abbrev', models.CharField(blank=True, db_column='Abbrev', max_length=16, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.TextField(blank=True, db_column='IsAccepted', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('timestampversion', models.DateTimeField(blank=True, db_column='TimestampVersion', null=True)),
            ],
            options={
                'db_table': 'storage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storageattachment',
            fields=[
                ('storageattachmentid', models.AutoField(db_column='StorageAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'storageattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storagetreedef',
            fields=[
                ('storagetreedefid', models.AutoField(db_column='StorageTreeDefID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'storagetreedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storagetreedefitem',
            fields=[
                ('storagetreedefitemid', models.AutoField(db_column='StorageTreeDefItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.TextField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.TextField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
            ],
            options={
                'db_table': 'storagetreedefitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('taxonid', models.AutoField(db_column='TaxonID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('author', models.CharField(blank=True, db_column='Author', max_length=128, null=True)),
                ('citesstatus', models.CharField(blank=True, db_column='CitesStatus', max_length=32, null=True)),
                ('colstatus', models.CharField(blank=True, db_column='COLStatus', max_length=32, null=True)),
                ('commonname', models.CharField(blank=True, db_column='CommonName', max_length=128, null=True)),
                ('cultivarname', models.CharField(blank=True, db_column='CultivarName', max_length=32, null=True)),
                ('environmentalprotectionstatus', models.CharField(blank=True, db_column='EnvironmentalProtectionStatus', max_length=64, null=True)),
                ('esastatus', models.CharField(blank=True, db_column='EsaStatus', max_length=64, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=512, null=True)),
                ('groupnumber', models.CharField(blank=True, db_column='GroupNumber', max_length=20, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.TextField(blank=True, db_column='IsAccepted', null=True)),
                ('ishybrid', models.TextField(blank=True, db_column='IsHybrid', null=True)),
                ('isisnumber', models.CharField(blank=True, db_column='IsisNumber', max_length=16, null=True)),
                ('labelformat', models.CharField(blank=True, db_column='LabelFormat', max_length=64, null=True)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('ncbitaxonnumber', models.CharField(blank=True, db_column='NcbiTaxonNumber', max_length=8, null=True)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=64, null=True)),
                ('taxonomicserialnumber', models.CharField(blank=True, db_column='TaxonomicSerialNumber', max_length=50, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('unitind1', models.CharField(blank=True, db_column='UnitInd1', max_length=50, null=True)),
                ('unitind2', models.CharField(blank=True, db_column='UnitInd2', max_length=50, null=True)),
                ('unitind3', models.CharField(blank=True, db_column='UnitInd3', max_length=50, null=True)),
                ('unitind4', models.CharField(blank=True, db_column='UnitInd4', max_length=50, null=True)),
                ('unitname1', models.CharField(blank=True, db_column='UnitName1', max_length=50, null=True)),
                ('unitname2', models.CharField(blank=True, db_column='UnitName2', max_length=50, null=True)),
                ('unitname3', models.CharField(blank=True, db_column='UnitName3', max_length=50, null=True)),
                ('unitname4', models.CharField(blank=True, db_column='UnitName4', max_length=50, null=True)),
                ('usfwscode', models.CharField(blank=True, db_column='UsfwsCode', max_length=16, null=True)),
                ('visibility', models.IntegerField(blank=True, db_column='Visibility', null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('integer1', models.BigIntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.BigIntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.BigIntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=128, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=128, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=128, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=128, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=256, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=256, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=256, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=256, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=256, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=256, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=256, null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('yesno10', models.TextField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.TextField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.TextField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.TextField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.TextField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.TextField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.TextField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.TextField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.TextField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.TextField(blank=True, db_column='YesNo19', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.TextField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.TextField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.TextField(blank=True, db_column='YesNo9', null=True)),
                ('lsid', models.TextField(blank=True, db_column='LSID', null=True)),
            ],
            options={
                'db_table': 'taxon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxonattachment',
            fields=[
                ('taxonattachmentid', models.AutoField(db_column='TaxonAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'taxonattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxonattribute',
            fields=[
                ('taxonattributeid', models.AutoField(db_column='TaxonAttributeID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.IntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=20, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=20, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=20, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=20, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=20, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=20, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=20, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=20, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=20, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=20, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=20, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=20, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=128, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=128, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=128, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=128, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=128, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=128, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=128, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=128, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=128, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=128, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=128, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=128, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=128, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=128, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=128, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=128, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=128, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=128, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=128, null=True)),
                ('text27', models.CharField(blank=True, db_column='Text27', max_length=256, null=True)),
                ('text28', models.CharField(blank=True, db_column='Text28', max_length=256, null=True)),
                ('text29', models.CharField(blank=True, db_column='Text29', max_length=256, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=128, null=True)),
                ('text30', models.CharField(blank=True, db_column='Text30', max_length=256, null=True)),
                ('text31', models.CharField(blank=True, db_column='Text31', max_length=256, null=True)),
                ('text32', models.CharField(blank=True, db_column='Text32', max_length=256, null=True)),
                ('text33', models.CharField(blank=True, db_column='Text33', max_length=256, null=True)),
                ('text34', models.CharField(blank=True, db_column='Text34', max_length=256, null=True)),
                ('text35', models.CharField(blank=True, db_column='Text35', max_length=256, null=True)),
                ('text36', models.CharField(blank=True, db_column='Text36', max_length=256, null=True)),
                ('text37', models.CharField(blank=True, db_column='Text37', max_length=256, null=True)),
                ('text38', models.CharField(blank=True, db_column='Text38', max_length=256, null=True)),
                ('text39', models.CharField(blank=True, db_column='Text39', max_length=256, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=128, null=True)),
                ('text40', models.CharField(blank=True, db_column='Text40', max_length=256, null=True)),
                ('text41', models.CharField(blank=True, db_column='Text41', max_length=256, null=True)),
                ('text42', models.CharField(blank=True, db_column='Text42', max_length=256, null=True)),
                ('text43', models.CharField(blank=True, db_column='Text43', max_length=256, null=True)),
                ('text44', models.CharField(blank=True, db_column='Text44', max_length=256, null=True)),
                ('text45', models.CharField(blank=True, db_column='Text45', max_length=256, null=True)),
                ('text46', models.CharField(blank=True, db_column='Text46', max_length=256, null=True)),
                ('text47', models.CharField(blank=True, db_column='Text47', max_length=256, null=True)),
                ('text48', models.CharField(blank=True, db_column='Text48', max_length=256, null=True)),
                ('text49', models.TextField(blank=True, db_column='Text49', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=128, null=True)),
                ('text50', models.TextField(blank=True, db_column='Text50', null=True)),
                ('text51', models.TextField(blank=True, db_column='Text51', null=True)),
                ('text52', models.TextField(blank=True, db_column='Text52', null=True)),
                ('text53', models.TextField(blank=True, db_column='Text53', null=True)),
                ('text54', models.TextField(blank=True, db_column='Text54', null=True)),
                ('text55', models.TextField(blank=True, db_column='Text55', null=True)),
                ('text56', models.TextField(blank=True, db_column='Text56', null=True)),
                ('text57', models.TextField(blank=True, db_column='Text57', null=True)),
                ('text58', models.TextField(blank=True, db_column='Text58', null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=128, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=128, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=128, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=128, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.TextField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.TextField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.TextField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.TextField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.TextField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.TextField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.TextField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.TextField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.TextField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.TextField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.TextField(blank=True, db_column='YesNo20', null=True)),
                ('yesno21', models.TextField(blank=True, db_column='YesNo21', null=True)),
                ('yesno22', models.TextField(blank=True, db_column='YesNo22', null=True)),
                ('yesno23', models.TextField(blank=True, db_column='YesNo23', null=True)),
                ('yesno24', models.TextField(blank=True, db_column='YesNo24', null=True)),
                ('yesno25', models.TextField(blank=True, db_column='YesNo25', null=True)),
                ('yesno26', models.TextField(blank=True, db_column='YesNo26', null=True)),
                ('yesno27', models.TextField(blank=True, db_column='YesNo27', null=True)),
                ('yesno28', models.TextField(blank=True, db_column='YesNo28', null=True)),
                ('yesno29', models.TextField(blank=True, db_column='YesNo29', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
                ('yesno30', models.TextField(blank=True, db_column='YesNo30', null=True)),
                ('yesno31', models.TextField(blank=True, db_column='YesNo31', null=True)),
                ('yesno32', models.TextField(blank=True, db_column='YesNo32', null=True)),
                ('yesno33', models.TextField(blank=True, db_column='YesNo33', null=True)),
                ('yesno34', models.TextField(blank=True, db_column='YesNo34', null=True)),
                ('yesno35', models.TextField(blank=True, db_column='YesNo35', null=True)),
                ('yesno36', models.TextField(blank=True, db_column='YesNo36', null=True)),
                ('yesno37', models.TextField(blank=True, db_column='YesNo37', null=True)),
                ('yesno38', models.TextField(blank=True, db_column='YesNo38', null=True)),
                ('yesno39', models.TextField(blank=True, db_column='YesNo39', null=True)),
                ('yesno4', models.TextField(blank=True, db_column='YesNo4', null=True)),
                ('yesno40', models.TextField(blank=True, db_column='YesNo40', null=True)),
                ('yesno41', models.TextField(blank=True, db_column='YesNo41', null=True)),
                ('yesno42', models.TextField(blank=True, db_column='YesNo42', null=True)),
                ('yesno43', models.TextField(blank=True, db_column='YesNo43', null=True)),
                ('yesno44', models.TextField(blank=True, db_column='YesNo44', null=True)),
                ('yesno45', models.TextField(blank=True, db_column='YesNo45', null=True)),
                ('yesno46', models.TextField(blank=True, db_column='YesNo46', null=True)),
                ('yesno47', models.TextField(blank=True, db_column='YesNo47', null=True)),
                ('yesno48', models.TextField(blank=True, db_column='YesNo48', null=True)),
                ('yesno49', models.TextField(blank=True, db_column='YesNo49', null=True)),
                ('yesno5', models.TextField(blank=True, db_column='YesNo5', null=True)),
                ('yesno50', models.TextField(blank=True, db_column='YesNo50', null=True)),
                ('yesno51', models.TextField(blank=True, db_column='YesNo51', null=True)),
                ('yesno52', models.TextField(blank=True, db_column='YesNo52', null=True)),
                ('yesno53', models.TextField(blank=True, db_column='YesNo53', null=True)),
                ('yesno54', models.TextField(blank=True, db_column='YesNo54', null=True)),
                ('yesno55', models.TextField(blank=True, db_column='YesNo55', null=True)),
                ('yesno56', models.TextField(blank=True, db_column='YesNo56', null=True)),
                ('yesno57', models.TextField(blank=True, db_column='YesNo57', null=True)),
                ('yesno58', models.TextField(blank=True, db_column='YesNo58', null=True)),
                ('yesno59', models.TextField(blank=True, db_column='YesNo59', null=True)),
                ('yesno6', models.TextField(blank=True, db_column='YesNo6', null=True)),
                ('yesno60', models.TextField(blank=True, db_column='YesNo60', null=True)),
                ('yesno61', models.TextField(blank=True, db_column='YesNo61', null=True)),
                ('yesno62', models.TextField(blank=True, db_column='YesNo62', null=True)),
                ('yesno63', models.TextField(blank=True, db_column='YesNo63', null=True)),
                ('yesno64', models.TextField(blank=True, db_column='YesNo64', null=True)),
                ('yesno65', models.TextField(blank=True, db_column='YesNo65', null=True)),
                ('yesno66', models.TextField(blank=True, db_column='YesNo66', null=True)),
                ('yesno67', models.TextField(blank=True, db_column='YesNo67', null=True)),
                ('yesno68', models.TextField(blank=True, db_column='YesNo68', null=True)),
                ('yesno69', models.TextField(blank=True, db_column='YesNo69', null=True)),
                ('yesno7', models.TextField(blank=True, db_column='YesNo7', null=True)),
                ('yesno70', models.TextField(blank=True, db_column='YesNo70', null=True)),
                ('yesno71', models.TextField(blank=True, db_column='YesNo71', null=True)),
                ('yesno72', models.TextField(blank=True, db_column='YesNo72', null=True)),
                ('yesno73', models.TextField(blank=True, db_column='YesNo73', null=True)),
                ('yesno74', models.TextField(blank=True, db_column='YesNo74', null=True)),
                ('yesno75', models.TextField(blank=True, db_column='YesNo75', null=True)),
                ('yesno76', models.TextField(blank=True, db_column='YesNo76', null=True)),
                ('yesno77', models.TextField(blank=True, db_column='YesNo77', null=True)),
                ('yesno78', models.TextField(blank=True, db_column='YesNo78', null=True)),
                ('yesno79', models.TextField(blank=True, db_column='YesNo79', null=True)),
                ('yesno8', models.TextField(blank=True, db_column='YesNo8', null=True)),
                ('yesno80', models.TextField(blank=True, db_column='YesNo80', null=True)),
                ('yesno81', models.TextField(blank=True, db_column='YesNo81', null=True)),
                ('yesno82', models.TextField(blank=True, db_column='YesNo82', null=True)),
                ('yesno9', models.TextField(blank=True, db_column='YesNo9', null=True)),
            ],
            options={
                'db_table': 'taxonattribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxoncitation',
            fields=[
                ('taxoncitationid', models.AutoField(db_column='TaxonCitationID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.TextField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'taxoncitation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxontreedef',
            fields=[
                ('taxontreedefid', models.AutoField(db_column='TaxonTreeDefID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=255, null=True)),
            ],
            options={
                'db_table': 'taxontreedef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxontreedefitem',
            fields=[
                ('taxontreedefitemid', models.AutoField(db_column='TaxonTreeDefItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('formattoken', models.CharField(blank=True, db_column='FormatToken', max_length=32, null=True)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.TextField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.TextField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
            ],
            options={
                'db_table': 'taxontreedefitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Treatmentevent',
            fields=[
                ('treatmenteventid', models.AutoField(db_column='TreatmentEventID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('dateboxed', models.DateField(blank=True, db_column='DateBoxed', null=True)),
                ('datecleaned', models.DateField(blank=True, db_column='DateCleaned', null=True)),
                ('datecompleted', models.DateField(blank=True, db_column='DateCompleted', null=True)),
                ('datereceived', models.DateField(blank=True, db_column='DateReceived', null=True)),
                ('datetoisolation', models.DateField(blank=True, db_column='DateToIsolation', null=True)),
                ('datetreatmentended', models.DateField(blank=True, db_column='DateTreatmentEnded', null=True)),
                ('datetreatmentstarted', models.DateField(blank=True, db_column='DateTreatmentStarted', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='FieldNumber', max_length=50, null=True)),
                ('storage', models.CharField(blank=True, db_column='Storage', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('treatmentnumber', models.CharField(blank=True, db_column='TreatmentNumber', max_length=32, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=128, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=20, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=20, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
            ],
            options={
                'db_table': 'treatmentevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Treatmenteventattachment',
            fields=[
                ('treatmenteventattachmentid', models.AutoField(db_column='TreatmentEventAttachmentID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
            ],
            options={
                'db_table': 'treatmenteventattachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCreatedLichenGenera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lichen_genus', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'user_created_lichen_genera',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Voucherrelationship',
            fields=[
                ('voucherrelationshipid', models.AutoField(db_column='VoucherRelationshipID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('collectioncode', models.CharField(blank=True, db_column='CollectionCode', max_length=64, null=True)),
                ('institutioncode', models.CharField(blank=True, db_column='InstitutionCode', max_length=64, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('urllink', models.CharField(blank=True, db_column='UrlLink', max_length=1024, null=True)),
                ('vouchernumber', models.CharField(blank=True, db_column='VoucherNumber', max_length=256, null=True)),
                ('yesno1', models.TextField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.TextField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.TextField(blank=True, db_column='YesNo3', null=True)),
            ],
            options={
                'db_table': 'voucherrelationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbench',
            fields=[
                ('workbenchid', models.AutoField(db_column='WorkbenchID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('allpermissionlevel', models.IntegerField(blank=True, db_column='AllPermissionLevel', null=True)),
                ('tableid', models.IntegerField(blank=True, db_column='TableID', null=True)),
                ('exportinstitutionname', models.CharField(blank=True, db_column='ExportInstitutionName', max_length=128, null=True)),
                ('exportedfromtablename', models.CharField(blank=True, db_column='ExportedFromTableName', max_length=128, null=True)),
                ('formid', models.IntegerField(blank=True, db_column='FormId', null=True)),
                ('grouppermissionlevel', models.IntegerField(blank=True, db_column='GroupPermissionLevel', null=True)),
                ('lockedbyusername', models.CharField(blank=True, db_column='LockedByUserName', max_length=64, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('ownerpermissionlevel', models.IntegerField(blank=True, db_column='OwnerPermissionLevel', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcfilepath', models.CharField(blank=True, db_column='SrcFilePath', max_length=255, null=True)),
            ],
            options={
                'db_table': 'workbench',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbenchdataitem',
            fields=[
                ('workbenchdataitemid', models.AutoField(db_column='WorkbenchDataItemID', primary_key=True, serialize=False)),
                ('celldata', models.TextField(blank=True, db_column='CellData', null=True)),
                ('rownumber', models.SmallIntegerField(blank=True, db_column='RowNumber', null=True)),
                ('validationstatus', models.SmallIntegerField(blank=True, db_column='ValidationStatus', null=True)),
            ],
            options={
                'db_table': 'workbenchdataitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbenchrow',
            fields=[
                ('workbenchrowid', models.AutoField(db_column='WorkbenchRowID', primary_key=True, serialize=False)),
                ('biogeomancerresults', models.TextField(blank=True, db_column='BioGeomancerResults', null=True)),
                ('cardimagedata', models.TextField(blank=True, db_column='CardImageData', null=True)),
                ('cardimagefullpath', models.CharField(blank=True, db_column='CardImageFullPath', max_length=255, null=True)),
                ('lat1text', models.CharField(blank=True, db_column='Lat1Text', max_length=50, null=True)),
                ('lat2text', models.CharField(blank=True, db_column='Lat2Text', max_length=50, null=True)),
                ('long1text', models.CharField(blank=True, db_column='Long1Text', max_length=50, null=True)),
                ('long2text', models.CharField(blank=True, db_column='Long2Text', max_length=50, null=True)),
                ('recordid', models.IntegerField(blank=True, db_column='RecordID', null=True)),
                ('rownumber', models.SmallIntegerField(blank=True, db_column='RowNumber', null=True)),
                ('uploadstatus', models.IntegerField(blank=True, db_column='UploadStatus', null=True)),
                ('sgrstatus', models.IntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('errorestimate', models.DecimalField(blank=True, db_column='ErrorEstimate', decimal_places=10, max_digits=20, null=True)),
                ('errorpolygon', models.TextField(blank=True, db_column='ErrorPolygon', null=True)),
            ],
            options={
                'db_table': 'workbenchrow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbenchrowexportedrelationship',
            fields=[
                ('workbenchrowexportedrelationshipid', models.AutoField(db_column='WorkbenchRowExportedRelationshipID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('recordid', models.IntegerField(blank=True, db_column='RecordID', null=True)),
                ('relationshipname', models.CharField(blank=True, db_column='RelationshipName', max_length=120, null=True)),
                ('sequence', models.IntegerField(blank=True, db_column='Sequence', null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=120, null=True)),
            ],
            options={
                'db_table': 'workbenchrowexportedrelationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbenchrowimage',
            fields=[
                ('workbenchrowimageid', models.AutoField(db_column='WorkbenchRowImageID', primary_key=True, serialize=False)),
                ('attachtotablename', models.CharField(blank=True, db_column='AttachToTableName', max_length=64, null=True)),
                ('cardimagedata', models.TextField(blank=True, db_column='CardImageData', null=True)),
                ('cardimagefullpath', models.CharField(blank=True, db_column='CardImageFullPath', max_length=255, null=True)),
                ('imageorder', models.IntegerField(blank=True, db_column='ImageOrder', null=True)),
            ],
            options={
                'db_table': 'workbenchrowimage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbenchtemplate',
            fields=[
                ('workbenchtemplateid', models.AutoField(db_column='WorkbenchTemplateID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcfilepath', models.CharField(blank=True, db_column='SrcFilePath', max_length=255, null=True)),
            ],
            options={
                'db_table': 'workbenchtemplate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workbenchtemplatemappingitem',
            fields=[
                ('workbenchtemplatemappingitemid', models.AutoField(db_column='WorkbenchTemplateMappingItemID', primary_key=True, serialize=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated')),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('xcoord', models.SmallIntegerField(blank=True, db_column='XCoord', null=True)),
                ('ycoord', models.SmallIntegerField(blank=True, db_column='YCoord', null=True)),
                ('caption', models.CharField(blank=True, db_column='Caption', max_length=64, null=True)),
                ('carryforward', models.TextField(blank=True, db_column='CarryForward', null=True)),
                ('datafieldlength', models.SmallIntegerField(blank=True, db_column='DataFieldLength', null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=255, null=True)),
                ('fieldtype', models.SmallIntegerField(blank=True, db_column='FieldType', null=True)),
                ('importedcolname', models.CharField(blank=True, db_column='ImportedColName', max_length=255, null=True)),
                ('iseditable', models.TextField(blank=True, db_column='IsEditable', null=True)),
                ('isexportabletocontent', models.TextField(blank=True, db_column='IsExportableToContent', null=True)),
                ('isincludedintitle', models.TextField(blank=True, db_column='IsIncludedInTitle', null=True)),
                ('isrequired', models.TextField(blank=True, db_column='IsRequired', null=True)),
                ('metadata', models.CharField(blank=True, db_column='MetaData', max_length=128, null=True)),
                ('datacolumnindex', models.SmallIntegerField(blank=True, db_column='DataColumnIndex', null=True)),
                ('tableid', models.IntegerField(blank=True, db_column='TableId', null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=64, null=True)),
                ('vieworder', models.SmallIntegerField(blank=True, db_column='ViewOrder', null=True)),
            ],
            options={
                'db_table': 'workbenchtemplatemappingitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionsRecordset',
            fields=[
                ('key', models.UUIDField(primary_key=True, serialize=False)),
                ('recordsetName', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('key', models.UUIDField(primary_key=True, serialize=False)),
                ('organizationID', models.CharField(max_length=255)),
                ('organizationName', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('key', models.IntegerField(primary_key=True, serialize=False)),
                ('taxonKey', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AutonumschColl',
            fields=[
                ('collectionid', models.OneToOneField(db_column='CollectionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.collection')),
            ],
            options={
                'db_table': 'autonumsch_coll',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutonumschDiv',
            fields=[
                ('divisionid', models.OneToOneField(db_column='DivisionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.division')),
            ],
            options={
                'db_table': 'autonumsch_div',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutonumschDsp',
            fields=[
                ('disciplineid', models.OneToOneField(db_column='DisciplineID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.discipline')),
            ],
            options={
                'db_table': 'autonumsch_dsp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectColobj',
            fields=[
                ('projectid', models.OneToOneField(db_column='ProjectID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.project')),
            ],
            options={
                'db_table': 'project_colobj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpecifyuserSpprincipal',
            fields=[
                ('specifyuserid', models.OneToOneField(db_column='SpecifyUserID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.specifyuser')),
            ],
            options={
                'db_table': 'specifyuser_spprincipal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpprincipalSppermission',
            fields=[
                ('sppermissionid', models.OneToOneField(db_column='SpPermissionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.sppermission')),
            ],
            options={
                'db_table': 'spprincipal_sppermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpSchemaMapping',
            fields=[
                ('spexportschemamappingid', models.OneToOneField(db_column='SpExportSchemaMappingID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='collections_app_api.spexportschemamapping')),
            ],
            options={
                'db_table': 'sp_schema_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('key', models.BigIntegerField(primary_key=True, serialize=False)),
                ('occurrence_id', models.CharField(max_length=255)),
                ('publishing_country', models.CharField(max_length=2)),
                ('protocol', models.CharField(max_length=50)),
                ('last_crawled', models.DateTimeField()),
                ('last_parsed', models.DateTimeField()),
                ('crawl_id', models.IntegerField()),
                ('basis_of_record', models.CharField(max_length=255)),
                ('occurrence_status', models.CharField(max_length=255)),
                ('sex', models.CharField(blank=True, max_length=50, null=True)),
                ('life_stage', models.CharField(blank=True, max_length=50, null=True)),
                ('scientific_name', models.CharField(max_length=255)),
                ('decimal_latitude', models.FloatField(blank=True, null=True)),
                ('decimal_longitude', models.FloatField(blank=True, null=True)),
                ('elevation', models.FloatField(blank=True, null=True)),
                ('continent', models.CharField(blank=True, max_length=255, null=True)),
                ('state_province', models.CharField(blank=True, max_length=255, null=True)),
                ('water_body', models.CharField(blank=True, max_length=255, null=True)),
                ('higher_geography', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('start_day_of_year', models.IntegerField(blank=True, null=True)),
                ('end_day_of_year', models.IntegerField(blank=True, null=True)),
                ('type_status', models.CharField(blank=True, max_length=255, null=True)),
                ('issues', models.JSONField()),
                ('modified', models.DateTimeField()),
                ('last_interpreted', models.DateTimeField()),
                ('license', models.URLField()),
                ('is_sequenced', models.BooleanField()),
                ('identifiers', models.JSONField()),
                ('media', models.JSONField()),
                ('facts', models.JSONField()),
                ('relations', models.JSONField()),
                ('institution_key', models.UUIDField()),
                ('collection_key', models.UUIDField()),
                ('is_in_cluster', models.BooleanField()),
                ('recorded_by', models.CharField(blank=True, max_length=255, null=True)),
                ('identified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('preparations', models.CharField(blank=True, max_length=255, null=True)),
                ('geodetic_datum', models.CharField(max_length=255)),
                ('record_number', models.CharField(blank=True, max_length=255, null=True)),
                ('verbatim_event_date', models.CharField(blank=True, max_length=255, null=True)),
                ('island_group', models.CharField(blank=True, max_length=255, null=True)),
                ('island', models.CharField(blank=True, max_length=255, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('verbatim_locality', models.TextField(blank=True, null=True)),
                ('collection_code', models.CharField(max_length=255)),
                ('occurrence_remarks', models.TextField(blank=True, null=True)),
                ('verbatim_elevation', models.CharField(blank=True, max_length=255, null=True)),
                ('higher_classification', models.TextField(blank=True, null=True)),
                ('georeference_sources', models.TextField(blank=True, null=True)),
                ('publishing_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collections_app_api.organization')),
                ('recordsetName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collections_app_api.collectionsrecordset')),
                ('taxonKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collections_app_api.species')),
            ],
        ),
        migrations.CreateModel(
            name='GalapaGateway',
            fields=[
                ('key', models.BigIntegerField(primary_key=True, serialize=False)),
                ('recordsetName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collections_app_api.collectionsrecordset')),
            ],
        ),
    ]
