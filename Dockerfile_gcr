# Use an official Python runtime as a parent image
FROM python:3.10

#Install Nginx and supervisor
RUN apt-get update && apt-get install -y nginx netcat-openbsd && apt-get install iputils-ping && rm -rf /var/lib/apt/lists/*

# Set the working directory in the container
WORKDIR /collections_app

# Copy project files
#COPY . /app/
COPY . .

#### Commenting out, deploying Django and Nginx as separate GCloud containers
#COPY nginx/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
#COPY nginx/nginx.conf /etc/nginx/nginx.conf
## Create log directory
#RUN mkdir -p /var/log/supervisor
####

RUN python -m venv /venv

ENV PATH="/venv/bin:$PATH"

RUN /venv/bin/pip install --upgrade pip

# Install Python dependencies using pip within the virtual environment
RUN /venv/bin/pip install --no-cache-dir -r requirements.txt

# Explicitly install Gunicorn (if not included in requirements.txt)
#RUN /venv/bin/pip install gunicorn

# Verify Gunicorn installation (for debugging)
RUN /venv/bin/gunicorn --version || echo "Gunicorn not installed correctly"

# Copy the wait-for-it script
#COPY wait-for-it.sh /wait-for-it.sh
#RUN chmod +x /wait-for-it.sh

#### Commenting out, deploying Django and Nginx as separate GCloud containers
# Collect static files
#RUN python manage.py collectstatic --noinput
#RUN pip install gunicorn
####
#
#ARG DJANGO_SECRET_KEY
#ARG DATABASE_URL
#ARG DB_HOST
#ARG DB_PORT
#ARG MYSQL_USER
#ARG MYSQL_PASSWORD
#ARG MYSQL_DATABASE
#ARG NGINX_STATIC_ROOT
#ARG DJANGO_DEBUG
#ARG DJANGO_ALLOWED_HOSTS
#ARG DJANGO_SETTINGS_MODULE

#RUN python manage.py collectstatic --noinput


# Copy the entry point script
COPY entrypoint.sh /usr/local/bin/

# Make the script executable
RUN chmod +x /usr/local/bin/entrypoint.sh


# Set the entry point
ENTRYPOINT ["entrypoint.sh"]

EXPOSE 8080

# Define the command to run your application
CMD ["gunicorn", "explorer-core.wsgi:application", "--bind", "0.0.0.0:$PORT", "--workers", "4"]

# Set the default command to use Gunicorn to run the app
 #CMD ["gunicorn", "explorer-core.wsgi:application", "--bind", "0.0.0.0:8000"]