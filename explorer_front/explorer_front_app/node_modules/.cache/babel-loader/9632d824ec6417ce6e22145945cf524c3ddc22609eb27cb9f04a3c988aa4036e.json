{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\nvar resizeText = require('./uniform_text').resizeText;\nvar attributes = require('./attributes');\nvar attributeTextFont = attributes.textfont;\nvar attributeInsideTextFont = attributes.insidetextfont;\nvar attributeOutsideTextFont = attributes.outsidetextfont;\nvar helpers = require('./helpers');\nfunction style(gd) {\n  var s = d3.select(gd).selectAll('g[class^=\"barlayer\"]').selectAll('g.trace');\n  resizeText(gd, s, 'bar');\n  var barcount = s.size();\n  var fullLayout = gd._fullLayout;\n\n  // trace styling\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  })\n\n  // for gapless (either stacked or neighboring grouped) bars use\n  // crispEdges to turn off antialiasing so an artificial gap\n  // isn't introduced.\n  .each(function (d) {\n    if (fullLayout.barmode === 'stack' && barcount > 1 || fullLayout.bargap === 0 && fullLayout.bargroupgap === 0 && !d[0].trace.marker.line.width) {\n      d3.select(this).attr('shape-rendering', 'crispEdges');\n    }\n  });\n  s.selectAll('g.points').each(function (d) {\n    var sel = d3.select(this);\n    var trace = d[0].trace;\n    stylePoints(sel, trace, gd);\n  });\n  Registry.getComponentMethod('errorbars', 'style')(s);\n}\nfunction stylePoints(sel, trace, gd) {\n  Drawing.pointStyle(sel.selectAll('path'), trace, gd);\n  styleTextPoints(sel, trace, gd);\n}\nfunction styleTextPoints(sel, trace, gd) {\n  sel.selectAll('text').each(function (d) {\n    var tx = d3.select(this);\n    var font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n    Drawing.font(tx, font);\n  });\n}\nfunction styleOnSelect(gd, cd, sel) {\n  var trace = cd[0].trace;\n  if (trace.selectedpoints) {\n    stylePointsInSelectionMode(sel, trace, gd);\n  } else {\n    stylePoints(sel, trace, gd);\n    Registry.getComponentMethod('errorbars', 'style')(sel);\n  }\n}\nfunction stylePointsInSelectionMode(s, trace, gd) {\n  Drawing.selectedPointStyle(s.selectAll('path'), trace);\n  styleTextInSelectionMode(s.selectAll('text'), trace, gd);\n}\nfunction styleTextInSelectionMode(txs, trace, gd) {\n  txs.each(function (d) {\n    var tx = d3.select(this);\n    var font;\n    if (d.selected) {\n      font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n      var selectedFontColor = trace.selected.textfont && trace.selected.textfont.color;\n      if (selectedFontColor) {\n        font.color = selectedFontColor;\n      }\n      Drawing.font(tx, font);\n    } else {\n      Drawing.selectedTextStyle(tx, trace);\n    }\n  });\n}\nfunction determineFont(tx, d, trace, gd) {\n  var layoutFont = gd._fullLayout.font;\n  var textFont = trace.textfont;\n  if (tx.classed('bartext-inside')) {\n    var barColor = getBarColor(d, trace);\n    textFont = getInsideTextFont(trace, d.i, layoutFont, barColor);\n  } else if (tx.classed('bartext-outside')) {\n    textFont = getOutsideTextFont(trace, d.i, layoutFont);\n  }\n  return textFont;\n}\nfunction getTextFont(trace, index, defaultValue) {\n  return getFontValue(attributeTextFont, trace.textfont, index, defaultValue);\n}\nfunction getInsideTextFont(trace, index, layoutFont, barColor) {\n  var defaultFont = getTextFont(trace, index, layoutFont);\n  var wouldFallBackToLayoutFont = trace._input.textfont === undefined || trace._input.textfont.color === undefined || Array.isArray(trace.textfont.color) && trace.textfont.color[index] === undefined;\n  if (wouldFallBackToLayoutFont) {\n    defaultFont = {\n      color: Color.contrast(barColor),\n      family: defaultFont.family,\n      size: defaultFont.size\n    };\n  }\n  return getFontValue(attributeInsideTextFont, trace.insidetextfont, index, defaultFont);\n}\nfunction getOutsideTextFont(trace, index, layoutFont) {\n  var defaultFont = getTextFont(trace, index, layoutFont);\n  return getFontValue(attributeOutsideTextFont, trace.outsidetextfont, index, defaultFont);\n}\nfunction getFontValue(attributeDefinition, attributeValue, index, defaultValue) {\n  attributeValue = attributeValue || {};\n  var familyValue = helpers.getValue(attributeValue.family, index);\n  var sizeValue = helpers.getValue(attributeValue.size, index);\n  var colorValue = helpers.getValue(attributeValue.color, index);\n  return {\n    family: helpers.coerceString(attributeDefinition.family, familyValue, defaultValue.family),\n    size: helpers.coerceNumber(attributeDefinition.size, sizeValue, defaultValue.size),\n    color: helpers.coerceColor(attributeDefinition.color, colorValue, defaultValue.color)\n  };\n}\nfunction getBarColor(cd, trace) {\n  if (trace.type === 'waterfall') {\n    return trace[cd.dir].marker.color;\n  }\n  return cd.mcc || cd.mc || trace.marker.color;\n}\nmodule.exports = {\n  style: style,\n  styleTextPoints: styleTextPoints,\n  styleOnSelect: styleOnSelect,\n  getInsideTextFont: getInsideTextFont,\n  getOutsideTextFont: getOutsideTextFont,\n  getBarColor: getBarColor,\n  resizeText: resizeText\n};","map":{"version":3,"names":["d3","require","Color","Drawing","Lib","Registry","resizeText","attributes","attributeTextFont","textfont","attributeInsideTextFont","insidetextfont","attributeOutsideTextFont","outsidetextfont","helpers","style","gd","s","select","selectAll","barcount","size","fullLayout","_fullLayout","d","trace","opacity","each","barmode","bargap","bargroupgap","marker","line","width","attr","sel","stylePoints","getComponentMethod","pointStyle","styleTextPoints","tx","font","ensureUniformFontSize","determineFont","styleOnSelect","cd","selectedpoints","stylePointsInSelectionMode","selectedPointStyle","styleTextInSelectionMode","txs","selected","selectedFontColor","color","selectedTextStyle","layoutFont","textFont","classed","barColor","getBarColor","getInsideTextFont","i","getOutsideTextFont","getTextFont","index","defaultValue","getFontValue","defaultFont","wouldFallBackToLayoutFont","_input","undefined","Array","isArray","contrast","family","attributeDefinition","attributeValue","familyValue","getValue","sizeValue","colorValue","coerceString","coerceNumber","coerceColor","type","dir","mcc","mc","module","exports"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/node_modules/plotly.js/src/traces/bar/style.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\n\nvar resizeText = require('./uniform_text').resizeText;\nvar attributes = require('./attributes');\nvar attributeTextFont = attributes.textfont;\nvar attributeInsideTextFont = attributes.insidetextfont;\nvar attributeOutsideTextFont = attributes.outsidetextfont;\nvar helpers = require('./helpers');\n\nfunction style(gd) {\n    var s = d3.select(gd).selectAll('g[class^=\"barlayer\"]').selectAll('g.trace');\n    resizeText(gd, s, 'bar');\n\n    var barcount = s.size();\n    var fullLayout = gd._fullLayout;\n\n    // trace styling\n    s.style('opacity', function(d) { return d[0].trace.opacity; })\n\n    // for gapless (either stacked or neighboring grouped) bars use\n    // crispEdges to turn off antialiasing so an artificial gap\n    // isn't introduced.\n    .each(function(d) {\n        if((fullLayout.barmode === 'stack' && barcount > 1) ||\n                (fullLayout.bargap === 0 &&\n                 fullLayout.bargroupgap === 0 &&\n                 !d[0].trace.marker.line.width)) {\n            d3.select(this).attr('shape-rendering', 'crispEdges');\n        }\n    });\n\n    s.selectAll('g.points').each(function(d) {\n        var sel = d3.select(this);\n        var trace = d[0].trace;\n        stylePoints(sel, trace, gd);\n    });\n\n    Registry.getComponentMethod('errorbars', 'style')(s);\n}\n\nfunction stylePoints(sel, trace, gd) {\n    Drawing.pointStyle(sel.selectAll('path'), trace, gd);\n    styleTextPoints(sel, trace, gd);\n}\n\nfunction styleTextPoints(sel, trace, gd) {\n    sel.selectAll('text').each(function(d) {\n        var tx = d3.select(this);\n        var font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n\n        Drawing.font(tx, font);\n    });\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n    var trace = cd[0].trace;\n\n    if(trace.selectedpoints) {\n        stylePointsInSelectionMode(sel, trace, gd);\n    } else {\n        stylePoints(sel, trace, gd);\n        Registry.getComponentMethod('errorbars', 'style')(sel);\n    }\n}\n\nfunction stylePointsInSelectionMode(s, trace, gd) {\n    Drawing.selectedPointStyle(s.selectAll('path'), trace);\n    styleTextInSelectionMode(s.selectAll('text'), trace, gd);\n}\n\nfunction styleTextInSelectionMode(txs, trace, gd) {\n    txs.each(function(d) {\n        var tx = d3.select(this);\n        var font;\n\n        if(d.selected) {\n            font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n\n            var selectedFontColor = trace.selected.textfont && trace.selected.textfont.color;\n            if(selectedFontColor) {\n                font.color = selectedFontColor;\n            }\n\n            Drawing.font(tx, font);\n        } else {\n            Drawing.selectedTextStyle(tx, trace);\n        }\n    });\n}\n\nfunction determineFont(tx, d, trace, gd) {\n    var layoutFont = gd._fullLayout.font;\n    var textFont = trace.textfont;\n\n    if(tx.classed('bartext-inside')) {\n        var barColor = getBarColor(d, trace);\n        textFont = getInsideTextFont(trace, d.i, layoutFont, barColor);\n    } else if(tx.classed('bartext-outside')) {\n        textFont = getOutsideTextFont(trace, d.i, layoutFont);\n    }\n\n    return textFont;\n}\n\nfunction getTextFont(trace, index, defaultValue) {\n    return getFontValue(\n      attributeTextFont, trace.textfont, index, defaultValue);\n}\n\nfunction getInsideTextFont(trace, index, layoutFont, barColor) {\n    var defaultFont = getTextFont(trace, index, layoutFont);\n\n    var wouldFallBackToLayoutFont =\n      (trace._input.textfont === undefined || trace._input.textfont.color === undefined) ||\n      (Array.isArray(trace.textfont.color) && trace.textfont.color[index] === undefined);\n    if(wouldFallBackToLayoutFont) {\n        defaultFont = {\n            color: Color.contrast(barColor),\n            family: defaultFont.family,\n            size: defaultFont.size\n        };\n    }\n\n    return getFontValue(\n      attributeInsideTextFont, trace.insidetextfont, index, defaultFont);\n}\n\nfunction getOutsideTextFont(trace, index, layoutFont) {\n    var defaultFont = getTextFont(trace, index, layoutFont);\n    return getFontValue(\n      attributeOutsideTextFont, trace.outsidetextfont, index, defaultFont);\n}\n\nfunction getFontValue(attributeDefinition, attributeValue, index, defaultValue) {\n    attributeValue = attributeValue || {};\n\n    var familyValue = helpers.getValue(attributeValue.family, index);\n    var sizeValue = helpers.getValue(attributeValue.size, index);\n    var colorValue = helpers.getValue(attributeValue.color, index);\n\n    return {\n        family: helpers.coerceString(\n          attributeDefinition.family, familyValue, defaultValue.family),\n        size: helpers.coerceNumber(\n          attributeDefinition.size, sizeValue, defaultValue.size),\n        color: helpers.coerceColor(\n          attributeDefinition.color, colorValue, defaultValue.color)\n    };\n}\n\nfunction getBarColor(cd, trace) {\n    if(trace.type === 'waterfall') {\n        return trace[cd.dir].marker.color;\n    }\n    return cd.mcc || cd.mc || trace.marker.color;\n}\n\nmodule.exports = {\n    style: style,\n    styleTextPoints: styleTextPoints,\n    styleOnSelect: styleOnSelect,\n    getInsideTextFont: getInsideTextFont,\n    getOutsideTextFont: getOutsideTextFont,\n    getBarColor: getBarColor,\n    resizeText: resizeText\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}