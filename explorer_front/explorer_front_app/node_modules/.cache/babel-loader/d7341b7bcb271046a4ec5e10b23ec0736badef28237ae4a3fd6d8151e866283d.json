{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  colorbar: require('../heatmap/colorbar'),\n  formatLabels: require('../scattermapbox/format_labels'),\n  calc: require('./calc'),\n  plot: require('./plot'),\n  hoverPoints: require('./hover'),\n  eventData: require('./event_data'),\n  getBelow: function (trace, subplot) {\n    var mapLayers = subplot.getMapLayers();\n\n    // find first layer with `type: 'symbol'`,\n    // that is not a plotly layer\n    for (var i = 0; i < mapLayers.length; i++) {\n      var layer = mapLayers[i];\n      var layerId = layer.id;\n      if (layer.type === 'symbol' && typeof layerId === 'string' && layerId.indexOf('plotly-') === -1) {\n        return layerId;\n      }\n    }\n  },\n  moduleType: 'trace',\n  name: 'densitymapbox',\n  basePlotModule: require('../../plots/mapbox'),\n  categories: ['mapbox', 'gl', 'showLegend'],\n  meta: {\n    hr_name: 'density_mapbox',\n    description: ['Draws a bivariate kernel density estimation with a Gaussian kernel', 'from `lon` and `lat` coordinates and optional `z` values using a colorscale.'].join(' ')\n  }\n};","map":{"version":3,"names":["module","exports","attributes","require","supplyDefaults","colorbar","formatLabels","calc","plot","hoverPoints","eventData","getBelow","trace","subplot","mapLayers","getMapLayers","i","length","layer","layerId","id","type","indexOf","moduleType","name","basePlotModule","categories","meta","hr_name","description","join"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/node_modules/plotly.js/src/traces/densitymapbox/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = {\n    attributes: require('./attributes'),\n    supplyDefaults: require('./defaults'),\n    colorbar: require('../heatmap/colorbar'),\n    formatLabels: require('../scattermapbox/format_labels'),\n    calc: require('./calc'),\n    plot: require('./plot'),\n    hoverPoints: require('./hover'),\n    eventData: require('./event_data'),\n\n    getBelow: function(trace, subplot) {\n        var mapLayers = subplot.getMapLayers();\n\n        // find first layer with `type: 'symbol'`,\n        // that is not a plotly layer\n        for(var i = 0; i < mapLayers.length; i++) {\n            var layer = mapLayers[i];\n            var layerId = layer.id;\n            if(layer.type === 'symbol' &&\n                typeof layerId === 'string' && layerId.indexOf('plotly-') === -1\n            ) {\n                return layerId;\n            }\n        }\n    },\n\n    moduleType: 'trace',\n    name: 'densitymapbox',\n    basePlotModule: require('../../plots/mapbox'),\n    categories: ['mapbox', 'gl', 'showLegend'],\n    meta: {\n        hr_name: 'density_mapbox',\n        description: [\n            'Draws a bivariate kernel density estimation with a Gaussian kernel',\n            'from `lon` and `lat` coordinates and optional `z` values using a colorscale.'\n        ].join(' ')\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG;EACbC,UAAU,EAAEC,OAAO,CAAC,cAAc,CAAC;EACnCC,cAAc,EAAED,OAAO,CAAC,YAAY,CAAC;EACrCE,QAAQ,EAAEF,OAAO,CAAC,qBAAqB,CAAC;EACxCG,YAAY,EAAEH,OAAO,CAAC,gCAAgC,CAAC;EACvDI,IAAI,EAAEJ,OAAO,CAAC,QAAQ,CAAC;EACvBK,IAAI,EAAEL,OAAO,CAAC,QAAQ,CAAC;EACvBM,WAAW,EAAEN,OAAO,CAAC,SAAS,CAAC;EAC/BO,SAAS,EAAEP,OAAO,CAAC,cAAc,CAAC;EAElCQ,QAAQ,EAAE,SAAAA,CAASC,KAAK,EAAEC,OAAO,EAAE;IAC/B,IAAIC,SAAS,GAAGD,OAAO,CAACE,YAAY,CAAC,CAAC;;IAEtC;IACA;IACA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAIE,KAAK,GAAGJ,SAAS,CAACE,CAAC,CAAC;MACxB,IAAIG,OAAO,GAAGD,KAAK,CAACE,EAAE;MACtB,IAAGF,KAAK,CAACG,IAAI,KAAK,QAAQ,IACtB,OAAOF,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAClE;QACE,OAAOH,OAAO;MAClB;IACJ;EACJ,CAAC;EAEDI,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE,eAAe;EACrBC,cAAc,EAAEtB,OAAO,CAAC,oBAAoB,CAAC;EAC7CuB,UAAU,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC;EAC1CC,IAAI,EAAE;IACFC,OAAO,EAAE,gBAAgB;IACzBC,WAAW,EAAE,CACT,oEAAoE,EACpE,8EAA8E,CACjF,CAACC,IAAI,CAAC,GAAG;EACd;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}