{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref } from 'vue';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport axios from 'axios';\nimport markerImage from '@/assets/marker.png';\nexport default {\n  __name: 'explorerMap',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const mapContainer = ref(null);\n    let map;\n    let popupString;\n    let markers = [];\n    onMounted(() => {\n      map = L.map(mapContainer.value).setView([0, 0], 2);\n      //map = L.map(mapContainer.value).fitWorld();\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(map);\n\n      //   const bounds = [[-90, -180], [90, 180]]\n      //   map.fitBounds(bounds);\n\n      fetchCoordinates();\n    });\n    async function fetchCoordinates() {\n      var myIcon = L.icon({\n        //iconUrl: require('./src/assets/marker.png'),\n        iconUrl: markerImage,\n        //iconSize: [38, 95],\n        iconAnchor: [22, 94],\n        popupAnchor: [-3, -76]\n        //shadowUrl: ,\n        //shadowSize: [68, 95],\n        //shadowAnchor: [22, 94]\n      });\n      try {\n        const response = await axios.get('http://0.0.0.0:8000/collection_map/');\n        let data = response.data; // Assuming the API response is an array of marker data\n        console.log(data);\n        data = JSON.parse(data);\n        // console.log(typeof(data2))\n        // console.log(data2.length)\n        // console.log(data2[0])\n        data.forEach(item => {\n          // console.log(item)\n          // console.log(item.Latitude)\n          // console.log(parseFloat(item.Latitude))\n          const marker = L.marker([parseFloat(item.Latitude), parseFloat(item.Longitude)], {\n            icon: myIcon\n          }).addTo(map);\n          if (item.Remarks != null) {\n            popupString = \"<i>\\\"\" + item.Remarks + \"\\\"</i><br>\" + item.Geoname + \"<br>\" + item.Start;\n          } else {\n            popupString = item.Geoname + \"<br>\" + item.Start;\n          }\n          //marker.bindPopup('<br>Hi CAS!</br>')\n          marker.bindPopup(popupString);\n          markers.push(marker);\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    const __returned__ = {\n      mapContainer,\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      get popupString() {\n        return popupString;\n      },\n      set popupString(v) {\n        popupString = v;\n      },\n      get markers() {\n        return markers;\n      },\n      set markers(v) {\n        markers = v;\n      },\n      fetchCoordinates,\n      onMounted,\n      ref,\n      get L() {\n        return L;\n      },\n      get axios() {\n        return axios;\n      },\n      get markerImage() {\n        return markerImage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","L","axios","markerImage","mapContainer","map","popupString","markers","value","setView","tileLayer","attribution","addTo","fetchCoordinates","myIcon","icon","iconUrl","iconAnchor","popupAnchor","response","get","data","console","log","JSON","parse","forEach","item","marker","parseFloat","Latitude","Longitude","Remarks","Geoname","Start","bindPopup","push","error"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/explorerMap.vue"],"sourcesContent":["<template>\n  <h1>Botany collecting events around the world</h1>\n  <div ref=\"mapContainer\" style=\"width: 60%; height: 800px;\"></div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport axios from 'axios';\nimport markerImage from '@/assets/marker.png';\n\nconst mapContainer = ref(null);\nlet map;\nlet popupString;\nlet markers = [];\n\nonMounted(() => {\n   map = L.map(mapContainer.value).setView([0,0],2);\n    //map = L.map(mapContainer.value).fitWorld();\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; OpenStreetMap contributors',\n  }).addTo(map);\n\n//   const bounds = [[-90, -180], [90, 180]]\n//   map.fitBounds(bounds);\n\n    fetchCoordinates();\n\n});\n\nasync function fetchCoordinates(){\n    var myIcon = L.icon({\n    //iconUrl: require('./src/assets/marker.png'),\n    iconUrl: markerImage,\n    //iconSize: [38, 95],\n    iconAnchor: [22, 94],\n    popupAnchor: [-3, -76],\n    //shadowUrl: ,\n    //shadowSize: [68, 95],\n    //shadowAnchor: [22, 94]\n});\n\n    try {\n        const response = await axios.get('http://0.0.0.0:8000/collection_map/');\n        let data = response.data; // Assuming the API response is an array of marker data\n        console.log(data)\n        data = JSON.parse(data)\n        // console.log(typeof(data2))\n        // console.log(data2.length)\n        // console.log(data2[0])\n        data.forEach(item => {\n            // console.log(item)\n            // console.log(item.Latitude)\n            // console.log(parseFloat(item.Latitude))\n            const marker = L.marker([parseFloat(item.Latitude), parseFloat(item.Longitude)], {icon: myIcon}).addTo(map);\n            if (item.Remarks!=null){\n              popupString = \"<i>\\\"\" + item.Remarks + \"\\\"</i><br>\" + item.Geoname + \"<br>\" + item.Start\n            }\n            else{\n              popupString = item.Geoname + \"<br>\" + item.Start\n            }\n            //marker.bindPopup('<br>Hi CAS!</br>')\n            marker.bindPopup(popupString)\n            markers.push(marker);\n                    \n    });\n  } catch (error) {\n        console.error('Error fetching data:', error);\n  }    \n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AAMA,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,qBAAqB;;;;;;;IAE7C,MAAMC,YAAY,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAC9B,IAAIK,GAAG;IACP,IAAIC,WAAW;IACf,IAAIC,OAAO,GAAG,EAAE;IAEhBR,SAAS,CAAC,MAAM;MACbM,GAAG,GAAGJ,CAAC,CAACI,GAAG,CAACD,YAAY,CAACI,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC;MAC/C;MACFR,CAAC,CAACS,SAAS,CAAC,oDAAoD,EAAE;QAChEC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,KAAK,CAACP,GAAG,CAAC;;MAEf;MACA;;MAEIQ,gBAAgB,CAAC,CAAC;IAEtB,CAAC,CAAC;IAEF,eAAeA,gBAAgBA,CAAA,EAAE;MAC7B,IAAIC,MAAM,GAAGb,CAAC,CAACc,IAAI,CAAC;QACpB;QACAC,OAAO,EAAEb,WAAW;QACpB;QACAc,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACpBC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QACrB;QACA;QACA;MACJ,CAAC,CAAC;MAEE,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,qCAAqC,CAAC;QACvE,IAAIC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBA,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;QACvB;QACA;QACA;QACAA,IAAI,CAACK,OAAO,CAACC,IAAI,IAAI;UACjB;UACA;UACA;UACA,MAAMC,MAAM,GAAG3B,CAAC,CAAC2B,MAAM,CAAC,CAACC,UAAU,CAACF,IAAI,CAACG,QAAQ,CAAC,EAAED,UAAU,CAACF,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE;YAAChB,IAAI,EAAED;UAAM,CAAC,CAAC,CAACF,KAAK,CAACP,GAAG,CAAC;UAC3G,IAAIsB,IAAI,CAACK,OAAO,IAAE,IAAI,EAAC;YACrB1B,WAAW,GAAG,OAAO,GAAGqB,IAAI,CAACK,OAAO,GAAG,YAAY,GAAGL,IAAI,CAACM,OAAO,GAAG,MAAM,GAAGN,IAAI,CAACO,KAAK;UAC1F,CAAC,MACG;YACF5B,WAAW,GAAGqB,IAAI,CAACM,OAAO,GAAG,MAAM,GAAGN,IAAI,CAACO,KAAK;UAClD;UACA;UACAN,MAAM,CAACO,SAAS,CAAC7B,WAAW,CAAC;UAC7BC,OAAO,CAAC6B,IAAI,CAACR,MAAM,CAAC;QAE5B,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;QACVf,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAClD;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}