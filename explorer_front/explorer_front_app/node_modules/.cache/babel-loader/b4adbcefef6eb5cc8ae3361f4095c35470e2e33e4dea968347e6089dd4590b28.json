{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\nvar isNumeric = require('fast-isnumeric');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar interactConstants = require('../../constants/interactions');\nvar OPPOSITE_SIDE = require('../../constants/alignment').OPPOSITE_SIDE;\nvar numStripRE = / [XY][0-9]* /;\n\n/**\n * Titles - (re)draw titles on the axes and plot:\n * @param {DOM element} gd - the graphDiv\n * @param {string} titleClass - the css class of this title\n * @param {object} options - how and what to draw\n *      propContainer - the layout object containing `title` and `titlefont`\n *          attributes that apply to this title\n *      propName - the full name of the title property (for Plotly.relayout)\n *      [traceIndex] - include only if this property applies to one trace\n *          (such as a colorbar title) - then editing pipes to Plotly.restyle\n *          instead of Plotly.relayout\n *      placeholder - placeholder text for an empty editable title\n *      [avoid] {object} - include if this title should move to avoid other elements\n *          selection - d3 selection of elements to avoid\n *          side - which direction to move if there is a conflict\n *          [offsetLeft] - if these elements are subject to a translation\n *              wrt the title element\n *          [offsetTop]\n *      attributes {object} - position and alignment attributes\n *          x - pixels\n *          y - pixels\n *          text-anchor - start|middle|end\n *      transform {object} - how to transform the title after positioning\n *          rotate - degrees\n *          offset - shift up/down in the rotated frame (unused?)\n *      containerGroup - if an svg <g> element already exists to hold this\n *          title, include here. Otherwise it will go in fullLayout._infolayer\n *      _meta {object (optional} - meta key-value to for title with\n *          Lib.templateString, default to fullLayout._meta, if not provided\n *\n *  @return {selection} d3 selection of title container group\n */\nfunction draw(gd, titleClass, options) {\n  var cont = options.propContainer;\n  var prop = options.propName;\n  var placeholder = options.placeholder;\n  var traceIndex = options.traceIndex;\n  var avoid = options.avoid || {};\n  var attributes = options.attributes;\n  var transform = options.transform;\n  var group = options.containerGroup;\n  var fullLayout = gd._fullLayout;\n  var opacity = 1;\n  var isplaceholder = false;\n  var title = cont.title;\n  var txt = (title && title.text ? title.text : '').trim();\n  var font = title && title.font ? title.font : {};\n  var fontFamily = font.family;\n  var fontSize = font.size;\n  var fontColor = font.color;\n\n  // only make this title editable if we positively identify its property\n  // as one that has editing enabled.\n  var editAttr;\n  if (prop === 'title.text') editAttr = 'titleText';else if (prop.indexOf('axis') !== -1) editAttr = 'axisTitleText';else if (prop.indexOf('colorbar' !== -1)) editAttr = 'colorbarTitleText';\n  var editable = gd._context.edits[editAttr];\n  if (txt === '') opacity = 0;\n  // look for placeholder text while stripping out numbers from eg X2, Y3\n  // this is just for backward compatibility with the old version that had\n  // \"Click to enter X2 title\" and may have gotten saved in some old plots,\n  // we don't want this to show up when these are displayed.\n  else if (txt.replace(numStripRE, ' % ') === placeholder.replace(numStripRE, ' % ')) {\n    opacity = 0.2;\n    isplaceholder = true;\n    if (!editable) txt = '';\n  }\n  if (options._meta) {\n    txt = Lib.templateString(txt, options._meta);\n  } else if (fullLayout._meta) {\n    txt = Lib.templateString(txt, fullLayout._meta);\n  }\n  var elShouldExist = txt || editable;\n  var hColorbarMoveTitle;\n  if (!group) {\n    group = Lib.ensureSingle(fullLayout._infolayer, 'g', 'g-' + titleClass);\n    hColorbarMoveTitle = fullLayout._hColorbarMoveTitle;\n  }\n  var el = group.selectAll('text').data(elShouldExist ? [0] : []);\n  el.enter().append('text');\n  el.text(txt)\n  // this is hacky, but convertToTspans uses the class\n  // to determine whether to rotate mathJax...\n  // so we need to clear out any old class and put the\n  // correct one (only relevant for colorbars, at least\n  // for now) - ie don't use .classed\n  .attr('class', titleClass);\n  el.exit().remove();\n  if (!elShouldExist) return group;\n  function titleLayout(titleEl) {\n    Lib.syncOrAsync([drawTitle, scootTitle], titleEl);\n  }\n  function drawTitle(titleEl) {\n    var transformVal;\n    if (!transform && hColorbarMoveTitle) {\n      transform = {};\n    }\n    if (transform) {\n      transformVal = '';\n      if (transform.rotate) {\n        transformVal += 'rotate(' + [transform.rotate, attributes.x, attributes.y] + ')';\n      }\n      if (transform.offset || hColorbarMoveTitle) {\n        transformVal += strTranslate(0, (transform.offset || 0) - (hColorbarMoveTitle || 0));\n      }\n    } else {\n      transformVal = null;\n    }\n    titleEl.attr('transform', transformVal);\n    titleEl.style({\n      'font-family': fontFamily,\n      'font-size': d3.round(fontSize, 2) + 'px',\n      fill: Color.rgb(fontColor),\n      opacity: opacity * Color.opacity(fontColor),\n      'font-weight': Plots.fontWeight\n    }).attr(attributes).call(svgTextUtils.convertToTspans, gd);\n    return Plots.previousPromises(gd);\n  }\n  function scootTitle(titleElIn) {\n    var titleGroup = d3.select(titleElIn.node().parentNode);\n    if (avoid && avoid.selection && avoid.side && txt) {\n      titleGroup.attr('transform', null);\n\n      // move toward avoid.side (= left, right, top, bottom) if needed\n      // can include pad (pixels, default 2)\n      var backside = OPPOSITE_SIDE[avoid.side];\n      var shiftSign = avoid.side === 'left' || avoid.side === 'top' ? -1 : 1;\n      var pad = isNumeric(avoid.pad) ? avoid.pad : 2;\n      var titlebb = Drawing.bBox(titleGroup.node());\n\n      // Account for reservedMargins\n      var reservedMargins = {\n        t: 0,\n        b: 0,\n        l: 0,\n        r: 0\n      };\n      var margins = gd._fullLayout._reservedMargin;\n      for (var key in margins) {\n        for (var side in margins[key]) {\n          var val = margins[key][side];\n          reservedMargins[side] = Math.max(reservedMargins[side], val);\n        }\n      }\n      var paperbb = {\n        left: reservedMargins.l,\n        top: reservedMargins.t,\n        right: fullLayout.width - reservedMargins.r,\n        bottom: fullLayout.height - reservedMargins.b\n      };\n      var maxshift = avoid.maxShift || shiftSign * (paperbb[avoid.side] - titlebb[avoid.side]);\n      var shift = 0;\n\n      // Prevent the title going off the paper\n      if (maxshift < 0) {\n        shift = maxshift;\n      } else {\n        // so we don't have to offset each avoided element,\n        // give the title the opposite offset\n        var offsetLeft = avoid.offsetLeft || 0;\n        var offsetTop = avoid.offsetTop || 0;\n        titlebb.left -= offsetLeft;\n        titlebb.right -= offsetLeft;\n        titlebb.top -= offsetTop;\n        titlebb.bottom -= offsetTop;\n\n        // iterate over a set of elements (avoid.selection)\n        // to avoid collisions with\n        avoid.selection.each(function () {\n          var avoidbb = Drawing.bBox(this);\n          if (Lib.bBoxIntersect(titlebb, avoidbb, pad)) {\n            shift = Math.max(shift, shiftSign * (avoidbb[avoid.side] - titlebb[backside]) + pad);\n          }\n        });\n        shift = Math.min(maxshift, shift);\n        // Keeping track of this for calculation of full axis size if needed\n        cont._titleScoot = Math.abs(shift);\n      }\n      if (shift > 0 || maxshift < 0) {\n        var shiftTemplate = {\n          left: [-shift, 0],\n          right: [shift, 0],\n          top: [0, -shift],\n          bottom: [0, shift]\n        }[avoid.side];\n        titleGroup.attr('transform', strTranslate(shiftTemplate[0], shiftTemplate[1]));\n      }\n    }\n  }\n  el.call(titleLayout);\n  function setPlaceholder() {\n    opacity = 0;\n    isplaceholder = true;\n    el.text(placeholder).on('mouseover.opacity', function () {\n      d3.select(this).transition().duration(interactConstants.SHOW_PLACEHOLDER).style('opacity', 1);\n    }).on('mouseout.opacity', function () {\n      d3.select(this).transition().duration(interactConstants.HIDE_PLACEHOLDER).style('opacity', 0);\n    });\n  }\n  if (editable) {\n    if (!txt) setPlaceholder();else el.on('.opacity', null);\n    el.call(svgTextUtils.makeEditable, {\n      gd: gd\n    }).on('edit', function (text) {\n      if (traceIndex !== undefined) {\n        Registry.call('_guiRestyle', gd, prop, text, traceIndex);\n      } else {\n        Registry.call('_guiRelayout', gd, prop, text);\n      }\n    }).on('cancel', function () {\n      this.text(this.attr('data-unformatted')).call(titleLayout);\n    }).on('input', function (d) {\n      this.text(d || ' ').call(svgTextUtils.positionText, attributes.x, attributes.y);\n    });\n  }\n  el.classed('js-placeholder', isplaceholder);\n  return group;\n}\nmodule.exports = {\n  draw: draw\n};","map":{"version":3,"names":["d3","require","isNumeric","Plots","Registry","Lib","strTranslate","Drawing","Color","svgTextUtils","interactConstants","OPPOSITE_SIDE","numStripRE","draw","gd","titleClass","options","cont","propContainer","prop","propName","placeholder","traceIndex","avoid","attributes","transform","group","containerGroup","fullLayout","_fullLayout","opacity","isplaceholder","title","txt","text","trim","font","fontFamily","family","fontSize","size","fontColor","color","editAttr","indexOf","editable","_context","edits","replace","_meta","templateString","elShouldExist","hColorbarMoveTitle","ensureSingle","_infolayer","_hColorbarMoveTitle","el","selectAll","data","enter","append","attr","exit","remove","titleLayout","titleEl","syncOrAsync","drawTitle","scootTitle","transformVal","rotate","x","y","offset","style","round","fill","rgb","fontWeight","call","convertToTspans","previousPromises","titleElIn","titleGroup","select","node","parentNode","selection","side","backside","shiftSign","pad","titlebb","bBox","reservedMargins","t","b","l","r","margins","_reservedMargin","key","val","Math","max","paperbb","left","top","right","width","bottom","height","maxshift","maxShift","shift","offsetLeft","offsetTop","each","avoidbb","bBoxIntersect","min","_titleScoot","abs","shiftTemplate","setPlaceholder","on","transition","duration","SHOW_PLACEHOLDER","HIDE_PLACEHOLDER","makeEditable","undefined","d","positionText","classed","module","exports"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/node_modules/plotly.js/src/components/titles/index.js"],"sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar interactConstants = require('../../constants/interactions');\n\nvar OPPOSITE_SIDE = require('../../constants/alignment').OPPOSITE_SIDE;\nvar numStripRE = / [XY][0-9]* /;\n\n/**\n * Titles - (re)draw titles on the axes and plot:\n * @param {DOM element} gd - the graphDiv\n * @param {string} titleClass - the css class of this title\n * @param {object} options - how and what to draw\n *      propContainer - the layout object containing `title` and `titlefont`\n *          attributes that apply to this title\n *      propName - the full name of the title property (for Plotly.relayout)\n *      [traceIndex] - include only if this property applies to one trace\n *          (such as a colorbar title) - then editing pipes to Plotly.restyle\n *          instead of Plotly.relayout\n *      placeholder - placeholder text for an empty editable title\n *      [avoid] {object} - include if this title should move to avoid other elements\n *          selection - d3 selection of elements to avoid\n *          side - which direction to move if there is a conflict\n *          [offsetLeft] - if these elements are subject to a translation\n *              wrt the title element\n *          [offsetTop]\n *      attributes {object} - position and alignment attributes\n *          x - pixels\n *          y - pixels\n *          text-anchor - start|middle|end\n *      transform {object} - how to transform the title after positioning\n *          rotate - degrees\n *          offset - shift up/down in the rotated frame (unused?)\n *      containerGroup - if an svg <g> element already exists to hold this\n *          title, include here. Otherwise it will go in fullLayout._infolayer\n *      _meta {object (optional} - meta key-value to for title with\n *          Lib.templateString, default to fullLayout._meta, if not provided\n *\n *  @return {selection} d3 selection of title container group\n */\nfunction draw(gd, titleClass, options) {\n    var cont = options.propContainer;\n    var prop = options.propName;\n    var placeholder = options.placeholder;\n    var traceIndex = options.traceIndex;\n    var avoid = options.avoid || {};\n    var attributes = options.attributes;\n    var transform = options.transform;\n    var group = options.containerGroup;\n\n    var fullLayout = gd._fullLayout;\n\n    var opacity = 1;\n    var isplaceholder = false;\n    var title = cont.title;\n    var txt = (title && title.text ? title.text : '').trim();\n\n    var font = title && title.font ? title.font : {};\n    var fontFamily = font.family;\n    var fontSize = font.size;\n    var fontColor = font.color;\n\n    // only make this title editable if we positively identify its property\n    // as one that has editing enabled.\n    var editAttr;\n    if(prop === 'title.text') editAttr = 'titleText';\n    else if(prop.indexOf('axis') !== -1) editAttr = 'axisTitleText';\n    else if(prop.indexOf('colorbar' !== -1)) editAttr = 'colorbarTitleText';\n    var editable = gd._context.edits[editAttr];\n\n    if(txt === '') opacity = 0;\n    // look for placeholder text while stripping out numbers from eg X2, Y3\n    // this is just for backward compatibility with the old version that had\n    // \"Click to enter X2 title\" and may have gotten saved in some old plots,\n    // we don't want this to show up when these are displayed.\n    else if(txt.replace(numStripRE, ' % ') === placeholder.replace(numStripRE, ' % ')) {\n        opacity = 0.2;\n        isplaceholder = true;\n        if(!editable) txt = '';\n    }\n\n    if(options._meta) {\n        txt = Lib.templateString(txt, options._meta);\n    } else if(fullLayout._meta) {\n        txt = Lib.templateString(txt, fullLayout._meta);\n    }\n\n    var elShouldExist = txt || editable;\n\n    var hColorbarMoveTitle;\n    if(!group) {\n        group = Lib.ensureSingle(fullLayout._infolayer, 'g', 'g-' + titleClass);\n        hColorbarMoveTitle = fullLayout._hColorbarMoveTitle;\n    }\n\n    var el = group.selectAll('text')\n        .data(elShouldExist ? [0] : []);\n    el.enter().append('text');\n    el.text(txt)\n        // this is hacky, but convertToTspans uses the class\n        // to determine whether to rotate mathJax...\n        // so we need to clear out any old class and put the\n        // correct one (only relevant for colorbars, at least\n        // for now) - ie don't use .classed\n        .attr('class', titleClass);\n    el.exit().remove();\n\n    if(!elShouldExist) return group;\n\n    function titleLayout(titleEl) {\n        Lib.syncOrAsync([drawTitle, scootTitle], titleEl);\n    }\n\n    function drawTitle(titleEl) {\n        var transformVal;\n\n        if(!transform && hColorbarMoveTitle) {\n            transform = {};\n        }\n\n        if(transform) {\n            transformVal = '';\n            if(transform.rotate) {\n                transformVal += 'rotate(' + [transform.rotate, attributes.x, attributes.y] + ')';\n            }\n            if(transform.offset || hColorbarMoveTitle) {\n                transformVal += strTranslate(0, (transform.offset || 0) - (hColorbarMoveTitle || 0));\n            }\n        } else {\n            transformVal = null;\n        }\n\n        titleEl.attr('transform', transformVal);\n\n        titleEl.style({\n            'font-family': fontFamily,\n            'font-size': d3.round(fontSize, 2) + 'px',\n            fill: Color.rgb(fontColor),\n            opacity: opacity * Color.opacity(fontColor),\n            'font-weight': Plots.fontWeight\n        })\n        .attr(attributes)\n        .call(svgTextUtils.convertToTspans, gd);\n\n        return Plots.previousPromises(gd);\n    }\n\n    function scootTitle(titleElIn) {\n        var titleGroup = d3.select(titleElIn.node().parentNode);\n\n        if(avoid && avoid.selection && avoid.side && txt) {\n            titleGroup.attr('transform', null);\n\n            // move toward avoid.side (= left, right, top, bottom) if needed\n            // can include pad (pixels, default 2)\n            var backside = OPPOSITE_SIDE[avoid.side];\n            var shiftSign = (avoid.side === 'left' || avoid.side === 'top') ? -1 : 1;\n            var pad = isNumeric(avoid.pad) ? avoid.pad : 2;\n\n            var titlebb = Drawing.bBox(titleGroup.node());\n\n            // Account for reservedMargins\n            var reservedMargins = {t: 0, b: 0, l: 0, r: 0};\n            var margins = gd._fullLayout._reservedMargin;\n            for(var key in margins) {\n                for(var side in margins[key]) {\n                    var val = margins[key][side];\n                    reservedMargins[side] = Math.max(reservedMargins[side], val);\n                }\n            }\n            var paperbb = {\n                left: reservedMargins.l,\n                top: reservedMargins.t,\n                right: fullLayout.width - reservedMargins.r,\n                bottom: fullLayout.height - reservedMargins.b\n            };\n\n            var maxshift = avoid.maxShift ||\n                shiftSign * (paperbb[avoid.side] - titlebb[avoid.side]);\n            var shift = 0;\n\n            // Prevent the title going off the paper\n            if(maxshift < 0) {\n                shift = maxshift;\n            } else {\n                // so we don't have to offset each avoided element,\n                // give the title the opposite offset\n                var offsetLeft = avoid.offsetLeft || 0;\n                var offsetTop = avoid.offsetTop || 0;\n                titlebb.left -= offsetLeft;\n                titlebb.right -= offsetLeft;\n                titlebb.top -= offsetTop;\n                titlebb.bottom -= offsetTop;\n\n                // iterate over a set of elements (avoid.selection)\n                // to avoid collisions with\n                avoid.selection.each(function() {\n                    var avoidbb = Drawing.bBox(this);\n\n                    if(Lib.bBoxIntersect(titlebb, avoidbb, pad)) {\n                        shift = Math.max(shift, shiftSign * (\n                            avoidbb[avoid.side] - titlebb[backside]) + pad);\n                    }\n                });\n                shift = Math.min(maxshift, shift);\n                // Keeping track of this for calculation of full axis size if needed\n                cont._titleScoot = Math.abs(shift);\n            }\n\n            if(shift > 0 || maxshift < 0) {\n                var shiftTemplate = {\n                    left: [-shift, 0],\n                    right: [shift, 0],\n                    top: [0, -shift],\n                    bottom: [0, shift]\n                }[avoid.side];\n                titleGroup.attr('transform', strTranslate(shiftTemplate[0], shiftTemplate[1]));\n            }\n        }\n    }\n\n    el.call(titleLayout);\n\n    function setPlaceholder() {\n        opacity = 0;\n        isplaceholder = true;\n        el.text(placeholder)\n            .on('mouseover.opacity', function() {\n                d3.select(this).transition()\n                    .duration(interactConstants.SHOW_PLACEHOLDER).style('opacity', 1);\n            })\n            .on('mouseout.opacity', function() {\n                d3.select(this).transition()\n                    .duration(interactConstants.HIDE_PLACEHOLDER).style('opacity', 0);\n            });\n    }\n\n    if(editable) {\n        if(!txt) setPlaceholder();\n        else el.on('.opacity', null);\n\n        el.call(svgTextUtils.makeEditable, {gd: gd})\n            .on('edit', function(text) {\n                if(traceIndex !== undefined) {\n                    Registry.call('_guiRestyle', gd, prop, text, traceIndex);\n                } else {\n                    Registry.call('_guiRelayout', gd, prop, text);\n                }\n            })\n            .on('cancel', function() {\n                this.text(this.attr('data-unformatted'))\n                    .call(titleLayout);\n            })\n            .on('input', function(d) {\n                this.text(d || ' ')\n                    .call(svgTextUtils.positionText, attributes.x, attributes.y);\n            });\n    }\n    el.classed('js-placeholder', isplaceholder);\n\n    return group;\n}\n\nmodule.exports = {\n    draw: draw\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}