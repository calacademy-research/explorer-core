{"ast":null,"code":"import axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json' // Example of another header\n  }\n});\nexport default {\n  //[collectionobjectid, attachmentid, file_createddate_str, \n  //image_file, catalogeddate_str, collection_desc, \n  //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      testdic: {},\n      collectionobjectidData: {},\n      attachmentidData: {},\n      filecreateddateData: {},\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n  mounted() {\n    axiosInstance.get('collection_images').then(response => {\n      // response.data is a dictionary of dictionaries of format: \n      /* collectiondictionary[collectionobjectid] = {\n         'attachmentid': value,\n         'file_createddate': value,\n         'image_file': value,\n         'catalogeddate': value,\n         'collectiondesct': value,\n         'collectingevent_start': value,\n         'agentname_collection': value,\n         'agentname_image': value\n      } */\n\n      let jsonObject = JSON.parse(response.data);\n      console.log(jsonObject);\n      console.log(Object.keys(jsonObject));\n      console.log(Object.getOwnPropertyNames(jsonObject).length);\n\n      // Map each inner array to the desired key\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  //   mounted() {\n  //     axiosInstance.get('collection_images')\n  //       .then(response => {\n\n  //          const arrayOfArrays = response.data;\n  //          console.log(response.data)\n\n  //          // Map each inner array to the desired key\n  //         this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectid: arr[0] }));\n  //         this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentid: arr[1] }));\n  //         this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddate: arr[2] }));\n  //         this.imagefileData = arrayOfArrays.map(arr => ({ imagefile: arr[3] }));\n  //         this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddate: arr[4] }));\n  //         this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondesc: arr[5] }));\n  //         this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstart: arr[6] }));\n  //         this.agentnameData = arrayOfArrays.map(arr => ({ agentname: arr[7] }));\n\n  //         // You can also append the entire response data to a single key if needed\n  //         this.responseData = arrayOfArrays;\n  //         console.log(\"test\")\n  //         console.log(JSON.stringify(this.imagefileData))\n  //       })\n  //       .catch(error => {\n  //         console.error('Error fetching data:', error);\n  //       });\n  //   },\n};","map":{"version":3,"names":["axios","token","axiosInstance","create","baseURL","headers","data","responseData","testdic","collectionobjectidData","attachmentidData","filecreateddateData","imagefileData","catalogeddateData","collectiondescData","collectingeventstartData","agentnameData","mounted","get","then","response","jsonObject","JSON","parse","console","log","Object","keys","getOwnPropertyNames","length","catch","error"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/DjangoData.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Collection Data Images:</h1>\n    <div v-for=\"(item, collectionid) in jsonObject\" :key=\"collectionid\">{{ item.collectionobjectidData }}>\n        {{ console.log(item)}} \n        <h2>{{ collectionid }}</h2>\n        <div v-for=\"(image, filename) in item\" :key=\"filename\">\n            <img :src=\"image.image_file\" :alt=\"filename\" />\n            <p>{{ image.collectiondesc }}</p>\n            <p>{{ image.file_createddate}}</p>\n            <p>{{ image.collectingevent_start }}</p>\n        </div>\n    </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json', // Example of another header\n  },\n});\n\nexport default {\n    //[collectionobjectid, attachmentid, file_createddate_str, \n    //image_file, catalogeddate_str, collection_desc, \n    //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      testdic: {},\n      collectionobjectidData: {},\n      attachmentidData: {},\n      filecreateddateData: {},\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n\n\nmounted(){\n        axiosInstance.get('collection_images')\n        .then(response =>{\n\n        // response.data is a dictionary of dictionaries of format: \n         /* collectiondictionary[collectionobjectid] = {\n            'attachmentid': value,\n            'file_createddate': value,\n            'image_file': value,\n            'catalogeddate': value,\n            'collectiondesct': value,\n            'collectingevent_start': value,\n            'agentname_collection': value,\n            'agentname_image': value\n         } */\n        \n            let jsonObject = JSON.parse(response.data);\n            console.log(jsonObject)\n            console.log(Object.keys(jsonObject))\n            console.log(Object.getOwnPropertyNames(jsonObject).length)\n\n         // Map each inner array to the desired key\n          \n\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n    }\n//   mounted() {\n//     axiosInstance.get('collection_images')\n//       .then(response => {\n\n//          const arrayOfArrays = response.data;\n//          console.log(response.data)\n\n//          // Map each inner array to the desired key\n//         this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectid: arr[0] }));\n//         this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentid: arr[1] }));\n//         this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddate: arr[2] }));\n//         this.imagefileData = arrayOfArrays.map(arr => ({ imagefile: arr[3] }));\n//         this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddate: arr[4] }));\n//         this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondesc: arr[5] }));\n//         this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstart: arr[6] }));\n//         this.agentnameData = arrayOfArrays.map(arr => ({ agentname: arr[7] }));\n\n//         // You can also append the entire response data to a single key if needed\n//         this.responseData = arrayOfArrays;\n//         console.log(\"test\")\n//         console.log(JSON.stringify(this.imagefileData))\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//       });\n//   },\n};\n</script>\n"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,KAAI,GAAI,QAAO,GAAI,0CAA0C;;AAEnE;AACA,MAAMC,aAAY,GAAIF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE,sBAAsB;EAC/BC,OAAO,EAAE;IACP,eAAe,EAAG,GAAEJ,KAAM,EAAC;IAC3B,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;AAEF,eAAe;EACX;EACA;EACA;EACFK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,CAAC,CAAC;MACXC,sBAAsB,EAAE,CAAC,CAAC;MAC1BC,gBAAgB,EAAE,CAAC,CAAC;MACpBC,mBAAmB,EAAE,CAAC,CAAC;MACvBC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE,EAAE;MACrBC,kBAAkB,EAAE,EAAE;MACtBC,wBAAwB,EAAE,EAAE;MAC5BC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EAGHC,OAAOA,CAAA,EAAE;IACDf,aAAa,CAACgB,GAAG,CAAC,mBAAmB,EACpCC,IAAI,CAACC,QAAO,IAAI;MAEjB;MACC;;;;;;;;;;;MAWG,IAAIC,UAAS,GAAIC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACd,IAAI,CAAC;MAC1CkB,OAAO,CAACC,GAAG,CAACJ,UAAU;MACtBG,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC;MACnCG,OAAO,CAACC,GAAG,CAACC,MAAM,CAACE,mBAAmB,CAACP,UAAU,CAAC,CAACQ,MAAM;;MAE5D;IAGD,CAAC,EACAC,KAAK,CAACC,KAAI,IAAI;MACXP,OAAO,CAACC,GAAG,CAACM,KAAK;IACrB,CAAC;EAEL;EACJ;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}