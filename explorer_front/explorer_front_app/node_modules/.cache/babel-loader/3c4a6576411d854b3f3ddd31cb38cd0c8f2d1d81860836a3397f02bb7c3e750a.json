{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar meta_1 = require(\"@turf/meta\");\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var xSum = 0;\n  var ySum = 0;\n  var len = 0;\n  meta_1.coordEach(geojson, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  }, true);\n  return helpers_1.point([xSum / len, ySum / len], options.properties);\n}\nexports.default = centroid;","map":{"version":3,"names":["Object","defineProperty","exports","value","meta_1","require","helpers_1","centroid","geojson","options","xSum","ySum","len","coordEach","coord","point","properties","default"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/node_modules/@turf/centroid/dist/js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    meta_1.coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return helpers_1.point([xSum / len, ySum / len], options.properties);\n}\nexports.default = centroid;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,YAAY,CAAC;AAClC,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAe,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,QAAQA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAChC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,GAAG,GAAG,CAAC;EACXR,MAAM,CAACS,SAAS,CAACL,OAAO,EAAE,UAAUM,KAAK,EAAE;IACvCJ,IAAI,IAAII,KAAK,CAAC,CAAC,CAAC;IAChBH,IAAI,IAAIG,KAAK,CAAC,CAAC,CAAC;IAChBF,GAAG,EAAE;EACT,CAAC,EAAE,IAAI,CAAC;EACR,OAAON,SAAS,CAACS,KAAK,CAAC,CAACL,IAAI,GAAGE,GAAG,EAAED,IAAI,GAAGC,GAAG,CAAC,EAAEH,OAAO,CAACO,UAAU,CAAC;AACxE;AACAd,OAAO,CAACe,OAAO,GAAGV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}