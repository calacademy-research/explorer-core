{"ast":null,"code":"import * as THREE from 'three';\n// import tortobj from '../../public/assets/tort8141.obj';\n// import torttext from '../../public/assets/tort8141.mtl';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nexport default {\n  name: 'ObjViewer',\n  mounted() {\n    this.initThreeJS();\n  },\n  methods: {\n    initThreeJS() {\n      // Set up the scene\n      const scene = new THREE.Scene();\n\n      // Set up the camera\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 5;\n\n      // Set up the renderer\n      const renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      this.$refs.sceneContainer.appendChild(renderer.domElement);\n\n      // Set up lighting\n      const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n      scene.add(ambientLight);\n      const pointLight = new THREE.PointLight(0xffffff, 1, 100);\n      pointLight.position.set(10, 10, 10);\n      scene.add(pointLight);\n\n      // Load the .mtl file and then the .obj file\n      const mtlLoader = new MTLLoader();\n      mtlLoader.load('/assets/CAS 8141.mtl', materials => {\n        materials.preload();\n        const objLoader = new OBJLoader();\n        objLoader.setMaterials(materials);\n        objLoader.load('/assets/CAS 8141.obj', object => {\n          scene.add(object);\n          console.log(object);\n        }, xhr => {\n          console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n        }, error => {\n          console.error('An error happened', error);\n        });\n      });\n\n      // Animation loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n\n        // Rotate the object (optional)\n        // object.rotation.x += 0.01;\n        // object.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      // Handle window resize\n      window.addEventListener('resize', () => {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      });\n    }\n  }\n};","map":{"version":3,"names":["THREE","OBJLoader","MTLLoader","name","mounted","initThreeJS","methods","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","$refs","sceneContainer","appendChild","domElement","ambientLight","AmbientLight","add","pointLight","PointLight","set","mtlLoader","load","materials","preload","objLoader","setMaterials","object","console","log","xhr","loaded","total","error","animate","requestAnimationFrame","render","addEventListener","aspect","updateProjectionMatrix"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/ThreeJSRenderer.vue"],"sourcesContent":["<template>\n  <div ref=\"sceneContainer\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n// import tortobj from '../../public/assets/tort8141.obj';\n// import torttext from '../../public/assets/tort8141.mtl';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\n\nexport default {\n  name: 'ObjViewer',\n  mounted() {\n    this.initThreeJS();\n  },\n  methods: {\n    initThreeJS() {\n      // Set up the scene\n      const scene = new THREE.Scene();\n\n      // Set up the camera\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 5;\n\n      // Set up the renderer\n      const renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      this.$refs.sceneContainer.appendChild(renderer.domElement);\n\n      // Set up lighting\n      const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n      scene.add(ambientLight);\n\n      const pointLight = new THREE.PointLight(0xffffff, 1, 100);\n      pointLight.position.set(10, 10, 10);\n      scene.add(pointLight);\n\n      // Load the .mtl file and then the .obj file\n      const mtlLoader = new MTLLoader();\n      mtlLoader.load('/assets/CAS 8141.mtl', (materials) => {\n        materials.preload();\n\n        const objLoader = new OBJLoader();\n        objLoader.setMaterials(materials);\n        objLoader.load(\n          '/assets/CAS 8141.obj',\n          (object) => {\n            scene.add(object);\n            console.log(object);\n          },\n          (xhr) => {\n            console.log((xhr.loaded / xhr.total) * 100 + '% loaded');\n          },\n          (error) => {\n            console.error('An error happened', error);\n          }\n        );\n      });\n\n      // Animation loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n\n        // Rotate the object (optional)\n        // object.rotation.x += 0.01;\n        // object.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      // Handle window resize\n      window.addEventListener('resize', () => {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      });\n    },\n  },\n};\n</script>\n\n<style>\n  #sceneContainer {\n    width: 100%;\n    height: 100vh;\n    overflow: hidden;\n  }\n</style>"],"mappings":"AAKA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAC9B;AACA;AACA,SAASC,SAAQ,QAAS,sCAAsC;AAChE,SAASC,SAAQ,QAAS,sCAAsC;AAEhE,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ;MACA,MAAME,KAAI,GAAI,IAAIP,KAAK,CAACQ,KAAK,CAAC,CAAC;;MAE/B;MACA,MAAMC,MAAK,GAAI,IAAIT,KAAK,CAACU,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;MACjGJ,MAAM,CAACK,QAAQ,CAACC,CAAA,GAAI,CAAC;;MAErB;MACA,MAAMC,QAAO,GAAI,IAAIhB,KAAK,CAACiB,aAAa,CAAC,CAAC;MAC1CD,QAAQ,CAACE,OAAO,CAACP,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MACvD,IAAI,CAACM,KAAK,CAACC,cAAc,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;;MAE1D;MACA,MAAMC,YAAW,GAAI,IAAIvB,KAAK,CAACwB,YAAY,CAAC,QAAQ,CAAC,EAAE;MACvDjB,KAAK,CAACkB,GAAG,CAACF,YAAY,CAAC;MAEvB,MAAMG,UAAS,GAAI,IAAI1B,KAAK,CAAC2B,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC;MACzDD,UAAU,CAACZ,QAAQ,CAACc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACnCrB,KAAK,CAACkB,GAAG,CAACC,UAAU,CAAC;;MAErB;MACA,MAAMG,SAAQ,GAAI,IAAI3B,SAAS,CAAC,CAAC;MACjC2B,SAAS,CAACC,IAAI,CAAC,sBAAsB,EAAGC,SAAS,IAAK;QACpDA,SAAS,CAACC,OAAO,CAAC,CAAC;QAEnB,MAAMC,SAAQ,GAAI,IAAIhC,SAAS,CAAC,CAAC;QACjCgC,SAAS,CAACC,YAAY,CAACH,SAAS,CAAC;QACjCE,SAAS,CAACH,IAAI,CACZ,sBAAsB,EACrBK,MAAM,IAAK;UACV5B,KAAK,CAACkB,GAAG,CAACU,MAAM,CAAC;UACjBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACrB,CAAC,EACAG,GAAG,IAAK;UACPF,OAAO,CAACC,GAAG,CAAEC,GAAG,CAACC,MAAK,GAAID,GAAG,CAACE,KAAK,GAAI,GAAE,GAAI,UAAU,CAAC;QAC1D,CAAC,EACAC,KAAK,IAAK;UACTL,OAAO,CAACK,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QAC3C,CACF,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,MAAMC,OAAM,GAAIA,CAAA,KAAM;QACpBC,qBAAqB,CAACD,OAAO,CAAC;;QAE9B;QACA;QACA;;QAEA1B,QAAQ,CAAC4B,MAAM,CAACrC,KAAK,EAAEE,MAAM,CAAC;MAChC,CAAC;MACDiC,OAAO,CAAC,CAAC;;MAET;MACA/B,MAAM,CAACkC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;QACtCpC,MAAM,CAACqC,MAAK,GAAInC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW;QACtDJ,MAAM,CAACsC,sBAAsB,CAAC,CAAC;QAC/B/B,QAAQ,CAACE,OAAO,CAACP,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MACzD,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}