{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6991b281\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"mapContainer\",\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"iframe-popup\"\n};\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), $setup.showPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" <iframe :src=\\\"'https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4'\\\" width=\\\"560\\\" height =\\\"420\\\" frameborder=\\\"0\\\" allow=\\\"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\"></iframe> \"), _createElementVNode(\"iframe\", {\n    src: $setup.popupURL,\n    width: \"560\",\n    height: \"420\",\n    frameborder: \"0\",\n    allow: \"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  }, null, 8 /* PROPS */, _hoisted_3)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["ref","class","key","_createElementBlock","_createElementVNode","_hoisted_1","$setup","showPopup","_hoisted_2","_createCommentVNode","src","popupURL","width","height","frameborder","allow","_hoisted_3"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/GalapagosMap.vue"],"sourcesContent":["<template>\n<div>\n  <div ref=\"mapContainer\" class=\"map-container\"></div>\n  \n  <div v-if=\"showPopup\" class=\"iframe-popup\">\n    <!-- <iframe :src=\"'https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4'\" width=\"560\" height =\"420\" frameborder=\"0\" allow=\"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe> -->\n    <iframe :src=popupURL width=\"560\" height =\"420\" frameborder=\"0\" allow=\"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n  </div>\n</div>\n</template>\n\n\n\n<script setup>\nimport {ref, onMounted} from 'vue';\nimport L from 'leaflet';\n\nimport markerImage from '@/assets/marker.png'\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\n//import islandsJSON from '../assets/galapagos.geojson';\n\nconst mapContainer = ref(null);\nconst showPopup = ref(false);\nlet map;\nlet markers = [];\n\nconst iframeURLs = {\n  turtle: 'https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4',\n  iguana: 'https://www.morphosource.org/uv.html#?manifest=/manifests/d22b0459-dbfe-4d32-b35e-fac4e0ee33e6',\n};\n\nonMounted(() => {\n      map = L.map(mapContainer.value).setView([-0.207259, -90.142578], 8); // Center coordinates of Hawaii, zoom level 8\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      var islandsJSON = {\n    \"type\": \"FeatureCollection\",\n    \"features\": [{\n        \"type\": \"Feature\",\n        \"geometry\": {\n            \"type\": \"Polygon\",\n            \"coordinates\": [[[-91.434814, -0.868847],\n            [-91.433029, -0.869008],\n            [-91.431411, -0.870751],\n            [-91.43007, -0.873321],\n            [-91.429768, -0.876017],\n            [-91.429768, -0.878932],\n            [-91.429768, -0.882046],\n            [-91.429299, -0.884291],\n            [-91.429299, -0.886198],\n            [-91.429939, -0.887385],\n            [-91.432133, -0.888411],\n            [-91.434484, -0.888939],\n            [-91.436005, -0.888656],\n            [-91.437683, -0.887723],\n            [-91.438904, -0.886447],\n            [-91.43963, -0.885022],\n            [-91.439934, -0.883517],\n            [-91.439934, -0.88193],\n            [-91.439738, -0.879906],\n            [-91.439234, -0.877613],\n            [-91.43844, -0.87518],\n            [-91.437393, -0.872737],\n            [-91.436371, -0.870452],\n            [-91.435663, -0.869304],\n            [-91.434814, -0.868847]]]},\n        \"properties\": {\n            \"name\": \"Isabela Island\"\n        }\n    }, {\n        \"type\": \"Feature\",\n        \"geometry\": {\n            \"type\": \"Polygon\",\n            \"coordinates\": [[[-89.700132,-1.344329],[-89.643666,-1.337636],[-89.636629,-1.341411],[-89.617235,-1.393581],[-89.627876,-1.410056],[-89.636801,-1.412458],[-89.686917,-1.40405],[-89.746301,-1.375391],[-89.746988,-1.367668],[-89.717467,-1.351021],[-89.700132,-1.344329]]]\n        },\n        \"properties\": {\n            \"name\": \"Espa√±ola Island\"\n        }\n    }]\n};\n\n      L.geoJSON(islandsJSON, {\n        style: {\n          color: 'blue',\n          weight: 1,\n          fillOpacity: 0.1,\n        },\n      }).addTo(map)\n\n      //L.geoJSON(islandsJSON).addTo(map);\n      console.log('added geojson: ', islandsJSON)\n\n      \n      addMarkers();\n      setupMarkerClickEvents();\n\n      var drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n\n      var drawControl = new L.Control.Draw({\n        draw: {\n          polygon: true,\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          marker: false,\n        },\n        edit: {\n          featureGroup: drawnItems,\n          edit: false,\n          remove: false,\n        },\n      });\n\n      map.addControl(drawControl);\n\n      map.on(L.Draw.Event.CREATED, function (event) {\n      var layer = event.layer;\n      drawnItems.addLayer(layer);\n\n      // Do something with the drawn polygon, like getting its coordinates\n      var polygonCoordinates = layer.getLatLngs();\n      console.log(\"layer info\", layer);\n      var geoJSONinfo = layer.toGeoJSON();\n      console.log(\"geoJSON: \", geoJSONinfo);\n      console.log(JSON.stringify(geoJSONinfo.geometry.coordinates));\n      console.log(polygonCoordinates);\n      console.log(JSON.stringify(polygonCoordinates));\n\n      layer.bindPopup('<p>Island <br>'+JSON.stringify(geoJSONinfo)+'</p>');\n  \n      });\n\n\n    //return { mapContainer };\n  });\n  \n  function addMarkers(){\n\n       var myIcon = L.icon({\n        //iconUrl: require('./src/assets/marker.png'),\n        iconUrl: markerImage,\n        //iconSize: [38, 95],\n        //iconAnchor: [22, 94],\n        //popupAnchor: [-3, -76],\n        //shadowUrl: ,\n        //shadowSize: [68, 95],\n        //shadowAnchor: [22, 94]\n      });\n\n      markers = [\n        L.marker([-0.0358333333, -91.3761111111], {icon: myIcon}).bindPopup('turtle').addTo(map),\n        L.marker([-1.3541666667,  -89.6598611111], {icon: myIcon}).bindPopup('iguana').addTo(map)\n      ];\n   }\n\n  function setupMarkerClickEvents(){\n      \n      markers.forEach(marker => {\n        marker.on('click', () =>{\n          openPopup(marker);\n        });\n      });\n   }\n\n  function openPopup(marker){\n      const popupURLKey = marker.getPopup().getContent();\n      //console.log(popupURLKey);\n      popupURL.value = iframeURLs[popupURLKey]\n      //console.log(popupURL)\n      showPopup.value = true;\n   }\n\n\nconst popupURL = ref('');\n\n</script>\n\n<style scoped>\n.map-container {\n  height: 850px; /* Set map container height */\n  width: 80%;\n}\n\n.iframe-popup {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 600px; /* Adjust as needed */\n  height: 100%;\n  background-color: white;\n  z-index: 1000;\n}\n\niframe {\n  width: 100%;\n  height: 100%;\n}\n</style>"],"mappings":";;;EAEOA,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC;;;EAFhCC,GAAA;EAIwBD,KAAK,EAAC;;mBAJ9B;;uBACAE,mBAAA,CAOM,cANJC,mBAAA,CAAoD,OAApDC,UAAoD,+BAEzCC,MAAA,CAAAC,SAAS,I,cAApBJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,mBAAA,+QAAwQ,EACxQL,mBAAA,CAAqK;IAA5JM,GAAG,EAACJ,MAAA,CAAAK,QAAQ;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAE,KAAK;IAACC,WAAW,EAAC,GAAG;IAACC,KAAK,EAAC;0BAN1EC,UAAA,E,KAAAP,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}