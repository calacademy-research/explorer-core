{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"mapContainer\",\n  style: {\n    \"width\": \"60%\",\n    \"height\": \"800px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","style","_createElementBlock","_hoisted_1"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/explorerMap.vue"],"sourcesContent":["<template>\n  <div ref=\"mapContainer\" style=\"width: 60%; height: 800px;\"></div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport axios from 'axios';\nimport markerImage from '@/assets/marker.png'\n\nconst mapContainer = ref(null);\nlet map;\nlet popupString;\nlet markers = [];\n\nonMounted(() => {\n   map = L.map(mapContainer.value).setView([0,0],2);\n    //map = L.map(mapContainer.value).fitWorld();\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; OpenStreetMap contributors',\n  }).addTo(map);\n\n//   const bounds = [[-90, -180], [90, 180]]\n//   map.fitBounds(bounds);\n\n    fetchCoordinates();\n\n//   map.on('click', (event) => {\n//     handleMapClick(event.latlng);\n//   });\n});\n\nasync function fetchCoordinates(){\n    var myIcon = L.icon({\n    //iconUrl: require('./src/assets/marker.png'),\n    iconUrl: markerImage,\n    //iconSize: [38, 95],\n    iconAnchor: [22, 94],\n    popupAnchor: [-3, -76],\n    //shadowUrl: ,\n    //shadowSize: [68, 95],\n    //shadowAnchor: [22, 94]\n});\n\n    try {\n        const response = await axios.get('http://0.0.0.0:8000/collection_map/');\n        let data = response.data; // Assuming the API response is an array of marker data\n        console.log(data)\n        data = JSON.parse(data)\n        // console.log(typeof(data2))\n        // console.log(data2.length)\n        // console.log(data2[0])\n        data.forEach(item => {\n            console.log(item)\n            console.log(item.Latitude)\n            console.log(parseFloat(item.Latitude))\n            const marker = L.marker([parseFloat(item.Latitude), parseFloat(item.Longitude)], {icon: myIcon}).addTo(map);\n            if (item.Remarks!=null){\n              popupString = \"<i>\\\"\" + item.Remarks + \"\\\"</i><br>\" + item.Start\n            }\n            else{\n              popupString = \"<br>\" + item.Start\n            }\n            //marker.bindPopup('<br>Hi CAS!</br>').openPopup();\n            marker.bindPopup(popupString).openPopup();\n            markers.push(marker);\n                    \n    });\n  } catch (error) {\n        console.error('Error fetching data:', error);\n  }    \n}\n\n// function handleMapClick(latLng) {\n//   console.log('Clicked coordinates:', latLng.lat, latLng.lng);\n//   addMarker({ lat: latLng.lat, lng: latLng.lng });\n// }\n\n// function addMarker(position) {\n//   const marker = L.marker(position).addTo(map);\n//   markers.push(marker);\n\n//   marker.on('click', () => {\n//     handleMarkerClick(marker);\n//   });\n// }\n\n// function handleMarkerClick(marker) {\n//   console.log('Clicked marker:', marker);\n//   // Add your logic for handling marker click events here\n// }\n</script>\n\n<script>\nexport default {\n  data() {\n    return {\n      popupOptions: { maxWidth: 200 }, // Customize popup options\n    };\n  },\n  methods: {\n    openPopup(marker) {\n      console.log('Clicked marker:', marker);\n    },\n  },\n};\n</script>\n\n<style>\n\n</style>\n"],"mappings":";;EACOA,GAAG,EAAC,cAAc;EAACC,KAAkC,EAAlC;IAAA;IAAA;EAAA;;;uBAAxBC,mBAAA,CAAiE,OAAjEC,UAAiE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}