{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nexport default {\n  name: 'ThreeJSRenderer',\n  mounted() {\n    this.initThree();\n  },\n  methods: {\n    initThree() {\n      const container = this.$refs.threeContainer;\n      if (container) {\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\n        this.camera.position.z = 5;\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(container.clientWidth, container.clientHeight);\n        container.appendChild(this.renderer.domElement);\n        const geometry = new THREE.BoxGeometry();\n        const material = new THREE.MeshBasicMaterial({\n          color: 0x00ff00\n        });\n        this.cube = new THREE.Mesh(geometry, material);\n        this.scene.add(this.cube);\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.animate = this.animate.bind(this); // Bind the animate function to the component instance\n        this.animate();\n      } else {\n        console.error('Three.js container not found');\n      }\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.controls.update();\n      this.renderer.render(this.scene, this.camera);\n    }\n  }\n};","map":{"version":3,"names":["THREE","OrbitControls","name","mounted","initThree","methods","container","$refs","threeContainer","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","controls","animate","bind","console","error","requestAnimationFrame","rotation","x","y","update","render"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/ThreeJSRenderer.vue"],"sourcesContent":["<template>\n  <div ref=\"threeContainer\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nexport default {\n  name: 'ThreeJSRenderer',\n  mounted() {\n    this.initThree();\n  },\n  methods: {\n    initThree() {\n      const container = this.$refs.threeContainer;\n      if (container) {\n        this.scene = new THREE.Scene();\n\n        this.camera = new THREE.PerspectiveCamera(\n          75,\n          container.clientWidth / container.clientHeight,\n          0.1,\n          1000\n        );\n        this.camera.position.z = 5;\n\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(container.clientWidth, container.clientHeight);\n        container.appendChild(this.renderer.domElement);\n\n        const geometry = new THREE.BoxGeometry();\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        this.cube = new THREE.Mesh(geometry, material);\n        this.scene.add(this.cube);\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n        this.animate = this.animate.bind(this); // Bind the animate function to the component instance\n        this.animate();\n      } else {\n        console.error('Three.js container not found');\n      }\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n\n      this.controls.update();\n\n      this.renderer.render(this.scene, this.camera);\n    },\n  },\n};\n</script>\n\n<style scoped>\ndiv {\n  width: 100%;\n  height: 100vh;\n}\n</style>\n"],"mappings":"AAKA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAC9B,SAASC,aAAY,QAAS,8CAA8C;AAE5E,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,MAAME,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACC,cAAc;MAC3C,IAAIF,SAAS,EAAE;QACb,IAAI,CAACG,KAAI,GAAI,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;QAE9B,IAAI,CAACC,MAAK,GAAI,IAAIX,KAAK,CAACY,iBAAiB,CACvC,EAAE,EACFN,SAAS,CAACO,WAAU,GAAIP,SAAS,CAACQ,YAAY,EAC9C,GAAG,EACH,IACF,CAAC;QACD,IAAI,CAACH,MAAM,CAACI,QAAQ,CAACC,CAAA,GAAI,CAAC;QAE1B,IAAI,CAACC,QAAO,GAAI,IAAIjB,KAAK,CAACkB,aAAa,CAAC,CAAC;QACzC,IAAI,CAACD,QAAQ,CAACE,OAAO,CAACb,SAAS,CAACO,WAAW,EAAEP,SAAS,CAACQ,YAAY,CAAC;QACpER,SAAS,CAACc,WAAW,CAAC,IAAI,CAACH,QAAQ,CAACI,UAAU,CAAC;QAE/C,MAAMC,QAAO,GAAI,IAAItB,KAAK,CAACuB,WAAW,CAAC,CAAC;QACxC,MAAMC,QAAO,GAAI,IAAIxB,KAAK,CAACyB,iBAAiB,CAAC;UAAEC,KAAK,EAAE;QAAS,CAAC,CAAC;QACjE,IAAI,CAACC,IAAG,GAAI,IAAI3B,KAAK,CAAC4B,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;QAC9C,IAAI,CAACf,KAAK,CAACoB,GAAG,CAAC,IAAI,CAACF,IAAI,CAAC;QAEzB,IAAI,CAACG,QAAO,GAAI,IAAI7B,aAAa,CAAC,IAAI,CAACU,MAAM,EAAE,IAAI,CAACM,QAAQ,CAACI,UAAU,CAAC;QAExE,IAAI,CAACU,OAAM,GAAI,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;QACxC,IAAI,CAACD,OAAO,CAAC,CAAC;MAChB,OAAO;QACLE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACF,CAAC;IACDH,OAAOA,CAAA,EAAG;MACRI,qBAAqB,CAAC,IAAI,CAACJ,OAAO,CAAC;MAEnC,IAAI,CAACJ,IAAI,CAACS,QAAQ,CAACC,CAAA,IAAK,IAAI;MAC5B,IAAI,CAACV,IAAI,CAACS,QAAQ,CAACE,CAAA,IAAK,IAAI;MAE5B,IAAI,CAACR,QAAQ,CAACS,MAAM,CAAC,CAAC;MAEtB,IAAI,CAACtB,QAAQ,CAACuB,MAAM,CAAC,IAAI,CAAC/B,KAAK,EAAE,IAAI,CAACE,MAAM,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}