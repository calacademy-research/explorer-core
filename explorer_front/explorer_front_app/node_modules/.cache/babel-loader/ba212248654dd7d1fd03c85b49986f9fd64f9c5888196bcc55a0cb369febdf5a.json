{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport L from 'leaflet';\nimport markerImage from '@/assets/marker.png';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\nimport { islandsJSON } from '../assets/galapagos.geojson';\nexport default {\n  __name: 'GalapagosMap',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const mapContainer = ref(null);\n    const showPopup = ref(false);\n    let map;\n    let markers = [];\n    const iframeURLs = {\n      turtle: 'https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4',\n      iguana: 'https://www.morphosource.org/uv.html#?manifest=/manifests/d22b0459-dbfe-4d32-b35e-fac4e0ee33e6'\n    };\n    onMounted(() => {\n      map = L.map(mapContainer.value).setView([-0.207259, -90.142578], 8); // Center coordinates of Hawaii, zoom level 8\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      addMarkers();\n      setupMarkerClickEvents();\n      var drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n      var drawControl = new L.Control.Draw({\n        draw: {\n          polygon: true,\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          marker: false\n        },\n        edit: {\n          featureGroup: drawnItems,\n          edit: false,\n          remove: false\n        }\n      });\n      map.addControl(drawControl);\n      map.on(L.Draw.Event.CREATED, function (event) {\n        var layer = event.layer;\n        drawnItems.addLayer(layer);\n\n        // Do something with the drawn polygon, like getting its coordinates\n        var polygonCoordinates = layer.getLatLngs();\n        console.log(\"layer info\", layer);\n        var geoJSONinfo = layer.toGeoJSON();\n        console.log(\"geoJSON: \", geoJSONinfo);\n        console.log(JSON.stringify(geoJSONinfo.geometry.coordinates));\n        console.log(polygonCoordinates);\n        console.log(JSON.stringify(polygonCoordinates));\n        layer.bindPopup('<p>Island <br>' + JSON.stringify(geoJSONinfo) + '</p>');\n        L.geoJSON(islandsJSON, {\n          style: {\n            color: 'blue',\n            weight: 2,\n            fillOpacity: 0.1\n          }\n        }).addTo(map);\n      });\n      return {\n        mapContainer\n      };\n    });\n    function addMarkers() {\n      var myIcon = L.icon({\n        //iconUrl: require('./src/assets/marker.png'),\n        iconUrl: markerImage\n        //iconSize: [38, 95],\n        //iconAnchor: [22, 94],\n        //popupAnchor: [-3, -76],\n        //shadowUrl: ,\n        //shadowSize: [68, 95],\n        //shadowAnchor: [22, 94]\n      });\n      markers = [L.marker([-0.0358333333, -91.3761111111], {\n        icon: myIcon\n      }).bindPopup('turtle').addTo(map), L.marker([-1.3541666667, -89.6598611111], {\n        icon: myIcon\n      }).bindPopup('iguana').addTo(map)];\n    }\n    function setupMarkerClickEvents() {\n      markers.forEach(marker => {\n        marker.on('click', () => {\n          openPopup(marker);\n        });\n      });\n    }\n    function openPopup(marker) {\n      const popupURLKey = marker.getPopup().getContent();\n      //console.log(popupURLKey);\n      popupURL.value = iframeURLs[popupURLKey];\n      //console.log(popupURL)\n      showPopup.value = true;\n    }\n    const popupURL = ref('');\n    const __returned__ = {\n      mapContainer,\n      showPopup,\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      get markers() {\n        return markers;\n      },\n      set markers(v) {\n        markers = v;\n      },\n      iframeURLs,\n      addMarkers,\n      setupMarkerClickEvents,\n      openPopup,\n      popupURL,\n      ref,\n      onMounted,\n      get L() {\n        return L;\n      },\n      get markerImage() {\n        return markerImage;\n      },\n      get islandsJSON() {\n        return islandsJSON;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","L","markerImage","islandsJSON","mapContainer","showPopup","map","markers","iframeURLs","turtle","iguana","value","setView","tileLayer","addTo","addMarkers","setupMarkerClickEvents","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","polygon","polyline","rectangle","circle","marker","edit","featureGroup","remove","addControl","on","Event","CREATED","event","layer","polygonCoordinates","getLatLngs","console","log","geoJSONinfo","toGeoJSON","JSON","stringify","geometry","coordinates","bindPopup","geoJSON","style","color","weight","fillOpacity","myIcon","icon","iconUrl","forEach","openPopup","popupURLKey","getPopup","getContent","popupURL"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/GalapagosMap.vue"],"sourcesContent":["<template>\n<div>\n  <div ref=\"mapContainer\" class=\"map-container\"></div>\n  \n  <div v-if=\"showPopup\" class=\"iframe-popup\">\n    <!-- <iframe :src=\"'https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4'\" width=\"560\" height =\"420\" frameborder=\"0\" allow=\"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe> -->\n    <iframe :src=popupURL width=\"560\" height =\"420\" frameborder=\"0\" allow=\"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n  </div>\n</div>\n</template>\n\n\n\n<script setup>\nimport {ref, onMounted} from 'vue';\nimport L from 'leaflet';\n\nimport markerImage from '@/assets/marker.png'\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\nimport { islandsJSON } from '../assets/galapagos.geojson' \n\nconst mapContainer = ref(null);\nconst showPopup = ref(false);\nlet map;\nlet markers = [];\n\nconst iframeURLs = {\n  turtle: 'https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4',\n  iguana: 'https://www.morphosource.org/uv.html#?manifest=/manifests/d22b0459-dbfe-4d32-b35e-fac4e0ee33e6',\n};\n\nonMounted(() => {\n      map = L.map(mapContainer.value).setView([-0.207259, -90.142578], 8); // Center coordinates of Hawaii, zoom level 8\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      \n      addMarkers();\n      setupMarkerClickEvents();\n\n      var drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n\n      var drawControl = new L.Control.Draw({\n        draw: {\n          polygon: true,\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          marker: false,\n        },\n        edit: {\n          featureGroup: drawnItems,\n          edit: false,\n          remove: false,\n        },\n      });\n\n      map.addControl(drawControl);\n\n      map.on(L.Draw.Event.CREATED, function (event) {\n      var layer = event.layer;\n      drawnItems.addLayer(layer);\n\n      // Do something with the drawn polygon, like getting its coordinates\n      var polygonCoordinates = layer.getLatLngs();\n      console.log(\"layer info\", layer);\n      var geoJSONinfo = layer.toGeoJSON();\n      console.log(\"geoJSON: \", geoJSONinfo);\n      console.log(JSON.stringify(geoJSONinfo.geometry.coordinates));\n      console.log(polygonCoordinates);\n      console.log(JSON.stringify(polygonCoordinates));\n\n      layer.bindPopup('<p>Island <br>'+JSON.stringify(geoJSONinfo)+'</p>');\n\n      L.geoJSON(islandsJSON, {\n        style: {\n          color: 'blue',\n          weight: 2,\n          fillOpacity: 0.1,\n        },\n      }).addTo(map)\n\n\n      });\n\n\n    return { mapContainer };\n  });\n  \n  function addMarkers(){\n\n       var myIcon = L.icon({\n        //iconUrl: require('./src/assets/marker.png'),\n        iconUrl: markerImage,\n        //iconSize: [38, 95],\n        //iconAnchor: [22, 94],\n        //popupAnchor: [-3, -76],\n        //shadowUrl: ,\n        //shadowSize: [68, 95],\n        //shadowAnchor: [22, 94]\n      });\n\n      markers = [\n        L.marker([-0.0358333333, -91.3761111111], {icon: myIcon}).bindPopup('turtle').addTo(map),\n        L.marker([-1.3541666667,  -89.6598611111], {icon: myIcon}).bindPopup('iguana').addTo(map)\n      ];\n   }\n\n  function setupMarkerClickEvents(){\n      \n      markers.forEach(marker => {\n        marker.on('click', () =>{\n          openPopup(marker);\n        });\n      });\n   }\n\n  function openPopup(marker){\n      const popupURLKey = marker.getPopup().getContent();\n      //console.log(popupURLKey);\n      popupURL.value = iframeURLs[popupURLKey]\n      //console.log(popupURL)\n      showPopup.value = true;\n   }\n\n\nconst popupURL = ref('');\n\n</script>\n\n<style scoped>\n.map-container {\n  height: 850px; /* Set map container height */\n  width: 80%;\n}\n\n.iframe-popup {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 600px; /* Adjust as needed */\n  height: 100%;\n  background-color: white;\n  z-index: 1000;\n}\n\niframe {\n  width: 100%;\n  height: 100%;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}