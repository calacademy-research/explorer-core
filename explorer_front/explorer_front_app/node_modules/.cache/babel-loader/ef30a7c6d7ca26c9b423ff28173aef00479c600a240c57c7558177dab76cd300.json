{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6991b281\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"mapContainer\",\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"iframe-popup\"\n};\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), $setup.showPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"iframe\", {\n    src: $setup.popupURL,\n    frameborder: \"0\",\n    allow: \"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  }, null, 8 /* PROPS */, _hoisted_3)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["ref","class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","$setup","showPopup","_hoisted_2","src","popupURL","frameborder","allow","_hoisted_3","_createCommentVNode"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/GalapagosMap.vue"],"sourcesContent":["<template>\n  <div ref=\"mapContainer\" class=\"map-container\"></div>\n  <div v-if=\"showPopup\" class=\"iframe-popup\">\n    <iframe :src=\"popupURL\" frameborder=\"0\" allow=\"fullscreen; accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n  </div>\n\n</template>\n\n\n\n<script setup>\nimport {ref, onMounted} from 'vue';\nimport L from 'leaflet';\n\nimport markerImage from '@/assets/marker.png'\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\n\nconst mapContainer = ref(null);\nconst showPopup = ref(false);\nlet map;\nlet markers = [];\n\nonMounted(() => {\n      map = L.map(mapContainer.value).setView([-0.207259, -90.142578], 8); // Center coordinates of Hawaii, zoom level 8\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      \n      addMarkers();\n      setupMarkerClickEvents();\n\n      var drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n\n      var drawControl = new L.Control.Draw({\n        draw: {\n          polygon: true,\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          marker: false,\n        },\n        edit: {\n          featureGroup: drawnItems,\n          edit: false,\n          remove: false,\n        },\n      });\n\n      map.addControl(drawControl);\n\n      map.on(L.Draw.Event.CREATED, function (event) {\n      var layer = event.layer;\n      drawnItems.addLayer(layer);\n\n      // Do something with the drawn polygon, like getting its coordinates\n      var polygonCoordinates = layer.getLatLngs();\n      console.log(\"layer info\", layer);\n      var geoJSON = layer.toGeoJSON();\n      console.log(\"geoJSON: \", geoJSON);\n      console.log(JSON.stringify(geoJSON.geometry.coordinates));\n      console.log(polygonCoordinates);\n      console.log(JSON.stringify(polygonCoordinates));\n\n      layer.bindPopup('<p>Island <br>'+JSON.stringify(geoJSON)+'</p>');\n      });\n\n\n    //return { mapContainer };\n  });\n  \n  function addMarkers(){\n\n       var myIcon = L.icon({\n        //iconUrl: require('./src/assets/marker.png'),\n        iconUrl: markerImage,\n        //iconSize: [38, 95],\n        //iconAnchor: [22, 94],\n        //popupAnchor: [-3, -76],\n        //shadowUrl: ,\n        //shadowSize: [68, 95],\n        //shadowAnchor: [22, 94]\n      });\n\n      markers = [\n        L.marker([-0.0358333333, -91.3761111111], {icon: myIcon}).bindPopup('turtle').addTo(map),\n        L.marker([-1.3541666667,  -89.6598611111], {icon: myIcon}).bindPopup('iguana').addTo(map)\n      ];\n   }\n\n  function setupMarkerClickEvents(){\n      \n      markers.forEach(marker => {\n        marker.on('click', () =>{\n          openPopup(marker);\n        });\n      });\n   }\n\n  function openPopup(marker){\n      popupURL.value = marker.getPopup().getContent();\n      showPopup.value = true;\n   }\n\nconst popupURL = ref('https://www.morphosource.org/uv.html#?manifest=/manifests/44b0cd03-9165-4367-b20a-8ed303a2f3c4');\n//const popupURL = ref('https://google.com')\n</script>\n\n<style scoped>\n.map-container {\n  height: 400px; /* Set map container height */\n}\n\n.iframe-popup {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 300px; /* Adjust as needed */\n  height: 100%;\n  background-color: white;\n  z-index: 1000;\n}\n\niframe {\n  width: 100%;\n  height: 100%;\n}\n</style>"],"mappings":";;;EACOA,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC;;;EADhCC,GAAA;EAEwBD,KAAK,EAAC;;mBAF9B;;uBAAAE,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAAoD,OAApDC,UAAoD,+BACzCC,MAAA,CAAAC,SAAS,I,cAApBL,mBAAA,CAEM,OAFNM,UAEM,GADJJ,mBAAA,CAA6I;IAApIK,GAAG,EAAEH,MAAA,CAAAI,QAAQ;IAAEC,WAAW,EAAC,GAAG;IAACC,KAAK,EAAC;0BAHlDC,UAAA,E,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}