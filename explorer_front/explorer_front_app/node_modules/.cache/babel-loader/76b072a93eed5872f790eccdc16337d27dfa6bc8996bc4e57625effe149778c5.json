{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar dragHelpers = require('../../dragelement/helpers');\nvar drawMode = dragHelpers.drawMode;\nvar openMode = dragHelpers.openMode;\nvar constants = require('./constants');\nvar i000 = constants.i000;\nvar i090 = constants.i090;\nvar i180 = constants.i180;\nvar i270 = constants.i270;\nvar cos45 = constants.cos45;\nvar sin45 = constants.sin45;\nvar cartesianHelpers = require('../../selections/helpers');\nvar p2r = cartesianHelpers.p2r;\nvar r2p = cartesianHelpers.r2p;\nvar handleOutline = require('.././handle_outline');\nvar clearOutline = handleOutline.clearOutline;\nvar helpers = require('./helpers');\nvar readPaths = helpers.readPaths;\nvar writePaths = helpers.writePaths;\nvar ellipseOver = helpers.ellipseOver;\nvar fixDatesForPaths = helpers.fixDatesForPaths;\nfunction newShapes(outlines, dragOptions) {\n  if (!outlines.length) return;\n  var e = outlines[0][0]; // pick first\n  if (!e) return;\n  var gd = dragOptions.gd;\n  var isActiveShape = dragOptions.isActiveShape;\n  var dragmode = dragOptions.dragmode;\n  var shapes = (gd.layout || {}).shapes || [];\n  if (!drawMode(dragmode) && isActiveShape !== undefined) {\n    var id = gd._fullLayout._activeShapeIndex;\n    if (id < shapes.length) {\n      switch (gd._fullLayout.shapes[id].type) {\n        case 'rect':\n          dragmode = 'drawrect';\n          break;\n        case 'circle':\n          dragmode = 'drawcircle';\n          break;\n        case 'line':\n          dragmode = 'drawline';\n          break;\n        case 'path':\n          var path = shapes[id].path || '';\n          if (path[path.length - 1] === 'Z') {\n            dragmode = 'drawclosedpath';\n          } else {\n            dragmode = 'drawopenpath';\n          }\n          break;\n      }\n    }\n  }\n  var newShape = createShapeObj(outlines, dragOptions, dragmode);\n  clearOutline(gd);\n  var editHelpers = dragOptions.editHelpers;\n  var modifyItem = (editHelpers || {}).modifyItem;\n  var allShapes = [];\n  for (var q = 0; q < shapes.length; q++) {\n    var beforeEdit = gd._fullLayout.shapes[q];\n    allShapes[q] = beforeEdit._input;\n    if (isActiveShape !== undefined && q === gd._fullLayout._activeShapeIndex) {\n      var afterEdit = newShape;\n      switch (beforeEdit.type) {\n        case 'line':\n        case 'rect':\n        case 'circle':\n          modifyItem('x0', afterEdit.x0);\n          modifyItem('x1', afterEdit.x1);\n          modifyItem('y0', afterEdit.y0);\n          modifyItem('y1', afterEdit.y1);\n          break;\n        case 'path':\n          modifyItem('path', afterEdit.path);\n          break;\n      }\n    }\n  }\n  if (isActiveShape === undefined) {\n    allShapes.push(newShape); // add new shape\n    return allShapes;\n  }\n  return editHelpers ? editHelpers.getUpdateObj() : {};\n}\nfunction createShapeObj(outlines, dragOptions, dragmode) {\n  var e = outlines[0][0]; // pick first outline\n  var gd = dragOptions.gd;\n  var d = e.getAttribute('d');\n  var newStyle = gd._fullLayout.newshape;\n  var plotinfo = dragOptions.plotinfo;\n  var isActiveShape = dragOptions.isActiveShape;\n  var xaxis = plotinfo.xaxis;\n  var yaxis = plotinfo.yaxis;\n  var xPaper = !!plotinfo.domain || !plotinfo.xaxis;\n  var yPaper = !!plotinfo.domain || !plotinfo.yaxis;\n  var isOpenMode = openMode(dragmode);\n  var polygons = readPaths(d, gd, plotinfo, isActiveShape);\n  var newShape = {\n    editable: true,\n    visible: newStyle.visible,\n    name: newStyle.name,\n    showlegend: newStyle.showlegend,\n    legend: newStyle.legend,\n    legendwidth: newStyle.legendwidth,\n    legendgroup: newStyle.legendgroup,\n    legendgrouptitle: {\n      text: newStyle.legendgrouptitle.text,\n      font: newStyle.legendgrouptitle.font\n    },\n    legendrank: newStyle.legendrank,\n    label: newStyle.label,\n    xref: xPaper ? 'paper' : xaxis._id,\n    yref: yPaper ? 'paper' : yaxis._id,\n    layer: newStyle.layer,\n    opacity: newStyle.opacity,\n    line: {\n      color: newStyle.line.color,\n      width: newStyle.line.width,\n      dash: newStyle.line.dash\n    }\n  };\n  if (!isOpenMode) {\n    newShape.fillcolor = newStyle.fillcolor;\n    newShape.fillrule = newStyle.fillrule;\n  }\n  var cell;\n  // line, rect and circle can be in one cell\n  // only define cell if there is single cell\n  if (polygons.length === 1) cell = polygons[0];\n  if (cell && cell.length === 5 &&\n  // ensure we only have 4 corners for a rect\n  dragmode === 'drawrect') {\n    newShape.type = 'rect';\n    newShape.x0 = cell[0][1];\n    newShape.y0 = cell[0][2];\n    newShape.x1 = cell[2][1];\n    newShape.y1 = cell[2][2];\n  } else if (cell && dragmode === 'drawline') {\n    newShape.type = 'line';\n    newShape.x0 = cell[0][1];\n    newShape.y0 = cell[0][2];\n    newShape.x1 = cell[1][1];\n    newShape.y1 = cell[1][2];\n  } else if (cell && dragmode === 'drawcircle') {\n    newShape.type = 'circle'; // an ellipse!\n\n    var xA = cell[i000][1];\n    var xB = cell[i090][1];\n    var xC = cell[i180][1];\n    var xD = cell[i270][1];\n    var yA = cell[i000][2];\n    var yB = cell[i090][2];\n    var yC = cell[i180][2];\n    var yD = cell[i270][2];\n    var xDateOrLog = plotinfo.xaxis && (plotinfo.xaxis.type === 'date' || plotinfo.xaxis.type === 'log');\n    var yDateOrLog = plotinfo.yaxis && (plotinfo.yaxis.type === 'date' || plotinfo.yaxis.type === 'log');\n    if (xDateOrLog) {\n      xA = r2p(plotinfo.xaxis, xA);\n      xB = r2p(plotinfo.xaxis, xB);\n      xC = r2p(plotinfo.xaxis, xC);\n      xD = r2p(plotinfo.xaxis, xD);\n    }\n    if (yDateOrLog) {\n      yA = r2p(plotinfo.yaxis, yA);\n      yB = r2p(plotinfo.yaxis, yB);\n      yC = r2p(plotinfo.yaxis, yC);\n      yD = r2p(plotinfo.yaxis, yD);\n    }\n    var x0 = (xB + xD) / 2;\n    var y0 = (yA + yC) / 2;\n    var rx = (xD - xB + xC - xA) / 2;\n    var ry = (yD - yB + yC - yA) / 2;\n    var pos = ellipseOver({\n      x0: x0,\n      y0: y0,\n      x1: x0 + rx * cos45,\n      y1: y0 + ry * sin45\n    });\n    if (xDateOrLog) {\n      pos.x0 = p2r(plotinfo.xaxis, pos.x0);\n      pos.x1 = p2r(plotinfo.xaxis, pos.x1);\n    }\n    if (yDateOrLog) {\n      pos.y0 = p2r(plotinfo.yaxis, pos.y0);\n      pos.y1 = p2r(plotinfo.yaxis, pos.y1);\n    }\n    newShape.x0 = pos.x0;\n    newShape.y0 = pos.y0;\n    newShape.x1 = pos.x1;\n    newShape.y1 = pos.y1;\n  } else {\n    newShape.type = 'path';\n    if (xaxis && yaxis) fixDatesForPaths(polygons, xaxis, yaxis);\n    newShape.path = writePaths(polygons);\n    cell = null;\n  }\n  return newShape;\n}\nmodule.exports = {\n  newShapes: newShapes,\n  createShapeObj: createShapeObj\n};","map":{"version":3,"names":["require","dragHelpers","drawMode","openMode","constants","i000","i090","i180","i270","cos45","sin45","cartesianHelpers","p2r","r2p","handleOutline","clearOutline","helpers","readPaths","writePaths","ellipseOver","fixDatesForPaths","newShapes","outlines","dragOptions","length","e","gd","isActiveShape","dragmode","shapes","layout","undefined","id","_fullLayout","_activeShapeIndex","type","path","newShape","createShapeObj","editHelpers","modifyItem","allShapes","q","beforeEdit","_input","afterEdit","x0","x1","y0","y1","push","getUpdateObj","d","getAttribute","newStyle","newshape","plotinfo","xaxis","yaxis","xPaper","domain","yPaper","isOpenMode","polygons","editable","visible","name","showlegend","legend","legendwidth","legendgroup","legendgrouptitle","text","font","legendrank","label","xref","_id","yref","layer","opacity","line","color","width","dash","fillcolor","fillrule","cell","xA","xB","xC","xD","yA","yB","yC","yD","xDateOrLog","yDateOrLog","rx","ry","pos","module","exports"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/node_modules/plotly.js/src/components/shapes/draw_newshape/newshapes.js"],"sourcesContent":["'use strict';\n\nvar dragHelpers = require('../../dragelement/helpers');\nvar drawMode = dragHelpers.drawMode;\nvar openMode = dragHelpers.openMode;\n\nvar constants = require('./constants');\nvar i000 = constants.i000;\nvar i090 = constants.i090;\nvar i180 = constants.i180;\nvar i270 = constants.i270;\nvar cos45 = constants.cos45;\nvar sin45 = constants.sin45;\n\nvar cartesianHelpers = require('../../selections/helpers');\nvar p2r = cartesianHelpers.p2r;\nvar r2p = cartesianHelpers.r2p;\n\nvar handleOutline = require('.././handle_outline');\nvar clearOutline = handleOutline.clearOutline;\n\nvar helpers = require('./helpers');\nvar readPaths = helpers.readPaths;\nvar writePaths = helpers.writePaths;\nvar ellipseOver = helpers.ellipseOver;\nvar fixDatesForPaths = helpers.fixDatesForPaths;\n\nfunction newShapes(outlines, dragOptions) {\n    if(!outlines.length) return;\n    var e = outlines[0][0]; // pick first\n    if(!e) return;\n\n    var gd = dragOptions.gd;\n\n    var isActiveShape = dragOptions.isActiveShape;\n    var dragmode = dragOptions.dragmode;\n\n    var shapes = (gd.layout || {}).shapes || [];\n\n    if(!drawMode(dragmode) && isActiveShape !== undefined) {\n        var id = gd._fullLayout._activeShapeIndex;\n        if(id < shapes.length) {\n            switch(gd._fullLayout.shapes[id].type) {\n                case 'rect':\n                    dragmode = 'drawrect';\n                    break;\n                case 'circle':\n                    dragmode = 'drawcircle';\n                    break;\n                case 'line':\n                    dragmode = 'drawline';\n                    break;\n                case 'path':\n                    var path = shapes[id].path || '';\n                    if(path[path.length - 1] === 'Z') {\n                        dragmode = 'drawclosedpath';\n                    } else {\n                        dragmode = 'drawopenpath';\n                    }\n                    break;\n            }\n        }\n    }\n\n    var newShape = createShapeObj(outlines, dragOptions, dragmode);\n\n    clearOutline(gd);\n\n    var editHelpers = dragOptions.editHelpers;\n    var modifyItem = (editHelpers || {}).modifyItem;\n\n    var allShapes = [];\n    for(var q = 0; q < shapes.length; q++) {\n        var beforeEdit = gd._fullLayout.shapes[q];\n        allShapes[q] = beforeEdit._input;\n\n        if(\n            isActiveShape !== undefined &&\n            q === gd._fullLayout._activeShapeIndex\n        ) {\n            var afterEdit = newShape;\n\n            switch(beforeEdit.type) {\n                case 'line':\n                case 'rect':\n                case 'circle':\n                    modifyItem('x0', afterEdit.x0);\n                    modifyItem('x1', afterEdit.x1);\n                    modifyItem('y0', afterEdit.y0);\n                    modifyItem('y1', afterEdit.y1);\n                    break;\n\n                case 'path':\n                    modifyItem('path', afterEdit.path);\n                    break;\n            }\n        }\n    }\n\n    if(isActiveShape === undefined) {\n        allShapes.push(newShape); // add new shape\n        return allShapes;\n    }\n\n    return editHelpers ? editHelpers.getUpdateObj() : {};\n}\n\nfunction createShapeObj(outlines, dragOptions, dragmode) {\n    var e = outlines[0][0]; // pick first outline\n    var gd = dragOptions.gd;\n\n    var d = e.getAttribute('d');\n    var newStyle = gd._fullLayout.newshape;\n    var plotinfo = dragOptions.plotinfo;\n    var isActiveShape = dragOptions.isActiveShape;\n\n    var xaxis = plotinfo.xaxis;\n    var yaxis = plotinfo.yaxis;\n    var xPaper = !!plotinfo.domain || !plotinfo.xaxis;\n    var yPaper = !!plotinfo.domain || !plotinfo.yaxis;\n\n    var isOpenMode = openMode(dragmode);\n    var polygons = readPaths(d, gd, plotinfo, isActiveShape);\n\n    var newShape = {\n        editable: true,\n\n        visible: newStyle.visible,\n        name: newStyle.name,\n        showlegend: newStyle.showlegend,\n        legend: newStyle.legend,\n        legendwidth: newStyle.legendwidth,\n        legendgroup: newStyle.legendgroup,\n        legendgrouptitle: {\n            text: newStyle.legendgrouptitle.text,\n            font: newStyle.legendgrouptitle.font\n        },\n        legendrank: newStyle.legendrank,\n\n        label: newStyle.label,\n\n        xref: xPaper ? 'paper' : xaxis._id,\n        yref: yPaper ? 'paper' : yaxis._id,\n\n        layer: newStyle.layer,\n        opacity: newStyle.opacity,\n        line: {\n            color: newStyle.line.color,\n            width: newStyle.line.width,\n            dash: newStyle.line.dash\n        }\n    };\n\n    if(!isOpenMode) {\n        newShape.fillcolor = newStyle.fillcolor;\n        newShape.fillrule = newStyle.fillrule;\n    }\n\n    var cell;\n    // line, rect and circle can be in one cell\n    // only define cell if there is single cell\n    if(polygons.length === 1) cell = polygons[0];\n\n    if(\n        cell &&\n        cell.length === 5 && // ensure we only have 4 corners for a rect\n        dragmode === 'drawrect'\n    ) {\n        newShape.type = 'rect';\n        newShape.x0 = cell[0][1];\n        newShape.y0 = cell[0][2];\n        newShape.x1 = cell[2][1];\n        newShape.y1 = cell[2][2];\n    } else if(\n        cell &&\n        dragmode === 'drawline'\n    ) {\n        newShape.type = 'line';\n        newShape.x0 = cell[0][1];\n        newShape.y0 = cell[0][2];\n        newShape.x1 = cell[1][1];\n        newShape.y1 = cell[1][2];\n    } else if(\n        cell &&\n        dragmode === 'drawcircle'\n    ) {\n        newShape.type = 'circle'; // an ellipse!\n\n        var xA = cell[i000][1];\n        var xB = cell[i090][1];\n        var xC = cell[i180][1];\n        var xD = cell[i270][1];\n\n        var yA = cell[i000][2];\n        var yB = cell[i090][2];\n        var yC = cell[i180][2];\n        var yD = cell[i270][2];\n\n        var xDateOrLog = plotinfo.xaxis && (\n            plotinfo.xaxis.type === 'date' ||\n            plotinfo.xaxis.type === 'log'\n        );\n\n        var yDateOrLog = plotinfo.yaxis && (\n            plotinfo.yaxis.type === 'date' ||\n            plotinfo.yaxis.type === 'log'\n        );\n\n        if(xDateOrLog) {\n            xA = r2p(plotinfo.xaxis, xA);\n            xB = r2p(plotinfo.xaxis, xB);\n            xC = r2p(plotinfo.xaxis, xC);\n            xD = r2p(plotinfo.xaxis, xD);\n        }\n\n        if(yDateOrLog) {\n            yA = r2p(plotinfo.yaxis, yA);\n            yB = r2p(plotinfo.yaxis, yB);\n            yC = r2p(plotinfo.yaxis, yC);\n            yD = r2p(plotinfo.yaxis, yD);\n        }\n\n        var x0 = (xB + xD) / 2;\n        var y0 = (yA + yC) / 2;\n        var rx = (xD - xB + xC - xA) / 2;\n        var ry = (yD - yB + yC - yA) / 2;\n        var pos = ellipseOver({\n            x0: x0,\n            y0: y0,\n            x1: x0 + rx * cos45,\n            y1: y0 + ry * sin45\n        });\n\n        if(xDateOrLog) {\n            pos.x0 = p2r(plotinfo.xaxis, pos.x0);\n            pos.x1 = p2r(plotinfo.xaxis, pos.x1);\n        }\n\n        if(yDateOrLog) {\n            pos.y0 = p2r(plotinfo.yaxis, pos.y0);\n            pos.y1 = p2r(plotinfo.yaxis, pos.y1);\n        }\n\n        newShape.x0 = pos.x0;\n        newShape.y0 = pos.y0;\n        newShape.x1 = pos.x1;\n        newShape.y1 = pos.y1;\n    } else {\n        newShape.type = 'path';\n        if(xaxis && yaxis) fixDatesForPaths(polygons, xaxis, yaxis);\n        newShape.path = writePaths(polygons);\n        cell = null;\n    }\n    return newShape;\n}\n\nmodule.exports = {\n    newShapes: newShapes,\n    createShapeObj: createShapeObj,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}