{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref } from 'vue';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport axios from 'axios';\nimport markerImage from '@/assets/marker.png';\nexport default {\n  __name: 'explorerMap',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const mapContainer = ref(null);\n    let map;\n    let markers = [];\n    onMounted(() => {\n      map = L.map(mapContainer.value).setView([0, 0], 2);\n      //map = L.map(mapContainer.value).fitWorld();\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(map);\n\n      //   const bounds = [[-90, -180], [90, 180]]\n      //   map.fitBounds(bounds);\n\n      fetchCoordinates();\n\n      //   map.on('click', (event) => {\n      //     handleMapClick(event.latlng);\n      //   });\n    });\n    async function fetchCoordinates() {\n      var myIcon = L.icon({\n        //iconUrl: require('./src/assets/marker.png'),\n        iconUrl: markerImage,\n        //iconSize: [38, 95],\n        iconAnchor: [22, 94],\n        popupAnchor: [-3, -76]\n        //shadowUrl: ,\n        //shadowSize: [68, 95],\n        //shadowAnchor: [22, 94]\n      });\n      try {\n        const response = await axios.get('http://0.0.0.0:8000/collection_map/');\n        let data = response.data; // Assuming the API response is an array of marker data\n        console.log(data);\n        data = JSON.parse(data);\n        // console.log(typeof(data2))\n        // console.log(data2.length)\n        // console.log(data2[0])\n        data.forEach(item => {\n          console.log(item);\n          console.log(item.Latitude);\n          console.log(parseFloat(item.Latitude));\n          const marker = L.marker([parseFloat(item.Latitude), parseFloat(item.Longitude)], {\n            icon: myIcon\n          }).addTo(map);\n          markers.push(marker);\n          // You can customize marker properties and add popup information here\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n\n    // function handleMapClick(latLng) {\n    //   console.log('Clicked coordinates:', latLng.lat, latLng.lng);\n    //   addMarker({ lat: latLng.lat, lng: latLng.lng });\n    // }\n\n    // function addMarker(position) {\n    //   const marker = L.marker(position).addTo(map);\n    //   markers.push(marker);\n\n    //   marker.on('click', () => {\n    //     handleMarkerClick(marker);\n    //   });\n    // }\n\n    // function handleMarkerClick(marker) {\n    //   console.log('Clicked marker:', marker);\n    //   // Add your logic for handling marker click events here\n    // }\n\n    const __returned__ = {\n      mapContainer,\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      get markers() {\n        return markers;\n      },\n      set markers(v) {\n        markers = v;\n      },\n      fetchCoordinates,\n      onMounted,\n      ref,\n      get L() {\n        return L;\n      },\n      get axios() {\n        return axios;\n      },\n      get markerImage() {\n        return markerImage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","L","axios","markerImage","mapContainer","map","markers","value","setView","tileLayer","attribution","addTo","fetchCoordinates","myIcon","icon","iconUrl","iconAnchor","popupAnchor","response","get","data","console","log","JSON","parse","forEach","item","Latitude","parseFloat","marker","Longitude","push","error"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/explorerMap.vue"],"sourcesContent":["<template>\n  <div ref=\"mapContainer\" style=\"width: 60%; height: 800px;\"></div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport axios from 'axios';\nimport markerImage from '@/assets/marker.png'\n\nconst mapContainer = ref(null);\nlet map;\nlet markers = [];\n\nonMounted(() => {\n   map = L.map(mapContainer.value).setView([0,0],2);\n    //map = L.map(mapContainer.value).fitWorld();\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; OpenStreetMap contributors',\n  }).addTo(map);\n\n//   const bounds = [[-90, -180], [90, 180]]\n//   map.fitBounds(bounds);\n\n    fetchCoordinates();\n\n//   map.on('click', (event) => {\n//     handleMapClick(event.latlng);\n//   });\n});\n\nasync function fetchCoordinates(){\n    var myIcon = L.icon({\n    //iconUrl: require('./src/assets/marker.png'),\n    iconUrl: markerImage,\n    //iconSize: [38, 95],\n    iconAnchor: [22, 94],\n    popupAnchor: [-3, -76],\n    //shadowUrl: ,\n    //shadowSize: [68, 95],\n    //shadowAnchor: [22, 94]\n});\n\n    try {\n        const response = await axios.get('http://0.0.0.0:8000/collection_map/');\n        let data = response.data; // Assuming the API response is an array of marker data\n        console.log(data)\n        data = JSON.parse(data)\n        // console.log(typeof(data2))\n        // console.log(data2.length)\n        // console.log(data2[0])\n        data.forEach(item => {\n            console.log(item)\n            console.log(item.Latitude)\n            console.log(parseFloat(item.Latitude))\n            const marker = L.marker([parseFloat(item.Latitude), parseFloat(item.Longitude)], {icon: myIcon}).addTo(map);\n            markers.push(marker);\n        // You can customize marker properties and add popup information here\n    });\n  } catch (error) {\n        console.error('Error fetching data:', error);\n  }    \n}\n\n// function handleMapClick(latLng) {\n//   console.log('Clicked coordinates:', latLng.lat, latLng.lng);\n//   addMarker({ lat: latLng.lat, lng: latLng.lng });\n// }\n\n// function addMarker(position) {\n//   const marker = L.marker(position).addTo(map);\n//   markers.push(marker);\n\n//   marker.on('click', () => {\n//     handleMarkerClick(marker);\n//   });\n// }\n\n// function handleMarkerClick(marker) {\n//   console.log('Clicked marker:', marker);\n//   // Add your logic for handling marker click events here\n// }\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AAKA,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,qBAAqB;;;;;;;IAE7C,MAAMC,YAAY,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAC9B,IAAIK,GAAG;IACP,IAAIC,OAAO,GAAG,EAAE;IAEhBP,SAAS,CAAC,MAAM;MACbM,GAAG,GAAGJ,CAAC,CAACI,GAAG,CAACD,YAAY,CAACG,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC;MAC/C;MACFP,CAAC,CAACQ,SAAS,CAAC,oDAAoD,EAAE;QAChEC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;;MAEf;MACA;;MAEIO,gBAAgB,CAAC,CAAC;;MAEtB;MACA;MACA;IACA,CAAC,CAAC;IAEF,eAAeA,gBAAgBA,CAAA,EAAE;MAC7B,IAAIC,MAAM,GAAGZ,CAAC,CAACa,IAAI,CAAC;QACpB;QACAC,OAAO,EAAEZ,WAAW;QACpB;QACAa,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACpBC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QACrB;QACA;QACA;MACJ,CAAC,CAAC;MAEE,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,qCAAqC,CAAC;QACvE,IAAIC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBA,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;QACvB;QACA;QACA;QACAA,IAAI,CAACK,OAAO,CAACC,IAAI,IAAI;UACjBL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;UACjBL,OAAO,CAACC,GAAG,CAACI,IAAI,CAACC,QAAQ,CAAC;UAC1BN,OAAO,CAACC,GAAG,CAACM,UAAU,CAACF,IAAI,CAACC,QAAQ,CAAC,CAAC;UACtC,MAAME,MAAM,GAAG5B,CAAC,CAAC4B,MAAM,CAAC,CAACD,UAAU,CAACF,IAAI,CAACC,QAAQ,CAAC,EAAEC,UAAU,CAACF,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE;YAAChB,IAAI,EAAED;UAAM,CAAC,CAAC,CAACF,KAAK,CAACN,GAAG,CAAC;UAC3GC,OAAO,CAACyB,IAAI,CAACF,MAAM,CAAC;UACxB;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;QACVX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAClD;IACF;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}