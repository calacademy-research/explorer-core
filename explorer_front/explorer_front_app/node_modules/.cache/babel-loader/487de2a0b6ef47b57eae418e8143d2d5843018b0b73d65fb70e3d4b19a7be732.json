{"ast":null,"code":"import axios from 'axios';\nimport Plotly from 'plotly.js/lib/core';\nexport default {\n  data() {\n    return {\n      totalCollections: 0\n    };\n  },\n  mounted() {\n    axios.get('http://0.0.0.0:8000/collection/').then(response => {\n      // Assuming your API response contains a 'count' field for total collections\n      this.collectionsData = response.data;\n      console.log(this.collectionsData);\n      console.log(this.collectionsData.Date);\n      this.createLineChart();\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  },\n  methods: {\n    createLineChart() {\n      //const xValues = this.collectionsData.map(item => item.Date); // Assuming date is a property in your data\n      //const yValues = this.collectionsData.map(item => item.Collections); // Assuming count is a property in your data\n      const xValues = this.collectionsData.Date;\n      const yValues = this.collectionsData.Collections;\n      const trace = {\n        x: xValues,\n        y: yValues,\n        mode: 'lines+markers',\n        type: 'scatter',\n        name: 'Collections over Time'\n      };\n      const layout = {\n        title: 'Collections Over Time',\n        xaxis: {\n          title: 'Date'\n        },\n        yaxis: {\n          title: 'Number of Collections'\n        }\n      };\n      Plotly.newPlot('line-chart', [trace], layout);\n    }\n  }\n};","map":{"version":3,"names":["axios","Plotly","data","totalCollections","mounted","get","then","response","collectionsData","console","log","Date","createLineChart","catch","error","methods","xValues","yValues","Collections","trace","x","y","mode","type","name","layout","title","xaxis","yaxis","newPlot"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/explorerDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Collections Dashboard</h1>\n    <div id=\"line-chart\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Plotly from 'plotly.js/lib/core';\n\nexport default {\n  data() {\n    return {\n      totalCollections: 0\n    };\n  },\n  mounted() {\n    axios.get('http://0.0.0.0:8000/collection/')\n      .then(response => {\n        // Assuming your API response contains a 'count' field for total collections\n        this.collectionsData = response.data;\n        console.log(this.collectionsData)\n        console.log(this.collectionsData.Date)\n        this.createLineChart();\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  },\n  methods: {\n    createLineChart(){\n      //const xValues = this.collectionsData.map(item => item.Date); // Assuming date is a property in your data\n      //const yValues = this.collectionsData.map(item => item.Collections); // Assuming count is a property in your data\n      const xValues = this.collectionsData.Date;\n      const yValues = this.collectionsData.Collections;\n      const trace = {\n        x: xValues,\n        y: yValues,\n        mode: 'lines+markers',\n        type: 'scatter',\n        name: 'Collections over Time'\n      };\n\n      const layout = {\n        title: 'Collections Over Time',\n        xaxis: { title: 'Date' },\n        yaxis: { title: 'Number of Collections' }\n      };\n\n      Plotly.newPlot('line-chart', [trace], layout);\n    }\n  }\n};\n</script>\n\n\n\n<style scoped>\n/* Add any custom styles here */\n</style>\n"],"mappings":"AAQA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,oBAAoB;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRJ,KAAK,CAACK,GAAG,CAAC,iCAAiC,EACxCC,IAAI,CAACC,QAAO,IAAK;MAChB;MACA,IAAI,CAACC,eAAc,GAAID,QAAQ,CAACL,IAAI;MACpCO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,eAAe;MAChCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,eAAe,CAACG,IAAI;MACrC,IAAI,CAACC,eAAe,CAAC,CAAC;IACxB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;MACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACPH,eAAeA,CAAA,EAAE;MACf;MACA;MACA,MAAMI,OAAM,GAAI,IAAI,CAACR,eAAe,CAACG,IAAI;MACzC,MAAMM,OAAM,GAAI,IAAI,CAACT,eAAe,CAACU,WAAW;MAChD,MAAMC,KAAI,GAAI;QACZC,CAAC,EAAEJ,OAAO;QACVK,CAAC,EAAEJ,OAAO;QACVK,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE;MACR,CAAC;MAED,MAAMC,MAAK,GAAI;QACbC,KAAK,EAAE,uBAAuB;QAC9BC,KAAK,EAAE;UAAED,KAAK,EAAE;QAAO,CAAC;QACxBE,KAAK,EAAE;UAAEF,KAAK,EAAE;QAAwB;MAC1C,CAAC;MAEDzB,MAAM,CAAC4B,OAAO,CAAC,YAAY,EAAE,CAACV,KAAK,CAAC,EAAEM,MAAM,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}