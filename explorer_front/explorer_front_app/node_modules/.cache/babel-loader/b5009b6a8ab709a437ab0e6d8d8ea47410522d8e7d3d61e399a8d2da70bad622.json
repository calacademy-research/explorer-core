{"ast":null,"code":"import axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json' // Example of another header\n  }\n});\nexport default {\n  //[collectionobjectid, attachmentid, file_createddate_str, \n  //image_file, catalogeddate_str, collection_desc, \n  //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      collectionobjectidData: [],\n      attachmentidData: [],\n      filecreateddateData: [],\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n  methods: {\n    getImages() {\n      axiosInstance.get('collection_images').then(response => {\n        console.log(response.data);\n        //const arrayOfArrays = response.data;\n        // Map each inner array to the desired key\n        this.dictionary = {};\n        this.arrayOfArrays.forEach(item => {\n          if (item.length === 8) {\n            const [key, value] = item;\n            this.dictionary[key] = value;\n          }\n        });\n        console.log(\"test\");\n        console.log(JSON.stringify(this.imagefileData));\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n  //   mounted() {\n  //     axiosInstance.get('collection_images')\n  //       .then(response => {\n\n  //          const arrayOfArrays = response.data;\n  //          console.log(response.data)\n\n  //          // Map each inner array to the desired key\n  //         this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectid: arr[0] }));\n  //         this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentid: arr[1] }));\n  //         this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddate: arr[2] }));\n  //         this.imagefileData = arrayOfArrays.map(arr => ({ imagefile: arr[3] }));\n  //         this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddate: arr[4] }));\n  //         this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondesc: arr[5] }));\n  //         this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstart: arr[6] }));\n  //         this.agentnameData = arrayOfArrays.map(arr => ({ agentname: arr[7] }));\n\n  //         // You can also append the entire response data to a single key if needed\n  //         this.responseData = arrayOfArrays;\n  //         console.log(\"test\")\n  //         console.log(JSON.stringify(this.imagefileData))\n  //       })\n  //       .catch(error => {\n  //         console.error('Error fetching data:', error);\n  //       });\n  //   },\n};","map":{"version":3,"names":["axios","token","axiosInstance","create","baseURL","headers","data","responseData","collectionobjectidData","attachmentidData","filecreateddateData","imagefileData","catalogeddateData","collectiondescData","collectingeventstartData","agentnameData","methods","getImages","get","then","response","console","log","dictionary","arrayOfArrays","forEach","item","length","key","value","JSON","stringify","catch","error"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/DjangoData.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"getImages\">Load Images</button>\n    <h2>collectionobjectid Data:</h2>\n    <ul>\n      <li v-for=\"(item, index) in collectionobjectidData\" :key=\"index\">{{ item.collectionobjectidData }}</li>\n      {{ collectionobjectidData }}   \n    </ul>\n\n    <h2>attachmentid Data:</h2>\n    <ul>\n      <li v-for=\"(item, index) in attachmentidData\" :key=\"index\">{{ item.attachmentid }}</li>\n    </ul>\n\n    <h2>Key 3 Data:</h2>\n    <ul>\n      <li v-for=\"(item, index) in key3Data\" :key=\"index\">{{ item.key3 }}</li>\n    </ul>\n\n    <h2>Response Data:</h2>\n    <ul>\n      <li v-for=\"(arr, index) in responseData\" :key=\"index\">\n        <ul>\n          <li v-for=\"(item, idx) in arr\" :key=\"idx\">{{ item }}</li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json', // Example of another header\n  },\n});\n\nexport default {\n    //[collectionobjectid, attachmentid, file_createddate_str, \n    //image_file, catalogeddate_str, collection_desc, \n    //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      collectionobjectidData: [],\n      attachmentidData: [],\n      filecreateddateData: [],\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n\nmethods:{\n    getImages(){\n        axiosInstance.get('collection_images')\n        .then(response =>{\n            console.log(response.data)\n            //const arrayOfArrays = response.data;\n         // Map each inner array to the desired key\n            this.dictionary = {};\n            this.arrayOfArrays.forEach(item => {\n                if (item.length === 8) {\n                    const [key, value] = item;\n                    this.dictionary[key] = value;\n                }\n            });\n\n            console.log(\"test\")\n            console.log(JSON.stringify(this.imagefileData))\n            \n\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n    }\n}\n//   mounted() {\n//     axiosInstance.get('collection_images')\n//       .then(response => {\n\n//          const arrayOfArrays = response.data;\n//          console.log(response.data)\n\n//          // Map each inner array to the desired key\n//         this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectid: arr[0] }));\n//         this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentid: arr[1] }));\n//         this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddate: arr[2] }));\n//         this.imagefileData = arrayOfArrays.map(arr => ({ imagefile: arr[3] }));\n//         this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddate: arr[4] }));\n//         this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondesc: arr[5] }));\n//         this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstart: arr[6] }));\n//         this.agentnameData = arrayOfArrays.map(arr => ({ agentname: arr[7] }));\n\n//         // You can also append the entire response data to a single key if needed\n//         this.responseData = arrayOfArrays;\n//         console.log(\"test\")\n//         console.log(JSON.stringify(this.imagefileData))\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//       });\n//   },\n};\n</script>\n"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,KAAI,GAAI,QAAO,GAAI,0CAA0C;;AAEnE;AACA,MAAMC,aAAY,GAAIF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE,sBAAsB;EAC/BC,OAAO,EAAE;IACP,eAAe,EAAG,GAAEJ,KAAM,EAAC;IAC3B,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;AAEF,eAAe;EACX;EACA;EACA;EACFK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,sBAAsB,EAAE,EAAE;MAC1BC,gBAAgB,EAAE,EAAE;MACpBC,mBAAmB,EAAE,EAAE;MACvBC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE,EAAE;MACrBC,kBAAkB,EAAE,EAAE;MACtBC,wBAAwB,EAAE,EAAE;MAC5BC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EAEHC,OAAO,EAAC;IACJC,SAASA,CAAA,EAAE;MACPf,aAAa,CAACgB,GAAG,CAAC,mBAAmB,EACpCC,IAAI,CAACC,QAAO,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI;QACzB;QACH;QACG,IAAI,CAACiB,UAAS,GAAI,CAAC,CAAC;QACpB,IAAI,CAACC,aAAa,CAACC,OAAO,CAACC,IAAG,IAAK;UAC/B,IAAIA,IAAI,CAACC,MAAK,KAAM,CAAC,EAAE;YACnB,MAAM,CAACC,GAAG,EAAEC,KAAK,IAAIH,IAAI;YACzB,IAAI,CAACH,UAAU,CAACK,GAAG,IAAIC,KAAK;UAChC;QACJ,CAAC,CAAC;QAEFR,OAAO,CAACC,GAAG,CAAC,MAAM;QAClBD,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,SAAS,CAAC,IAAI,CAACpB,aAAa,CAAC;MAGlD,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAI;QACXZ,OAAO,CAACC,GAAG,CAACW,KAAK;MACrB,CAAC;IACL;EACJ;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}