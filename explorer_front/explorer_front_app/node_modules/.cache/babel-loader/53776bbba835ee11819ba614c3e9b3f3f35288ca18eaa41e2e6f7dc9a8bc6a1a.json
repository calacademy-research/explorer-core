{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6991b281\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"mapContainer\",\n  class: \"map-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_l_tile_layer = _resolveComponent(\"l-tile-layer\");\n  const _component_l_popup = _resolveComponent(\"l-popup\");\n  const _component_l_marker = _resolveComponent(\"l-marker\");\n  const _component_l_map = _resolveComponent(\"l-map\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), _createVNode(_component_l_map, {\n    zoom: _ctx.zoom,\n    center: _ctx.center\n  }, {\n    default: _withCtx(() => [_createVNode(_component_l_tile_layer, {\n      url: _ctx.tileLayerUrl\n    }, null, 8 /* PROPS */, [\"url\"]), _createVNode(_component_l_marker, {\n      \"lat-lng\": [_ctx.island.lat, _ctx.island.lng],\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleMarkerClick(_ctx.island))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_l_popup, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.island.name), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"lat-lng\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"zoom\", \"center\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_l_map","zoom","_ctx","center","default","_withCtx","_component_l_tile_layer","url","tileLayerUrl","_component_l_marker","island","lat","lng","onClick","_cache","$event","handleMarkerClick","_component_l_popup","_createTextVNode","_toDisplayString","name","_"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/GalapagosMap.vue"],"sourcesContent":["<template>\n  <div ref=\"mapContainer\" class=\"map-container\"></div>\n<l-map :zoom=\"zoom\" :center=\"center\">\n  <l-tile-layer :url=\"tileLayerUrl\"></l-tile-layer>\n  <l-marker :lat-lng=\"[island.lat, island.lng]\" @click=\"handleMarkerClick(island)\">\n    <l-popup>{{ island.name }}</l-popup>\n  </l-marker>\n</l-map>\n\n\n</template>\n\n\n\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport L from 'leaflet';\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\n\nexport default {\n  setup() {\n    const mapContainer = ref(null);\n\n    onMounted(() => {\n      const map = L.map(mapContainer.value).setView([-0.207259, -90.142578], 8); // Center coordinates of Hawaii, zoom level 8\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      \n      var drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n\n      var drawControl = new L.Control.Draw({\n        draw: {\n          polygon: true,\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          marker: false,\n        },\n        edit: {\n          featureGroup: drawnItems,\n          edit: false,\n          remove: false,\n        },\n      });\n      map.addControl(drawControl);\n\n      map.on(L.Draw.Event.CREATED, function (event) {\n      var layer = event.layer;\n      drawnItems.addLayer(layer);\n\n      // Do something with the drawn polygon, like getting its coordinates\n      var polygonCoordinates = layer.getLatLngs();\n      console.log(\"layer info\", layer);\n      var geoJSON = layer.toGeoJSON();\n      console.log(\"geoJSON: \", geoJSON);\n      console.log(JSON.stringify(geoJSON.geometry.coordinates));\n      console.log(polygonCoordinates);\n      console.log(JSON.stringify(polygonCoordinates));\n\n      layer.bindPopup('<p>Island <br>'+JSON.stringify(geoJSON)+'</p>');\n\n    });\n\n    \n    });\n\n    return { mapContainer };\n  },\n};\n</script>\n\n<style scoped>\n.map-container {\n  width: 96%;\n  height: 1000px; /* Set the height of your map container */\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC;;;;;;;uBADhCC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAAoD,OAApDC,UAAoD,+BACtDC,YAAA,CAKQC,gBAAA;IALAC,IAAI,EAAEC,IAAA,CAAAD,IAAI;IAAGE,MAAM,EAAED,IAAA,CAAAC;;IAF7BC,OAAA,EAAAC,QAAA,CAGE,MAAiD,CAAjDN,YAAA,CAAiDO,uBAAA;MAAlCC,GAAG,EAAEL,IAAA,CAAAM;IAAY,kCAChCT,YAAA,CAEWU,mBAAA;MAFA,SAAO,GAAGP,IAAA,CAAAQ,MAAM,CAACC,GAAG,EAAET,IAAA,CAAAQ,MAAM,CAACE,GAAG;MAAIC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEb,IAAA,CAAAc,iBAAiB,CAACd,IAAA,CAAAQ,MAAM;;MAJhFN,OAAA,EAAAC,QAAA,CAKI,MAAoC,CAApCN,YAAA,CAAoCkB,kBAAA;QALxCb,OAAA,EAAAC,QAAA,CAKa,MAAiB,CAL9Ba,gBAAA,CAAAC,gBAAA,CAKgBjB,IAAA,CAAAQ,MAAM,CAACU,IAAI,iB;QAL3BC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}