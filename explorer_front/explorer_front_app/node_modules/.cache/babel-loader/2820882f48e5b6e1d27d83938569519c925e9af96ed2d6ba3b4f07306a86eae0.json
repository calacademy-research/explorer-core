{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array-buffer.detached.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar Lib = require('../../lib');\nvar attributes = require('./attributes');\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n  coerce('x');\n  coerce('y');\n  coerce('xbounds');\n  coerce('ybounds');\n  if (traceIn.xy && traceIn.xy instanceof Float32Array) {\n    traceOut.xy = traceIn.xy;\n  }\n  if (traceIn.indices && traceIn.indices instanceof Int32Array) {\n    traceOut.indices = traceIn.indices;\n  }\n  coerce('text');\n  coerce('marker.color', defaultColor);\n  coerce('marker.opacity');\n  coerce('marker.blend');\n  coerce('marker.sizemin');\n  coerce('marker.sizemax');\n  coerce('marker.border.color', defaultColor);\n  coerce('marker.border.arearatio');\n\n  // disable 1D transforms - that would defeat the purpose of this trace type, performance!\n  traceOut._length = null;\n};","map":{"version":3,"names":["require","Lib","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","coerce","attr","dflt","xy","Float32Array","indices","Int32Array","_length"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/node_modules/plotly.js/src/traces/pointcloud/defaults.js"],"sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    coerce('x');\n    coerce('y');\n\n    coerce('xbounds');\n    coerce('ybounds');\n\n    if(traceIn.xy && traceIn.xy instanceof Float32Array) {\n        traceOut.xy = traceIn.xy;\n    }\n\n    if(traceIn.indices && traceIn.indices instanceof Int32Array) {\n        traceOut.indices = traceIn.indices;\n    }\n\n    coerce('text');\n    coerce('marker.color', defaultColor);\n    coerce('marker.opacity');\n    coerce('marker.blend');\n    coerce('marker.sizemin');\n    coerce('marker.sizemax');\n    coerce('marker.border.color', defaultColor);\n    coerce('marker.border.arearatio');\n\n    // disable 1D transforms - that would defeat the purpose of this trace type, performance!\n    traceOut._length = null;\n};\n"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAEb,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAE9B,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;AAExCG,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EACtE,SAASC,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACxB,OAAOV,GAAG,CAACQ,MAAM,CAACH,OAAO,EAAEC,QAAQ,EAAEL,UAAU,EAAEQ,IAAI,EAAEC,IAAI,CAAC;EAChE;EAEAF,MAAM,CAAC,GAAG,CAAC;EACXA,MAAM,CAAC,GAAG,CAAC;EAEXA,MAAM,CAAC,SAAS,CAAC;EACjBA,MAAM,CAAC,SAAS,CAAC;EAEjB,IAAGH,OAAO,CAACM,EAAE,IAAIN,OAAO,CAACM,EAAE,YAAYC,YAAY,EAAE;IACjDN,QAAQ,CAACK,EAAE,GAAGN,OAAO,CAACM,EAAE;EAC5B;EAEA,IAAGN,OAAO,CAACQ,OAAO,IAAIR,OAAO,CAACQ,OAAO,YAAYC,UAAU,EAAE;IACzDR,QAAQ,CAACO,OAAO,GAAGR,OAAO,CAACQ,OAAO;EACtC;EAEAL,MAAM,CAAC,MAAM,CAAC;EACdA,MAAM,CAAC,cAAc,EAAED,YAAY,CAAC;EACpCC,MAAM,CAAC,gBAAgB,CAAC;EACxBA,MAAM,CAAC,cAAc,CAAC;EACtBA,MAAM,CAAC,gBAAgB,CAAC;EACxBA,MAAM,CAAC,gBAAgB,CAAC;EACxBA,MAAM,CAAC,qBAAqB,EAAED,YAAY,CAAC;EAC3CC,MAAM,CAAC,yBAAyB,CAAC;;EAEjC;EACAF,QAAQ,CAACS,OAAO,GAAG,IAAI;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}