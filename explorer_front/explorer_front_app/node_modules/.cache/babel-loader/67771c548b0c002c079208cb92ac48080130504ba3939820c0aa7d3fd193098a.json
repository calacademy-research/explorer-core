{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6991b281\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"mapContainer\",\n  class: \"map-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/GalapagosMap.vue"],"sourcesContent":["<template>\n  <div ref=\"mapContainer\" class=\"map-container\"></div>\n</template>\n\n\n\n\n<script>\nimport { ref } from 'vue';\nimport L from 'leaflet';\n\nimport markerImage from '@/assets/marker.png'\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\n\nexport default {\n mounted(){\n    const mapContainer = ref(null);\n\n      const map = L.map(mapContainer.value).setView([-0.207259, -90.142578], 8); // Center coordinates of Hawaii, zoom level 8\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n      \n      this.addMarkers();\n\n      var drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n\n      var drawControl = new L.Control.Draw({\n        draw: {\n          polygon: true,\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          marker: false,\n        },\n        edit: {\n          featureGroup: drawnItems,\n          edit: false,\n          remove: false,\n        },\n      });\n      map.addControl(drawControl);\n\n      map.on(L.Draw.Event.CREATED, function (event) {\n      var layer = event.layer;\n      drawnItems.addLayer(layer);\n\n      // Do something with the drawn polygon, like getting its coordinates\n      var polygonCoordinates = layer.getLatLngs();\n      console.log(\"layer info\", layer);\n      var geoJSON = layer.toGeoJSON();\n      console.log(\"geoJSON: \", geoJSON);\n      console.log(JSON.stringify(geoJSON.geometry.coordinates));\n      console.log(polygonCoordinates);\n      console.log(JSON.stringify(polygonCoordinates));\n\n      layer.bindPopup('<p>Island <br>'+JSON.stringify(geoJSON)+'</p>');\n      });\n\n\n    return { mapContainer };\n  },\n\n  methods: {\n    addMarkers(){\n      this.markers = [\n        L.marker([-0.0358333333, -91.3761111111], {icon: myIcon}).bindPopup('turtle').addTo(this.map),\n        L.marker([-1.3541666667,  -89.6598611111], {icon: myIcon}).bindPopup('iguana').addTo(this.map)\n      ];\n\n      this.setupMarkerClickEvents();\n   },\n\n    setupMarkerClickEvents(){\n      this.markers.forEach(marker => {\n\n        marker.on('click', () =>{\n          this.openPopup(marker);\n        });\n\n      });\n   },\n\n   openPopup(marker){\n      this.popupURL = marker.getPopup().getContent();\n      this.showPopup = true;\n   }\n\n   }\n  }\n};\n</script>\n\n<style scoped>\n.map-container {\n  width: 96%;\n  height: 1000px; /* Set the height of your map container */\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC;;;uBAA9BC,mBAAA,CAAoD,OAApDC,UAAoD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}