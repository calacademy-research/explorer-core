{"ast":null,"code":"import axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    //'Authorization': `Bearer ${token}`,\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json' // Example of another header\n  }\n});\nexport default {\n  //[collectionobjectid, attachmentid, file_createddate_str, \n  //image_file, catalogeddate_str, collection_desc, \n  //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: {},\n      collectionobjectidData: {},\n      attachmentidData: {},\n      filecreateddateData: {},\n      imagefileData: {},\n      catalogeddateData: {},\n      collectiondescData: {},\n      collectingeventstartData: {},\n      agentnameData: {}\n    };\n  },\n  mounted() {\n    axiosInstance.get('collection_images').then(response => {\n      const arrayOfArrays = response.data;\n\n      // Map each inner array to the desired key\n      this.collectionobjectidData = arrayOfArrays.map(arr => ({\n        collectionobjectidData: arr[0]\n      }));\n      this.attachmentidData = arrayOfArrays.map(arr => ({\n        attachmentidData: arr[1]\n      }));\n      this.filecreateddateData = arrayOfArrays.map(arr => ({\n        filecreateddateData: arr[2]\n      }));\n      this.imagefileData = arrayOfArrays.map(arr => ({\n        imagefileData: arr[3]\n      }));\n      this.catalogeddateData = arrayOfArrays.map(arr => ({\n        catalogeddateData: arr[4]\n      }));\n      this.collectiondescData = arrayOfArrays.map(arr => ({\n        collectiondescData: arr[5]\n      }));\n      this.collectingeventstartData = arrayOfArrays.map(arr => ({\n        collectingeventstartData: arr[6]\n      }));\n      this.agentnameData = arrayOfArrays.map(arr => ({\n        agentnameData: arr[7]\n      }));\n\n      // You can also append the entire response data to a single key if needed\n      this.responseData = arrayOfArrays;\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n};","map":{"version":3,"names":["axios","token","axiosInstance","create","baseURL","headers","data","responseData","collectionobjectidData","attachmentidData","filecreateddateData","imagefileData","catalogeddateData","collectiondescData","collectingeventstartData","agentnameData","mounted","get","then","response","arrayOfArrays","map","arr","catch","error","console"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/DjangoData.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>hi baby!</h1>\n    <ul>\n      {{ responseData }}\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    //'Authorization': `Bearer ${token}`,\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json', // Example of another header\n  },\n});\n\nexport default {\n    //[collectionobjectid, attachmentid, file_createddate_str, \n    //image_file, catalogeddate_str, collection_desc, \n    //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: {},\n      collectionobjectidData: {},\n      attachmentidData: {},\n      filecreateddateData: {},\n      imagefileData: {},\n      catalogeddateData: {},\n      collectiondescData: {},\n      collectingeventstartData: {},\n      agentnameData: {}\n    };\n  },\n  mounted() {\n    axiosInstance.get('collection_images')\n      .then(response => {\n\n         const arrayOfArrays = response.data;\n\n         // Map each inner array to the desired key\n        this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectidData: arr[0] }));\n        this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentidData: arr[1] }));\n        this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddateData: arr[2] }));\n        this.imagefileData = arrayOfArrays.map(arr => ({ imagefileData: arr[3] }));\n        this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddateData: arr[4] }));\n        this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondescData: arr[5] }));\n        this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstartData: arr[6] }));\n        this.agentnameData = arrayOfArrays.map(arr => ({ agentnameData: arr[7] }));\n\n        // You can also append the entire response data to a single key if needed\n        this.responseData = arrayOfArrays;\n\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  },\n};\n</script>\n"],"mappings":"AAUA,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,KAAI,GAAI,QAAO,GAAI,0CAA0C;;AAEnE;AACA,MAAMC,aAAY,GAAIF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE,sBAAsB;EAC/BC,OAAO,EAAE;IACP;IACA,eAAe,EAAG,GAAEJ,KAAM,EAAC;IAC3B,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;AAEF,eAAe;EACX;EACA;EACA;EACFK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,CAAC,CAAC;MAChBC,sBAAsB,EAAE,CAAC,CAAC;MAC1BC,gBAAgB,EAAE,CAAC,CAAC;MACpBC,mBAAmB,EAAE,CAAC,CAAC;MACvBC,aAAa,EAAE,CAAC,CAAC;MACjBC,iBAAiB,EAAE,CAAC,CAAC;MACrBC,kBAAkB,EAAE,CAAC,CAAC;MACtBC,wBAAwB,EAAE,CAAC,CAAC;MAC5BC,aAAa,EAAE,CAAC;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRd,aAAa,CAACe,GAAG,CAAC,mBAAmB,EAClCC,IAAI,CAACC,QAAO,IAAK;MAEf,MAAMC,aAAY,GAAID,QAAQ,CAACb,IAAI;;MAEnC;MACD,IAAI,CAACE,sBAAqB,GAAIY,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEd,sBAAsB,EAAEc,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAC5F,IAAI,CAACb,gBAAe,GAAIW,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEb,gBAAgB,EAAEa,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAChF,IAAI,CAACZ,mBAAkB,GAAIU,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEZ,mBAAmB,EAAEY,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MACtF,IAAI,CAACX,aAAY,GAAIS,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEX,aAAa,EAAEW,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAC1E,IAAI,CAACV,iBAAgB,GAAIQ,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEV,iBAAiB,EAAEU,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAClF,IAAI,CAACT,kBAAiB,GAAIO,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAET,kBAAkB,EAAES,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MACpF,IAAI,CAACR,wBAAuB,GAAIM,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAER,wBAAwB,EAAEQ,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAChG,IAAI,CAACP,aAAY,GAAIK,aAAa,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEP,aAAa,EAAEO,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;;MAE1E;MACA,IAAI,CAACf,YAAW,GAAIa,aAAa;IAEnC,CAAC,EACAG,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}