{"ast":null,"code":"import axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    //'Authorization': `Bearer ${token}`,\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json' // Example of another header\n  }\n});\nexport default {\n  //[collectionobjectid, attachmentid, file_createddate_str, \n  //image_file, catalogeddate_str, collection_desc, \n  //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      collectionobjectidData: [],\n      attachmentidData: [],\n      filecreateddateData: [],\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n  mounted() {\n    axiosInstance.get('collection_images').then(response => {\n      const arrayOfArrays = response.data;\n      console.log(response.data);\n\n      // Map each inner array to the desired key\n      this.collectionobjectidData = arrayOfArrays.map(arr => ({\n        collectionobjectid: arr[0]\n      }));\n      this.attachmentidData = arrayOfArrays.map(arr => ({\n        attachmentid: arr[1]\n      }));\n      this.filecreateddateData = arrayOfArrays.map(arr => ({\n        filecreateddate: arr[2]\n      }));\n      this.imagefileData = arrayOfArrays.map(arr => ({\n        imagefile: arr[3]\n      }));\n      this.catalogeddateData = arrayOfArrays.map(arr => ({\n        catalogeddate: arr[4]\n      }));\n      this.collectiondescData = arrayOfArrays.map(arr => ({\n        collectiondesc: arr[5]\n      }));\n      this.collectingeventstartData = arrayOfArrays.map(arr => ({\n        collectingeventstart: arr[6]\n      }));\n      this.agentnameData = arrayOfArrays.map(arr => ({\n        agentname: arr[7]\n      }));\n\n      // You can also append the entire response data to a single key if needed\n      this.responseData = arrayOfArrays;\n      console.log(\"test\");\n      console.log(JSON.stringify(this.imagefileData));\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n};","map":{"version":3,"names":["axios","token","axiosInstance","create","baseURL","headers","data","responseData","collectionobjectidData","attachmentidData","filecreateddateData","imagefileData","catalogeddateData","collectiondescData","collectingeventstartData","agentnameData","mounted","get","then","response","arrayOfArrays","console","log","map","arr","collectionobjectid","attachmentid","filecreateddate","imagefile","catalogeddate","collectiondesc","collectingeventstart","agentname","JSON","stringify","catch","error"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/DjangoData.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>collectionobjectid Data:</h2>\n    <ul>\n      <li v-for=\"(item, index) in collectionobjectidData\" :key=\"index\">{{ item.collectionobjectidData }}</li>\n      {{ item}}   \n    </ul>\n\n    <h2>attachmentid Data:</h2>\n    <ul>\n      <li v-for=\"(item, index) in attachmentidData\" :key=\"index\">{{ item.attachmentid }}</li>\n    </ul>\n\n    <h2>Key 3 Data:</h2>\n    <ul>\n      <li v-for=\"(item, index) in key3Data\" :key=\"index\">{{ item.key3 }}</li>\n    </ul>\n\n    <h2>Response Data:</h2>\n    <ul>\n      <li v-for=\"(arr, index) in responseData\" :key=\"index\">\n        <ul>\n          <li v-for=\"(item, idx) in arr\" :key=\"idx\">{{ item }}</li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    //'Authorization': `Bearer ${token}`,\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json', // Example of another header\n  },\n});\n\nexport default {\n    //[collectionobjectid, attachmentid, file_createddate_str, \n    //image_file, catalogeddate_str, collection_desc, \n    //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      collectionobjectidData: [],\n      attachmentidData: [],\n      filecreateddateData: [],\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n  mounted() {\n    axiosInstance.get('collection_images')\n      .then(response => {\n\n         const arrayOfArrays = response.data;\n         console.log(response.data)\n\n         // Map each inner array to the desired key\n        this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectid: arr[0] }));\n        this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentid: arr[1] }));\n        this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddate: arr[2] }));\n        this.imagefileData = arrayOfArrays.map(arr => ({ imagefile: arr[3] }));\n        this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddate: arr[4] }));\n        this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondesc: arr[5] }));\n        this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstart: arr[6] }));\n        this.agentnameData = arrayOfArrays.map(arr => ({ agentname: arr[7] }));\n\n        // You can also append the entire response data to a single key if needed\n        this.responseData = arrayOfArrays;\n        console.log(\"test\")\n        console.log(JSON.stringify(this.imagefileData))\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  },\n};\n</script>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,KAAI,GAAI,QAAO,GAAI,0CAA0C;;AAEnE;AACA,MAAMC,aAAY,GAAIF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE,sBAAsB;EAC/BC,OAAO,EAAE;IACP;IACA,eAAe,EAAG,GAAEJ,KAAM,EAAC;IAC3B,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;AAEF,eAAe;EACX;EACA;EACA;EACFK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,sBAAsB,EAAE,EAAE;MAC1BC,gBAAgB,EAAE,EAAE;MACpBC,mBAAmB,EAAE,EAAE;MACvBC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE,EAAE;MACrBC,kBAAkB,EAAE,EAAE;MACtBC,wBAAwB,EAAE,EAAE;MAC5BC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRd,aAAa,CAACe,GAAG,CAAC,mBAAmB,EAClCC,IAAI,CAACC,QAAO,IAAK;MAEf,MAAMC,aAAY,GAAID,QAAQ,CAACb,IAAI;MACnCe,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACb,IAAI;;MAEzB;MACD,IAAI,CAACE,sBAAqB,GAAIY,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEC,kBAAkB,EAAED,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MACxF,IAAI,CAACf,gBAAe,GAAIW,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEE,YAAY,EAAEF,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAC5E,IAAI,CAACd,mBAAkB,GAAIU,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEG,eAAe,EAAEH,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAClF,IAAI,CAACb,aAAY,GAAIS,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEI,SAAS,EAAEJ,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MACtE,IAAI,CAACZ,iBAAgB,GAAIQ,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEK,aAAa,EAAEL,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAC9E,IAAI,CAACX,kBAAiB,GAAIO,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEM,cAAc,EAAEN,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAChF,IAAI,CAACV,wBAAuB,GAAIM,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEO,oBAAoB,EAAEP,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MAC5F,IAAI,CAACT,aAAY,GAAIK,aAAa,CAACG,GAAG,CAACC,GAAE,KAAM;QAAEQ,SAAS,EAAER,GAAG,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;;MAEtE;MACA,IAAI,CAACjB,YAAW,GAAIa,aAAa;MACjCC,OAAO,CAACC,GAAG,CAAC,MAAM;MAClBD,OAAO,CAACC,GAAG,CAACW,IAAI,CAACC,SAAS,CAAC,IAAI,CAACvB,aAAa,CAAC;IAChD,CAAC,EACAwB,KAAK,CAACC,KAAI,IAAK;MACdf,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}