{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0f7e9296\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Collections Dashboard\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"stacked-bar-chart\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_3]);\n}","map":{"version":3,"names":["_createElementVNode","id","_hoisted_1","_hoisted_2","_createElementBlock","_hoisted_3"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/explorerDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Collections Dashboard</h1>\n    <div id=\"stacked-bar-chart\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Plotly from 'plotly.js/lib/core';\n\nexport default {\n  data() {\n    return {\n      totalCollections: 0\n    };\n  },\n  mounted() {\n    axios.get('http://0.0.0.0:8000/collection/')\n      .then(response => {\n        // Assuming your API response contains a 'count' field for total collections\n        this.collectionsData = response.data;\n        console.log(this.collectionsData)\n        console.log(this.collectionsData.Date)\n\n        this.createBarChart();\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  },\n  methods: {\n    createBarChart(){\n      \n      const aggregatedAmounts = {};\n      const collectionsdata = this.collectionsData\n\n      for(let i = 0; i < collectionsdata['Date'].length; i++){\n        const year = collectionsdata['Date'][i].substring(0,4);\n        console.log(year)\n        if(!aggregatedAmounts[year]){\n          aggregatedAmounts[year] = collectionsdata['Collections'][i];\n        } else{\n          aggregatedAmounts[year] += collectionsdata['Collections'][i];\n        }\n      }\n      \n      console.log(aggregatedAmounts)\n      const xValues = Object.keys(aggregatedAmounts);\n      const yValues = Object.values(aggregatedAmounts);\n\n      const data = [{\n        x: xValues,\n        y: yValues,\n        type: 'bar'\n      }];\n\n      console.log(data)\n\n      const layout = {\n        title: 'Collections Over Time (by Year)',\n        xaxis: { title: 'Year cataloged' },\n        yaxis: { title: 'Total number of specimens digitized' },\n        barmode: 'stack' // Stacked bar mode\n      };\n\n      Plotly.newPlot('stacked-bar-chart', data, layout);\n    }\n  }\n};\n</script>\n\n\n\n<style scoped>\n/* Add any custom styles here */\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAA8B,YAA1B,uBAAqB;gEACzBA,mBAAA,CAAkC;EAA7BC,EAAE,EAAC;AAAmB;oBAD3BC,UAA8B,EAC9BC,UAAkC,C;;uBAFpCC,mBAAA,CAGM,aAJR,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}