{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Botany collecting events around the world\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  ref: \"mapContainer\",\n  style: {\n    \"width\": \"60%\",\n    \"height\": \"800px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","ref","style","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/explorerMap.vue"],"sourcesContent":["<template>\n  <h1>Botany collecting events around the world</h1>\n  <div ref=\"mapContainer\" style=\"width: 60%; height: 800px;\"></div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport axios from 'axios';\nimport markerImage from '@/assets/marker.png';\n\nconst mapContainer = ref(null);\nlet map;\nlet popupString;\nlet markers = [];\n\nonMounted(() => {\n   map = L.map(mapContainer.value).setView([0,0],2);\n    //map = L.map(mapContainer.value).fitWorld();\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; OpenStreetMap contributors',\n  }).addTo(map);\n\n//   const bounds = [[-90, -180], [90, 180]]\n//   map.fitBounds(bounds);\n\n    fetchCoordinates();\n\n});\n\nasync function fetchCoordinates(){\n    var myIcon = L.icon({\n    //iconUrl: require('./src/assets/marker.png'),\n    iconUrl: markerImage,\n    //iconSize: [38, 95],\n    iconAnchor: [22, 94],\n    popupAnchor: [-3, -76],\n    //shadowUrl: ,\n    //shadowSize: [68, 95],\n    //shadowAnchor: [22, 94]\n});\n\n    try {\n        const response = await axios.get('http://0.0.0.0:8000/collection_map/');\n        let data = response.data; // Assuming the API response is an array of marker data\n        console.log(data)\n        data = JSON.parse(data)\n        // console.log(typeof(data2))\n        // console.log(data2.length)\n        // console.log(data2[0])\n        data.forEach(item => {\n            // console.log(item)\n            // console.log(item.Latitude)\n            // console.log(parseFloat(item.Latitude))\n            const marker = L.marker([parseFloat(item.Latitude), parseFloat(item.Longitude)], {icon: myIcon}).addTo(map);\n            if (item.Remarks!=null){\n              popupString = \"<i>\\\"\" + item.Remarks + \"\\\"</i><br>\" + item.Geoname + \"<br>\" + item.Start\n            }\n            else{\n              popupString = item.Geoname + \"<br>\" + item.Start\n            }\n            //marker.bindPopup('<br>Hi CAS!</br>')\n            marker.bindPopup(popupString)\n            markers.push(marker);\n                    \n    });\n  } catch (error) {\n        console.error('Error fetching data:', error);\n  }    \n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";gCACEA,mBAAA,CAAkD,YAA9C,2CAAyC;;EACxCC,GAAG,EAAC,cAAc;EAACC,KAAkC,EAAlC;IAAA;IAAA;EAAA;;;uBAF1BC,mBAAA,CAAAC,SAAA,SACEC,UAAkD,EAClDL,mBAAA,CAAiE,OAAjEM,UAAiE,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}