{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Collection Data Images:\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" <div v-for=\\\"(item, collectionid) in collectionobjectData\\\" :key=\\\"collectionid\\\">{{ item.collectionobjectidData }}> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.collectionobjectData, (innerDict, outerKey) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: outerKey\n    }, [_createElementVNode(\"h2\", null, \"Collection object \" + _toDisplayString(outerKey), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.item, (image, filename) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: filename\n      }, [_createElementVNode(\"img\", {\n        src: image.image_file,\n        alt: filename\n      }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"p\", null, _toDisplayString(image.collectiondesc), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(image.file_createddate), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(image.collectingevent_start), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$data","collectionobjectData","innerDict","outerKey","key","_toDisplayString","_ctx","item","image","filename","src","image_file","alt","_hoisted_2","collectiondesc","file_createddate","collectingevent_start"],"sources":["/home/zhu/Documents/github/explorer_front/explorer_front_app/src/components/DjangoData.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Collection Data Images:</h1>\n    <!-- <div v-for=\"(item, collectionid) in collectionobjectData\" :key=\"collectionid\">{{ item.collectionobjectidData }}> -->\n    <div v-for=\"(innerDict, outerKey) in collectionobjectData\" :key=\"outerKey\">\n        <h2>Collection object {{ outerKey }}</h2>\n        <div v-for=\"(image, filename) in item\" :key=\"filename\">\n            <img :src=\"image.image_file\" :alt=\"filename\" />\n            <p>{{ image.collectiondesc }}</p>\n            <p>{{ image.file_createddate}}</p>\n            <p>{{ image.collectingevent_start }}</p>\n        </div>\n    </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// Assuming you have a token or authentication key\nconst token = 'Token ' + \"b38c2d04f1eeabb743e5ecbe671897cae1794974\";\n\n// Set up Axios instance with default headers\nconst axiosInstance = axios.create({\n  baseURL: 'http://0.0.0.0:8000/',\n  headers: {\n    'Authorization': `${token}`,\n    'Content-Type': 'application/json', // Example of another header\n  },\n});\n\nexport default {\n    //[collectionobjectid, attachmentid, file_createddate_str, \n    //image_file, catalogeddate_str, collection_desc, \n    //collectingevent_start_str, agent_name]\n  data() {\n    return {\n      responseData: [],\n      collectionobjectData: {},\n      collectionobjectidData: {},\n      attachmentidData: {},\n      filecreateddateData: {},\n      imagefileData: [],\n      catalogeddateData: [],\n      collectiondescData: [],\n      collectingeventstartData: [],\n      agentnameData: []\n    };\n  },\n\n\nmounted(){\n        axiosInstance.get('collection_images')\n        .then(response =>{\n\n        // response.data is a dictionary of dictionaries of format: \n         /* collectiondictionary[collectionobjectid] = {\n            'attachmentid': value,\n            'file_createddate': value,\n            'image_file': value,\n            'catalogeddate': value,\n            'collectiondesct': value,\n            'collectingevent_start': value,\n            'agentname_collection': value,\n            'agentname_image': value\n         } */\n        \n            let jsonObject = JSON.parse(response.data);\n            this.collectionobjectData = jsonObject\n            console.log(jsonObject)\n            console.log(Object.keys(jsonObject))\n            console.log(Object.getOwnPropertyNames(jsonObject).length)\n\n         // Map each inner array to the desired key\n          \n\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n    }\n//   mounted() {\n//     axiosInstance.get('collection_images')\n//       .then(response => {\n\n//          const arrayOfArrays = response.data;\n//          console.log(response.data)\n\n//          // Map each inner array to the desired key\n//         this.collectionobjectidData = arrayOfArrays.map(arr => ({ collectionobjectid: arr[0] }));\n//         this.attachmentidData = arrayOfArrays.map(arr => ({ attachmentid: arr[1] }));\n//         this.filecreateddateData = arrayOfArrays.map(arr => ({ filecreateddate: arr[2] }));\n//         this.imagefileData = arrayOfArrays.map(arr => ({ imagefile: arr[3] }));\n//         this.catalogeddateData = arrayOfArrays.map(arr => ({ catalogeddate: arr[4] }));\n//         this.collectiondescData = arrayOfArrays.map(arr => ({ collectiondesc: arr[5] }));\n//         this.collectingeventstartData = arrayOfArrays.map(arr => ({ collectingeventstart: arr[6] }));\n//         this.agentnameData = arrayOfArrays.map(arr => ({ agentname: arr[7] }));\n\n//         // You can also append the entire response data to a single key if needed\n//         this.responseData = arrayOfArrays;\n//         console.log(\"test\")\n//         console.log(JSON.stringify(this.imagefileData))\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//       });\n//   },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAgC,YAA5B,yBAAuB;mBAF/B;;uBACEC,mBAAA,CAYQ,cAXNC,UAAgC,EAChCC,mBAAA,0HAAyH,G,kBACzHF,mBAAA,CAQMG,SAAA,QAZVC,WAAA,CAIyCC,KAAA,CAAAC,oBAAoB,EAJ7D,CAIiBC,SAAS,EAAEC,QAAQ;yBAAhCR,mBAAA,CAQM;MARsDS,GAAG,EAAED;IAAQ,IACrET,mBAAA,CAAyC,YAArC,oBAAkB,GAAAW,gBAAA,CAAGF,QAAQ,mB,kBACjCR,mBAAA,CAKMG,SAAA,QAXdC,WAAA,CAMyCO,IAAA,CAAAC,IAAI,EAN7C,CAMqBC,KAAK,EAAEC,QAAQ;2BAA5Bd,mBAAA,CAKM;QALkCS,GAAG,EAAEK;MAAQ,IACjDf,mBAAA,CAA+C;QAAzCgB,GAAG,EAAEF,KAAK,CAACG,UAAU;QAAGC,GAAG,EAAEH;8BAP/CI,UAAA,GAQYnB,mBAAA,CAAiC,WAAAW,gBAAA,CAA3BG,KAAK,CAACM,cAAc,kBAC1BpB,mBAAA,CAAkC,WAAAW,gBAAA,CAA5BG,KAAK,CAACO,gBAAgB,kBAC5BrB,mBAAA,CAAwC,WAAAW,gBAAA,CAAlCG,KAAK,CAACQ,qBAAqB,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}