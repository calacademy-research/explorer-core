
services:
#  django:
#    build:
#      context: .
#      dockerfile: Dockerfile_gcr
#    container_name: django
#    volumes:
#      - ".:/collections_app_api"
#    expose:
#      - "8000"
#    env_file:
#      - .venv
#    depends_on:
#      - db

  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: nginx_compose
    ports:
      - "80:80"   #expose nginx HTTP port
      #- "443:443" #HTTPS port
    volumes:
      - ./collections_app_api/static/:/collections_app/staticfiles/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      #- ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      -  web
    networks:
      - collectionbackend

  db:
    restart: unless-stopped
    image: mysql:8.0
    environment:
#      MYSQL_ROOT_PASSWORD: 'djangoAPI@CAScollections'
#      MYSQL_DATABASE: 'collectionsdb'
#      MYSQL_USER: 'django'
#      MYSQL_PASSWORD: 'django@CAS!000'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    #command: --host_cache_size=0
    command: --bind-address=0.0.0.0  # Ensures MySQL listens on all interfaces
    container_name: mysql_compose
    volumes:
      - mysql_data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/my.cnf
      #- /home/zhu/dumps/Dump20240827_new:/docker-entrypoint-initdb.d
      - ./collections_app_api/sql_dump:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - collectionbackend
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10

  web:
    image: explorer-core
    build:
      context: .
      dockerfile: Dockerfile_nongcr
    volumes:
      - .:/collections_app
      #- /static
    env_file:
      - .env
    command: >
      bash -c "
      /wait-for-it.sh db:3306 -- /venv/bin/python manage.py migrate && 
      /venv/bin/gunicorn explorer-core.wsgi:application --bind 0.0.0.0:8001 --timeout 30
      "
    depends_on:
      - db
    ports:
      - "8001:8001"   #expose gunicorn port
    environment:
      - DJANGO_SETTINGS_MODULE=explorer-core.settings_test
      - DATABASE_URL=${DATABASE_URL}
      #- DATABASE_HOST=db
    networks:
      - collectionbackend

volumes:
#  static_volume:
  mysql_data:

networks:
  collectionbackend:
    driver: bridge